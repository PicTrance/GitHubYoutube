

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun May 28 22:27:03 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F18855
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    30                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    31                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text13,local,class=CODE,merge=1,delta=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2
    40                           	psect	text18,local,class=CODE,merge=1,delta=2
    41                           	psect	text19,local,class=CODE,merge=1,delta=2
    42                           	psect	text20,local,class=CODE,merge=1,delta=2
    43                           	psect	text21,local,class=CODE,merge=1,delta=2
    44                           	psect	text22,local,class=CODE,merge=1,delta=2
    45                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text24,local,class=CODE,merge=1,delta=2
    47                           	psect	text25,local,class=CODE,merge=1,delta=2
    48                           	psect	text26,local,class=CODE,merge=1,delta=2
    49                           	psect	text27,local,class=CODE,merge=1,delta=2
    50                           	psect	text28,local,class=CODE,merge=1,delta=2
    51                           	psect	text29,local,class=CODE,merge=1,delta=2
    52                           	psect	text30,local,class=CODE,merge=1,delta=2
    53                           	psect	text31,local,class=CODE,merge=1,delta=2
    54                           	psect	text32,local,class=CODE,merge=1,inline,delta=2
    55                           	psect	text33,local,class=CODE,merge=1,delta=2
    56                           	psect	text34,local,class=CODE,merge=1,delta=2
    57                           	psect	text35,local,class=CODE,merge=1,delta=2
    58                           	psect	text36,local,class=CODE,merge=1,inline,delta=2
    59                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    60                           	psect	text38,local,class=CODE,merge=1,delta=2
    61                           	psect	text39,local,class=CODE,merge=1,delta=2
    62                           	psect	text40,local,class=CODE,merge=1,delta=2
    63                           	psect	text41,local,class=CODE,merge=1,delta=2
    64                           	psect	text42,local,class=CODE,merge=1,delta=2
    65                           	psect	text43,local,class=CODE,merge=1,delta=2
    66                           	psect	text44,local,class=CODE,merge=1,delta=2
    67                           	psect	text45,local,class=CODE,merge=1,delta=2
    68                           	psect	text46,local,class=CODE,merge=1,delta=2
    69                           	psect	text47,local,class=CODE,merge=1,delta=2
    70                           	psect	text48,local,class=CODE,merge=1,delta=2
    71                           	psect	text49,local,class=CODE,merge=1,delta=2
    72                           	psect	text50,local,class=CODE,merge=1,delta=2
    73                           	psect	text51,local,class=CODE,merge=1,delta=2
    74                           	psect	text52,local,class=CODE,merge=1,delta=2
    75                           	psect	text53,local,class=CODE,merge=1,delta=2
    76                           	psect	text54,local,class=CODE,merge=1,inline,delta=2
    77                           	psect	text55,local,class=CODE,merge=1,inline,delta=2
    78                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
    79                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    80                           	psect	text58,local,class=CODE,merge=1,inline,delta=2
    81                           	psect	text59,local,class=CODE,merge=1,inline,delta=2
    82                           	psect	text60,local,class=CODE,merge=1,inline,delta=2
    83                           	psect	text61,local,class=CODE,merge=1,delta=2
    84                           	psect	text62,local,class=CODE,merge=1,delta=2
    85                           	psect	text63,local,class=CODE,merge=1,delta=2
    86                           	psect	text64,local,class=CODE,merge=1,delta=2
    87                           	psect	text65,local,class=CODE,merge=1,delta=2
    88                           	psect	text66,local,class=CODE,merge=1,delta=2
    89                           	psect	text67,local,class=CODE,merge=1,delta=2
    90                           	psect	text68,local,class=CODE,merge=1,delta=2
    91                           	psect	text69,local,class=CODE,merge=1,delta=2
    92                           	psect	text70,local,class=CODE,merge=1,delta=2
    93                           	psect	text71,local,class=CODE,merge=1,inline,delta=2
    94                           	psect	text72,local,class=CODE,merge=1,inline,delta=2
    95                           	psect	text73,local,class=CODE,merge=1,inline,delta=2
    96                           	psect	text74,local,class=CODE,merge=1,delta=2
    97                           	psect	text75,local,class=CODE,merge=1,inline,delta=2
    98                           	psect	text76,local,class=CODE,merge=1,inline,delta=2
    99                           	psect	text77,local,class=CODE,merge=1,inline,delta=2
   100                           	psect	text78,local,class=CODE,merge=1,delta=2
   101                           	psect	text79,local,class=CODE,merge=1,delta=2
   102                           	psect	text80,local,class=CODE,merge=1,delta=2
   103                           	psect	text81,local,class=CODE,merge=1,delta=2
   104                           	psect	text82,local,class=CODE,merge=1,delta=2
   105                           	psect	text83,local,class=CODE,merge=1,delta=2
   106                           	psect	text84,local,class=CODE,merge=1,delta=2
   107                           	psect	text85,local,class=CODE,merge=1,delta=2
   108                           	psect	text86,local,class=CODE,merge=1,delta=2
   109                           	psect	text87,local,class=CODE,merge=1,delta=2
   110                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   111                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   112                           	dabs	1,0x7E,2
   113  0000                     
   114                           ; Generated 19/07/2022 GMT
   115                           ; 
   116                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   117                           ; All rights reserved.
   118                           ; 
   119                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   120                           ; 
   121                           ; Redistribution and use in source and binary forms, with or without modification, are
   122                           ; permitted provided that the following conditions are met:
   123                           ; 
   124                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   125                           ;        conditions and the following disclaimer.
   126                           ; 
   127                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   128                           ;        of conditions and the following disclaimer in the documentation and/or other
   129                           ;        materials provided with the distribution. Publication is not required when
   130                           ;        this file is used in an embedded application.
   131                           ; 
   132                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   133                           ;        software without specific prior written permission.
   134                           ; 
   135                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   136                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   137                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   138                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   139                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   140                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   141                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   142                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   143                           ; 
   144                           ; 
   145                           ; Code-generator required, PIC16F18855 Definitions
   146                           ; 
   147                           ; SFR Addresses
   148  0000                     	;# 
   149  0001                     	;# 
   150  0002                     	;# 
   151  0003                     	;# 
   152  0004                     	;# 
   153  0005                     	;# 
   154  0006                     	;# 
   155  0007                     	;# 
   156  0008                     	;# 
   157  0009                     	;# 
   158  000A                     	;# 
   159  000B                     	;# 
   160  000C                     	;# 
   161  000D                     	;# 
   162  000E                     	;# 
   163  0010                     	;# 
   164  0011                     	;# 
   165  0012                     	;# 
   166  0013                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  001C                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  008C                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008E                     	;# 
   181  008F                     	;# 
   182  0090                     	;# 
   183  0090                     	;# 
   184  0091                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0110                     	;# 
   203  0110                     	;# 
   204  0111                     	;# 
   205  0112                     	;# 
   206  0112                     	;# 
   207  0113                     	;# 
   208  0114                     	;# 
   209  0114                     	;# 
   210  0115                     	;# 
   211  0116                     	;# 
   212  0116                     	;# 
   213  0117                     	;# 
   214  0119                     	;# 
   215  0119                     	;# 
   216  0119                     	;# 
   217  011A                     	;# 
   218  011A                     	;# 
   219  011A                     	;# 
   220  011B                     	;# 
   221  011B                     	;# 
   222  011B                     	;# 
   223  011B                     	;# 
   224  011B                     	;# 
   225  011C                     	;# 
   226  011C                     	;# 
   227  011C                     	;# 
   228  011D                     	;# 
   229  011D                     	;# 
   230  011D                     	;# 
   231  011E                     	;# 
   232  011E                     	;# 
   233  011E                     	;# 
   234  011F                     	;# 
   235  011F                     	;# 
   236  011F                     	;# 
   237  011F                     	;# 
   238  011F                     	;# 
   239  018C                     	;# 
   240  018D                     	;# 
   241  018E                     	;# 
   242  018F                     	;# 
   243  0190                     	;# 
   244  0191                     	;# 
   245  0192                     	;# 
   246  0196                     	;# 
   247  0197                     	;# 
   248  0198                     	;# 
   249  0199                     	;# 
   250  019A                     	;# 
   251  019B                     	;# 
   252  019C                     	;# 
   253  020C                     	;# 
   254  020C                     	;# 
   255  020D                     	;# 
   256  020E                     	;# 
   257  020F                     	;# 
   258  020F                     	;# 
   259  0210                     	;# 
   260  0210                     	;# 
   261  0211                     	;# 
   262  0211                     	;# 
   263  0212                     	;# 
   264  0212                     	;# 
   265  0213                     	;# 
   266  0214                     	;# 
   267  0215                     	;# 
   268  0215                     	;# 
   269  0216                     	;# 
   270  0216                     	;# 
   271  0217                     	;# 
   272  0217                     	;# 
   273  0218                     	;# 
   274  0218                     	;# 
   275  0219                     	;# 
   276  021A                     	;# 
   277  021B                     	;# 
   278  021B                     	;# 
   279  021C                     	;# 
   280  021C                     	;# 
   281  021D                     	;# 
   282  021D                     	;# 
   283  021E                     	;# 
   284  021F                     	;# 
   285  028C                     	;# 
   286  028C                     	;# 
   287  028D                     	;# 
   288  028D                     	;# 
   289  028E                     	;# 
   290  028F                     	;# 
   291  0290                     	;# 
   292  0290                     	;# 
   293  0291                     	;# 
   294  0292                     	;# 
   295  0292                     	;# 
   296  0293                     	;# 
   297  0293                     	;# 
   298  0294                     	;# 
   299  0295                     	;# 
   300  0296                     	;# 
   301  0296                     	;# 
   302  0297                     	;# 
   303  0298                     	;# 
   304  0298                     	;# 
   305  0299                     	;# 
   306  0299                     	;# 
   307  029A                     	;# 
   308  029B                     	;# 
   309  029C                     	;# 
   310  029C                     	;# 
   311  029D                     	;# 
   312  030C                     	;# 
   313  030C                     	;# 
   314  030D                     	;# 
   315  030E                     	;# 
   316  030F                     	;# 
   317  0310                     	;# 
   318  0310                     	;# 
   319  0311                     	;# 
   320  0312                     	;# 
   321  0313                     	;# 
   322  0314                     	;# 
   323  0314                     	;# 
   324  0315                     	;# 
   325  0316                     	;# 
   326  0317                     	;# 
   327  0318                     	;# 
   328  0318                     	;# 
   329  0319                     	;# 
   330  031A                     	;# 
   331  031B                     	;# 
   332  031C                     	;# 
   333  031C                     	;# 
   334  031D                     	;# 
   335  031E                     	;# 
   336  031F                     	;# 
   337  038C                     	;# 
   338  038C                     	;# 
   339  038D                     	;# 
   340  038E                     	;# 
   341  0390                     	;# 
   342  0390                     	;# 
   343  0391                     	;# 
   344  0392                     	;# 
   345  040C                     	;# 
   346  040D                     	;# 
   347  040E                     	;# 
   348  040F                     	;# 
   349  0410                     	;# 
   350  0411                     	;# 
   351  0416                     	;# 
   352  0416                     	;# 
   353  0417                     	;# 
   354  0418                     	;# 
   355  0418                     	;# 
   356  0419                     	;# 
   357  041A                     	;# 
   358  041A                     	;# 
   359  041B                     	;# 
   360  041C                     	;# 
   361  041C                     	;# 
   362  041D                     	;# 
   363  041E                     	;# 
   364  041F                     	;# 
   365  048C                     	;# 
   366  048C                     	;# 
   367  048D                     	;# 
   368  048E                     	;# 
   369  048F                     	;# 
   370  048F                     	;# 
   371  0490                     	;# 
   372  0491                     	;# 
   373  0492                     	;# 
   374  0492                     	;# 
   375  0493                     	;# 
   376  0494                     	;# 
   377  0495                     	;# 
   378  0495                     	;# 
   379  0496                     	;# 
   380  0497                     	;# 
   381  0498                     	;# 
   382  0499                     	;# 
   383  049A                     	;# 
   384  049B                     	;# 
   385  049C                     	;# 
   386  049D                     	;# 
   387  050C                     	;# 
   388  050C                     	;# 
   389  050D                     	;# 
   390  050E                     	;# 
   391  050F                     	;# 
   392  050F                     	;# 
   393  0510                     	;# 
   394  0511                     	;# 
   395  0512                     	;# 
   396  0512                     	;# 
   397  0513                     	;# 
   398  0514                     	;# 
   399  0515                     	;# 
   400  0515                     	;# 
   401  0516                     	;# 
   402  0517                     	;# 
   403  0518                     	;# 
   404  0519                     	;# 
   405  051A                     	;# 
   406  051B                     	;# 
   407  051C                     	;# 
   408  051D                     	;# 
   409  058C                     	;# 
   410  058C                     	;# 
   411  058D                     	;# 
   412  058E                     	;# 
   413  058F                     	;# 
   414  058F                     	;# 
   415  0590                     	;# 
   416  0591                     	;# 
   417  0592                     	;# 
   418  0593                     	;# 
   419  060C                     	;# 
   420  060D                     	;# 
   421  060E                     	;# 
   422  060F                     	;# 
   423  0610                     	;# 
   424  0611                     	;# 
   425  0612                     	;# 
   426  0613                     	;# 
   427  0614                     	;# 
   428  0616                     	;# 
   429  0617                     	;# 
   430  0618                     	;# 
   431  0619                     	;# 
   432  061A                     	;# 
   433  061B                     	;# 
   434  061C                     	;# 
   435  061D                     	;# 
   436  061E                     	;# 
   437  068C                     	;# 
   438  068D                     	;# 
   439  068E                     	;# 
   440  068F                     	;# 
   441  0690                     	;# 
   442  0691                     	;# 
   443  0692                     	;# 
   444  0693                     	;# 
   445  0694                     	;# 
   446  070C                     	;# 
   447  070D                     	;# 
   448  070E                     	;# 
   449  070F                     	;# 
   450  0710                     	;# 
   451  0711                     	;# 
   452  0712                     	;# 
   453  0713                     	;# 
   454  0714                     	;# 
   455  0716                     	;# 
   456  0717                     	;# 
   457  0718                     	;# 
   458  0719                     	;# 
   459  071A                     	;# 
   460  071B                     	;# 
   461  071C                     	;# 
   462  071D                     	;# 
   463  071E                     	;# 
   464  0796                     	;# 
   465  0797                     	;# 
   466  0798                     	;# 
   467  0799                     	;# 
   468  079A                     	;# 
   469  079B                     	;# 
   470  080C                     	;# 
   471  080D                     	;# 
   472  080E                     	;# 
   473  080F                     	;# 
   474  0810                     	;# 
   475  0811                     	;# 
   476  0812                     	;# 
   477  0813                     	;# 
   478  0814                     	;# 
   479  081A                     	;# 
   480  081B                     	;# 
   481  081C                     	;# 
   482  081D                     	;# 
   483  081E                     	;# 
   484  081F                     	;# 
   485  088C                     	;# 
   486  088D                     	;# 
   487  088E                     	;# 
   488  088F                     	;# 
   489  0890                     	;# 
   490  0891                     	;# 
   491  0892                     	;# 
   492  0893                     	;# 
   493  0895                     	;# 
   494  0896                     	;# 
   495  0897                     	;# 
   496  0898                     	;# 
   497  0899                     	;# 
   498  089A                     	;# 
   499  089B                     	;# 
   500  090C                     	;# 
   501  090E                     	;# 
   502  090F                     	;# 
   503  091F                     	;# 
   504  091F                     	;# 
   505  098F                     	;# 
   506  098F                     	;# 
   507  0990                     	;# 
   508  0991                     	;# 
   509  0992                     	;# 
   510  0993                     	;# 
   511  0994                     	;# 
   512  0995                     	;# 
   513  0996                     	;# 
   514  0997                     	;# 
   515  0E0F                     	;# 
   516  0E10                     	;# 
   517  0E11                     	;# 
   518  0E12                     	;# 
   519  0E13                     	;# 
   520  0E14                     	;# 
   521  0E15                     	;# 
   522  0E16                     	;# 
   523  0E17                     	;# 
   524  0E18                     	;# 
   525  0E19                     	;# 
   526  0E1A                     	;# 
   527  0E1B                     	;# 
   528  0E1C                     	;# 
   529  0E1D                     	;# 
   530  0E1E                     	;# 
   531  0E1F                     	;# 
   532  0E20                     	;# 
   533  0E21                     	;# 
   534  0E22                     	;# 
   535  0E23                     	;# 
   536  0E24                     	;# 
   537  0E25                     	;# 
   538  0E26                     	;# 
   539  0E27                     	;# 
   540  0E28                     	;# 
   541  0E29                     	;# 
   542  0E2A                     	;# 
   543  0E2B                     	;# 
   544  0E2C                     	;# 
   545  0E2D                     	;# 
   546  0E2E                     	;# 
   547  0E2F                     	;# 
   548  0E30                     	;# 
   549  0E31                     	;# 
   550  0E32                     	;# 
   551  0E33                     	;# 
   552  0E34                     	;# 
   553  0E35                     	;# 
   554  0E36                     	;# 
   555  0E37                     	;# 
   556  0E8F                     	;# 
   557  0E90                     	;# 
   558  0E91                     	;# 
   559  0E92                     	;# 
   560  0E93                     	;# 
   561  0E94                     	;# 
   562  0E95                     	;# 
   563  0E96                     	;# 
   564  0E97                     	;# 
   565  0E9C                     	;# 
   566  0E9D                     	;# 
   567  0E9E                     	;# 
   568  0EA1                     	;# 
   569  0EA2                     	;# 
   570  0EA3                     	;# 
   571  0EA4                     	;# 
   572  0EA5                     	;# 
   573  0EA9                     	;# 
   574  0EAA                     	;# 
   575  0EAB                     	;# 
   576  0EAC                     	;# 
   577  0EB1                     	;# 
   578  0EB2                     	;# 
   579  0EB3                     	;# 
   580  0EB8                     	;# 
   581  0EB9                     	;# 
   582  0EBA                     	;# 
   583  0EBB                     	;# 
   584  0EBC                     	;# 
   585  0EBD                     	;# 
   586  0EBE                     	;# 
   587  0EC3                     	;# 
   588  0EC5                     	;# 
   589  0EC6                     	;# 
   590  0EC7                     	;# 
   591  0EC8                     	;# 
   592  0EC9                     	;# 
   593  0ECA                     	;# 
   594  0ECB                     	;# 
   595  0ECC                     	;# 
   596  0F10                     	;# 
   597  0F11                     	;# 
   598  0F12                     	;# 
   599  0F13                     	;# 
   600  0F14                     	;# 
   601  0F15                     	;# 
   602  0F16                     	;# 
   603  0F17                     	;# 
   604  0F18                     	;# 
   605  0F19                     	;# 
   606  0F1A                     	;# 
   607  0F1B                     	;# 
   608  0F1C                     	;# 
   609  0F1D                     	;# 
   610  0F1E                     	;# 
   611  0F1F                     	;# 
   612  0F20                     	;# 
   613  0F21                     	;# 
   614  0F22                     	;# 
   615  0F23                     	;# 
   616  0F24                     	;# 
   617  0F25                     	;# 
   618  0F26                     	;# 
   619  0F27                     	;# 
   620  0F38                     	;# 
   621  0F39                     	;# 
   622  0F3A                     	;# 
   623  0F3B                     	;# 
   624  0F3C                     	;# 
   625  0F3D                     	;# 
   626  0F3E                     	;# 
   627  0F3F                     	;# 
   628  0F40                     	;# 
   629  0F41                     	;# 
   630  0F43                     	;# 
   631  0F44                     	;# 
   632  0F45                     	;# 
   633  0F46                     	;# 
   634  0F47                     	;# 
   635  0F48                     	;# 
   636  0F49                     	;# 
   637  0F4A                     	;# 
   638  0F4B                     	;# 
   639  0F4C                     	;# 
   640  0F4E                     	;# 
   641  0F4F                     	;# 
   642  0F50                     	;# 
   643  0F51                     	;# 
   644  0F52                     	;# 
   645  0F53                     	;# 
   646  0F54                     	;# 
   647  0F55                     	;# 
   648  0F56                     	;# 
   649  0F57                     	;# 
   650  0F65                     	;# 
   651  0F68                     	;# 
   652  0F69                     	;# 
   653  0F6A                     	;# 
   654  0F6B                     	;# 
   655  0FE4                     	;# 
   656  0FE5                     	;# 
   657  0FE6                     	;# 
   658  0FE7                     	;# 
   659  0FE8                     	;# 
   660  0FE9                     	;# 
   661  0FEA                     	;# 
   662  0FEB                     	;# 
   663  0FED                     	;# 
   664  0FEE                     	;# 
   665  0FEF                     	;# 
   666  0000                     	;# 
   667  0001                     	;# 
   668  0002                     	;# 
   669  0003                     	;# 
   670  0004                     	;# 
   671  0005                     	;# 
   672  0006                     	;# 
   673  0007                     	;# 
   674  0008                     	;# 
   675  0009                     	;# 
   676  000A                     	;# 
   677  000B                     	;# 
   678  000C                     	;# 
   679  000D                     	;# 
   680  000E                     	;# 
   681  0010                     	;# 
   682  0011                     	;# 
   683  0012                     	;# 
   684  0013                     	;# 
   685  0016                     	;# 
   686  0017                     	;# 
   687  0018                     	;# 
   688  001C                     	;# 
   689  001C                     	;# 
   690  001D                     	;# 
   691  001D                     	;# 
   692  001E                     	;# 
   693  001F                     	;# 
   694  008C                     	;# 
   695  008C                     	;# 
   696  008D                     	;# 
   697  008E                     	;# 
   698  008E                     	;# 
   699  008F                     	;# 
   700  0090                     	;# 
   701  0090                     	;# 
   702  0091                     	;# 
   703  0093                     	;# 
   704  0094                     	;# 
   705  0095                     	;# 
   706  0096                     	;# 
   707  0097                     	;# 
   708  0098                     	;# 
   709  0099                     	;# 
   710  009A                     	;# 
   711  009B                     	;# 
   712  009C                     	;# 
   713  009D                     	;# 
   714  009E                     	;# 
   715  010C                     	;# 
   716  010D                     	;# 
   717  010E                     	;# 
   718  010E                     	;# 
   719  010F                     	;# 
   720  0110                     	;# 
   721  0110                     	;# 
   722  0111                     	;# 
   723  0112                     	;# 
   724  0112                     	;# 
   725  0113                     	;# 
   726  0114                     	;# 
   727  0114                     	;# 
   728  0115                     	;# 
   729  0116                     	;# 
   730  0116                     	;# 
   731  0117                     	;# 
   732  0119                     	;# 
   733  0119                     	;# 
   734  0119                     	;# 
   735  011A                     	;# 
   736  011A                     	;# 
   737  011A                     	;# 
   738  011B                     	;# 
   739  011B                     	;# 
   740  011B                     	;# 
   741  011B                     	;# 
   742  011B                     	;# 
   743  011C                     	;# 
   744  011C                     	;# 
   745  011C                     	;# 
   746  011D                     	;# 
   747  011D                     	;# 
   748  011D                     	;# 
   749  011E                     	;# 
   750  011E                     	;# 
   751  011E                     	;# 
   752  011F                     	;# 
   753  011F                     	;# 
   754  011F                     	;# 
   755  011F                     	;# 
   756  011F                     	;# 
   757  018C                     	;# 
   758  018D                     	;# 
   759  018E                     	;# 
   760  018F                     	;# 
   761  0190                     	;# 
   762  0191                     	;# 
   763  0192                     	;# 
   764  0196                     	;# 
   765  0197                     	;# 
   766  0198                     	;# 
   767  0199                     	;# 
   768  019A                     	;# 
   769  019B                     	;# 
   770  019C                     	;# 
   771  020C                     	;# 
   772  020C                     	;# 
   773  020D                     	;# 
   774  020E                     	;# 
   775  020F                     	;# 
   776  020F                     	;# 
   777  0210                     	;# 
   778  0210                     	;# 
   779  0211                     	;# 
   780  0211                     	;# 
   781  0212                     	;# 
   782  0212                     	;# 
   783  0213                     	;# 
   784  0214                     	;# 
   785  0215                     	;# 
   786  0215                     	;# 
   787  0216                     	;# 
   788  0216                     	;# 
   789  0217                     	;# 
   790  0217                     	;# 
   791  0218                     	;# 
   792  0218                     	;# 
   793  0219                     	;# 
   794  021A                     	;# 
   795  021B                     	;# 
   796  021B                     	;# 
   797  021C                     	;# 
   798  021C                     	;# 
   799  021D                     	;# 
   800  021D                     	;# 
   801  021E                     	;# 
   802  021F                     	;# 
   803  028C                     	;# 
   804  028C                     	;# 
   805  028D                     	;# 
   806  028D                     	;# 
   807  028E                     	;# 
   808  028F                     	;# 
   809  0290                     	;# 
   810  0290                     	;# 
   811  0291                     	;# 
   812  0292                     	;# 
   813  0292                     	;# 
   814  0293                     	;# 
   815  0293                     	;# 
   816  0294                     	;# 
   817  0295                     	;# 
   818  0296                     	;# 
   819  0296                     	;# 
   820  0297                     	;# 
   821  0298                     	;# 
   822  0298                     	;# 
   823  0299                     	;# 
   824  0299                     	;# 
   825  029A                     	;# 
   826  029B                     	;# 
   827  029C                     	;# 
   828  029C                     	;# 
   829  029D                     	;# 
   830  030C                     	;# 
   831  030C                     	;# 
   832  030D                     	;# 
   833  030E                     	;# 
   834  030F                     	;# 
   835  0310                     	;# 
   836  0310                     	;# 
   837  0311                     	;# 
   838  0312                     	;# 
   839  0313                     	;# 
   840  0314                     	;# 
   841  0314                     	;# 
   842  0315                     	;# 
   843  0316                     	;# 
   844  0317                     	;# 
   845  0318                     	;# 
   846  0318                     	;# 
   847  0319                     	;# 
   848  031A                     	;# 
   849  031B                     	;# 
   850  031C                     	;# 
   851  031C                     	;# 
   852  031D                     	;# 
   853  031E                     	;# 
   854  031F                     	;# 
   855  038C                     	;# 
   856  038C                     	;# 
   857  038D                     	;# 
   858  038E                     	;# 
   859  0390                     	;# 
   860  0390                     	;# 
   861  0391                     	;# 
   862  0392                     	;# 
   863  040C                     	;# 
   864  040D                     	;# 
   865  040E                     	;# 
   866  040F                     	;# 
   867  0410                     	;# 
   868  0411                     	;# 
   869  0416                     	;# 
   870  0416                     	;# 
   871  0417                     	;# 
   872  0418                     	;# 
   873  0418                     	;# 
   874  0419                     	;# 
   875  041A                     	;# 
   876  041A                     	;# 
   877  041B                     	;# 
   878  041C                     	;# 
   879  041C                     	;# 
   880  041D                     	;# 
   881  041E                     	;# 
   882  041F                     	;# 
   883  048C                     	;# 
   884  048C                     	;# 
   885  048D                     	;# 
   886  048E                     	;# 
   887  048F                     	;# 
   888  048F                     	;# 
   889  0490                     	;# 
   890  0491                     	;# 
   891  0492                     	;# 
   892  0492                     	;# 
   893  0493                     	;# 
   894  0494                     	;# 
   895  0495                     	;# 
   896  0495                     	;# 
   897  0496                     	;# 
   898  0497                     	;# 
   899  0498                     	;# 
   900  0499                     	;# 
   901  049A                     	;# 
   902  049B                     	;# 
   903  049C                     	;# 
   904  049D                     	;# 
   905  050C                     	;# 
   906  050C                     	;# 
   907  050D                     	;# 
   908  050E                     	;# 
   909  050F                     	;# 
   910  050F                     	;# 
   911  0510                     	;# 
   912  0511                     	;# 
   913  0512                     	;# 
   914  0512                     	;# 
   915  0513                     	;# 
   916  0514                     	;# 
   917  0515                     	;# 
   918  0515                     	;# 
   919  0516                     	;# 
   920  0517                     	;# 
   921  0518                     	;# 
   922  0519                     	;# 
   923  051A                     	;# 
   924  051B                     	;# 
   925  051C                     	;# 
   926  051D                     	;# 
   927  058C                     	;# 
   928  058C                     	;# 
   929  058D                     	;# 
   930  058E                     	;# 
   931  058F                     	;# 
   932  058F                     	;# 
   933  0590                     	;# 
   934  0591                     	;# 
   935  0592                     	;# 
   936  0593                     	;# 
   937  060C                     	;# 
   938  060D                     	;# 
   939  060E                     	;# 
   940  060F                     	;# 
   941  0610                     	;# 
   942  0611                     	;# 
   943  0612                     	;# 
   944  0613                     	;# 
   945  0614                     	;# 
   946  0616                     	;# 
   947  0617                     	;# 
   948  0618                     	;# 
   949  0619                     	;# 
   950  061A                     	;# 
   951  061B                     	;# 
   952  061C                     	;# 
   953  061D                     	;# 
   954  061E                     	;# 
   955  068C                     	;# 
   956  068D                     	;# 
   957  068E                     	;# 
   958  068F                     	;# 
   959  0690                     	;# 
   960  0691                     	;# 
   961  0692                     	;# 
   962  0693                     	;# 
   963  0694                     	;# 
   964  070C                     	;# 
   965  070D                     	;# 
   966  070E                     	;# 
   967  070F                     	;# 
   968  0710                     	;# 
   969  0711                     	;# 
   970  0712                     	;# 
   971  0713                     	;# 
   972  0714                     	;# 
   973  0716                     	;# 
   974  0717                     	;# 
   975  0718                     	;# 
   976  0719                     	;# 
   977  071A                     	;# 
   978  071B                     	;# 
   979  071C                     	;# 
   980  071D                     	;# 
   981  071E                     	;# 
   982  0796                     	;# 
   983  0797                     	;# 
   984  0798                     	;# 
   985  0799                     	;# 
   986  079A                     	;# 
   987  079B                     	;# 
   988  080C                     	;# 
   989  080D                     	;# 
   990  080E                     	;# 
   991  080F                     	;# 
   992  0810                     	;# 
   993  0811                     	;# 
   994  0812                     	;# 
   995  0813                     	;# 
   996  0814                     	;# 
   997  081A                     	;# 
   998  081B                     	;# 
   999  081C                     	;# 
  1000  081D                     	;# 
  1001  081E                     	;# 
  1002  081F                     	;# 
  1003  088C                     	;# 
  1004  088D                     	;# 
  1005  088E                     	;# 
  1006  088F                     	;# 
  1007  0890                     	;# 
  1008  0891                     	;# 
  1009  0892                     	;# 
  1010  0893                     	;# 
  1011  0895                     	;# 
  1012  0896                     	;# 
  1013  0897                     	;# 
  1014  0898                     	;# 
  1015  0899                     	;# 
  1016  089A                     	;# 
  1017  089B                     	;# 
  1018  090C                     	;# 
  1019  090E                     	;# 
  1020  090F                     	;# 
  1021  091F                     	;# 
  1022  091F                     	;# 
  1023  098F                     	;# 
  1024  098F                     	;# 
  1025  0990                     	;# 
  1026  0991                     	;# 
  1027  0992                     	;# 
  1028  0993                     	;# 
  1029  0994                     	;# 
  1030  0995                     	;# 
  1031  0996                     	;# 
  1032  0997                     	;# 
  1033  0E0F                     	;# 
  1034  0E10                     	;# 
  1035  0E11                     	;# 
  1036  0E12                     	;# 
  1037  0E13                     	;# 
  1038  0E14                     	;# 
  1039  0E15                     	;# 
  1040  0E16                     	;# 
  1041  0E17                     	;# 
  1042  0E18                     	;# 
  1043  0E19                     	;# 
  1044  0E1A                     	;# 
  1045  0E1B                     	;# 
  1046  0E1C                     	;# 
  1047  0E1D                     	;# 
  1048  0E1E                     	;# 
  1049  0E1F                     	;# 
  1050  0E20                     	;# 
  1051  0E21                     	;# 
  1052  0E22                     	;# 
  1053  0E23                     	;# 
  1054  0E24                     	;# 
  1055  0E25                     	;# 
  1056  0E26                     	;# 
  1057  0E27                     	;# 
  1058  0E28                     	;# 
  1059  0E29                     	;# 
  1060  0E2A                     	;# 
  1061  0E2B                     	;# 
  1062  0E2C                     	;# 
  1063  0E2D                     	;# 
  1064  0E2E                     	;# 
  1065  0E2F                     	;# 
  1066  0E30                     	;# 
  1067  0E31                     	;# 
  1068  0E32                     	;# 
  1069  0E33                     	;# 
  1070  0E34                     	;# 
  1071  0E35                     	;# 
  1072  0E36                     	;# 
  1073  0E37                     	;# 
  1074  0E8F                     	;# 
  1075  0E90                     	;# 
  1076  0E91                     	;# 
  1077  0E92                     	;# 
  1078  0E93                     	;# 
  1079  0E94                     	;# 
  1080  0E95                     	;# 
  1081  0E96                     	;# 
  1082  0E97                     	;# 
  1083  0E9C                     	;# 
  1084  0E9D                     	;# 
  1085  0E9E                     	;# 
  1086  0EA1                     	;# 
  1087  0EA2                     	;# 
  1088  0EA3                     	;# 
  1089  0EA4                     	;# 
  1090  0EA5                     	;# 
  1091  0EA9                     	;# 
  1092  0EAA                     	;# 
  1093  0EAB                     	;# 
  1094  0EAC                     	;# 
  1095  0EB1                     	;# 
  1096  0EB2                     	;# 
  1097  0EB3                     	;# 
  1098  0EB8                     	;# 
  1099  0EB9                     	;# 
  1100  0EBA                     	;# 
  1101  0EBB                     	;# 
  1102  0EBC                     	;# 
  1103  0EBD                     	;# 
  1104  0EBE                     	;# 
  1105  0EC3                     	;# 
  1106  0EC5                     	;# 
  1107  0EC6                     	;# 
  1108  0EC7                     	;# 
  1109  0EC8                     	;# 
  1110  0EC9                     	;# 
  1111  0ECA                     	;# 
  1112  0ECB                     	;# 
  1113  0ECC                     	;# 
  1114  0F10                     	;# 
  1115  0F11                     	;# 
  1116  0F12                     	;# 
  1117  0F13                     	;# 
  1118  0F14                     	;# 
  1119  0F15                     	;# 
  1120  0F16                     	;# 
  1121  0F17                     	;# 
  1122  0F18                     	;# 
  1123  0F19                     	;# 
  1124  0F1A                     	;# 
  1125  0F1B                     	;# 
  1126  0F1C                     	;# 
  1127  0F1D                     	;# 
  1128  0F1E                     	;# 
  1129  0F1F                     	;# 
  1130  0F20                     	;# 
  1131  0F21                     	;# 
  1132  0F22                     	;# 
  1133  0F23                     	;# 
  1134  0F24                     	;# 
  1135  0F25                     	;# 
  1136  0F26                     	;# 
  1137  0F27                     	;# 
  1138  0F38                     	;# 
  1139  0F39                     	;# 
  1140  0F3A                     	;# 
  1141  0F3B                     	;# 
  1142  0F3C                     	;# 
  1143  0F3D                     	;# 
  1144  0F3E                     	;# 
  1145  0F3F                     	;# 
  1146  0F40                     	;# 
  1147  0F41                     	;# 
  1148  0F43                     	;# 
  1149  0F44                     	;# 
  1150  0F45                     	;# 
  1151  0F46                     	;# 
  1152  0F47                     	;# 
  1153  0F48                     	;# 
  1154  0F49                     	;# 
  1155  0F4A                     	;# 
  1156  0F4B                     	;# 
  1157  0F4C                     	;# 
  1158  0F4E                     	;# 
  1159  0F4F                     	;# 
  1160  0F50                     	;# 
  1161  0F51                     	;# 
  1162  0F52                     	;# 
  1163  0F53                     	;# 
  1164  0F54                     	;# 
  1165  0F55                     	;# 
  1166  0F56                     	;# 
  1167  0F57                     	;# 
  1168  0F65                     	;# 
  1169  0F68                     	;# 
  1170  0F69                     	;# 
  1171  0F6A                     	;# 
  1172  0F6B                     	;# 
  1173  0FE4                     	;# 
  1174  0FE5                     	;# 
  1175  0FE6                     	;# 
  1176  0FE7                     	;# 
  1177  0FE8                     	;# 
  1178  0FE9                     	;# 
  1179  0FEA                     	;# 
  1180  0FEB                     	;# 
  1181  0FED                     	;# 
  1182  0FEE                     	;# 
  1183  0FEF                     	;# 
  1184  0000                     	;# 
  1185  0001                     	;# 
  1186  0002                     	;# 
  1187  0003                     	;# 
  1188  0004                     	;# 
  1189  0005                     	;# 
  1190  0006                     	;# 
  1191  0007                     	;# 
  1192  0008                     	;# 
  1193  0009                     	;# 
  1194  000A                     	;# 
  1195  000B                     	;# 
  1196  000C                     	;# 
  1197  000D                     	;# 
  1198  000E                     	;# 
  1199  0010                     	;# 
  1200  0011                     	;# 
  1201  0012                     	;# 
  1202  0013                     	;# 
  1203  0016                     	;# 
  1204  0017                     	;# 
  1205  0018                     	;# 
  1206  001C                     	;# 
  1207  001C                     	;# 
  1208  001D                     	;# 
  1209  001D                     	;# 
  1210  001E                     	;# 
  1211  001F                     	;# 
  1212  008C                     	;# 
  1213  008C                     	;# 
  1214  008D                     	;# 
  1215  008E                     	;# 
  1216  008E                     	;# 
  1217  008F                     	;# 
  1218  0090                     	;# 
  1219  0090                     	;# 
  1220  0091                     	;# 
  1221  0093                     	;# 
  1222  0094                     	;# 
  1223  0095                     	;# 
  1224  0096                     	;# 
  1225  0097                     	;# 
  1226  0098                     	;# 
  1227  0099                     	;# 
  1228  009A                     	;# 
  1229  009B                     	;# 
  1230  009C                     	;# 
  1231  009D                     	;# 
  1232  009E                     	;# 
  1233  010C                     	;# 
  1234  010D                     	;# 
  1235  010E                     	;# 
  1236  010E                     	;# 
  1237  010F                     	;# 
  1238  0110                     	;# 
  1239  0110                     	;# 
  1240  0111                     	;# 
  1241  0112                     	;# 
  1242  0112                     	;# 
  1243  0113                     	;# 
  1244  0114                     	;# 
  1245  0114                     	;# 
  1246  0115                     	;# 
  1247  0116                     	;# 
  1248  0116                     	;# 
  1249  0117                     	;# 
  1250  0119                     	;# 
  1251  0119                     	;# 
  1252  0119                     	;# 
  1253  011A                     	;# 
  1254  011A                     	;# 
  1255  011A                     	;# 
  1256  011B                     	;# 
  1257  011B                     	;# 
  1258  011B                     	;# 
  1259  011B                     	;# 
  1260  011B                     	;# 
  1261  011C                     	;# 
  1262  011C                     	;# 
  1263  011C                     	;# 
  1264  011D                     	;# 
  1265  011D                     	;# 
  1266  011D                     	;# 
  1267  011E                     	;# 
  1268  011E                     	;# 
  1269  011E                     	;# 
  1270  011F                     	;# 
  1271  011F                     	;# 
  1272  011F                     	;# 
  1273  011F                     	;# 
  1274  011F                     	;# 
  1275  018C                     	;# 
  1276  018D                     	;# 
  1277  018E                     	;# 
  1278  018F                     	;# 
  1279  0190                     	;# 
  1280  0191                     	;# 
  1281  0192                     	;# 
  1282  0196                     	;# 
  1283  0197                     	;# 
  1284  0198                     	;# 
  1285  0199                     	;# 
  1286  019A                     	;# 
  1287  019B                     	;# 
  1288  019C                     	;# 
  1289  020C                     	;# 
  1290  020C                     	;# 
  1291  020D                     	;# 
  1292  020E                     	;# 
  1293  020F                     	;# 
  1294  020F                     	;# 
  1295  0210                     	;# 
  1296  0210                     	;# 
  1297  0211                     	;# 
  1298  0211                     	;# 
  1299  0212                     	;# 
  1300  0212                     	;# 
  1301  0213                     	;# 
  1302  0214                     	;# 
  1303  0215                     	;# 
  1304  0215                     	;# 
  1305  0216                     	;# 
  1306  0216                     	;# 
  1307  0217                     	;# 
  1308  0217                     	;# 
  1309  0218                     	;# 
  1310  0218                     	;# 
  1311  0219                     	;# 
  1312  021A                     	;# 
  1313  021B                     	;# 
  1314  021B                     	;# 
  1315  021C                     	;# 
  1316  021C                     	;# 
  1317  021D                     	;# 
  1318  021D                     	;# 
  1319  021E                     	;# 
  1320  021F                     	;# 
  1321  028C                     	;# 
  1322  028C                     	;# 
  1323  028D                     	;# 
  1324  028D                     	;# 
  1325  028E                     	;# 
  1326  028F                     	;# 
  1327  0290                     	;# 
  1328  0290                     	;# 
  1329  0291                     	;# 
  1330  0292                     	;# 
  1331  0292                     	;# 
  1332  0293                     	;# 
  1333  0293                     	;# 
  1334  0294                     	;# 
  1335  0295                     	;# 
  1336  0296                     	;# 
  1337  0296                     	;# 
  1338  0297                     	;# 
  1339  0298                     	;# 
  1340  0298                     	;# 
  1341  0299                     	;# 
  1342  0299                     	;# 
  1343  029A                     	;# 
  1344  029B                     	;# 
  1345  029C                     	;# 
  1346  029C                     	;# 
  1347  029D                     	;# 
  1348  030C                     	;# 
  1349  030C                     	;# 
  1350  030D                     	;# 
  1351  030E                     	;# 
  1352  030F                     	;# 
  1353  0310                     	;# 
  1354  0310                     	;# 
  1355  0311                     	;# 
  1356  0312                     	;# 
  1357  0313                     	;# 
  1358  0314                     	;# 
  1359  0314                     	;# 
  1360  0315                     	;# 
  1361  0316                     	;# 
  1362  0317                     	;# 
  1363  0318                     	;# 
  1364  0318                     	;# 
  1365  0319                     	;# 
  1366  031A                     	;# 
  1367  031B                     	;# 
  1368  031C                     	;# 
  1369  031C                     	;# 
  1370  031D                     	;# 
  1371  031E                     	;# 
  1372  031F                     	;# 
  1373  038C                     	;# 
  1374  038C                     	;# 
  1375  038D                     	;# 
  1376  038E                     	;# 
  1377  0390                     	;# 
  1378  0390                     	;# 
  1379  0391                     	;# 
  1380  0392                     	;# 
  1381  040C                     	;# 
  1382  040D                     	;# 
  1383  040E                     	;# 
  1384  040F                     	;# 
  1385  0410                     	;# 
  1386  0411                     	;# 
  1387  0416                     	;# 
  1388  0416                     	;# 
  1389  0417                     	;# 
  1390  0418                     	;# 
  1391  0418                     	;# 
  1392  0419                     	;# 
  1393  041A                     	;# 
  1394  041A                     	;# 
  1395  041B                     	;# 
  1396  041C                     	;# 
  1397  041C                     	;# 
  1398  041D                     	;# 
  1399  041E                     	;# 
  1400  041F                     	;# 
  1401  048C                     	;# 
  1402  048C                     	;# 
  1403  048D                     	;# 
  1404  048E                     	;# 
  1405  048F                     	;# 
  1406  048F                     	;# 
  1407  0490                     	;# 
  1408  0491                     	;# 
  1409  0492                     	;# 
  1410  0492                     	;# 
  1411  0493                     	;# 
  1412  0494                     	;# 
  1413  0495                     	;# 
  1414  0495                     	;# 
  1415  0496                     	;# 
  1416  0497                     	;# 
  1417  0498                     	;# 
  1418  0499                     	;# 
  1419  049A                     	;# 
  1420  049B                     	;# 
  1421  049C                     	;# 
  1422  049D                     	;# 
  1423  050C                     	;# 
  1424  050C                     	;# 
  1425  050D                     	;# 
  1426  050E                     	;# 
  1427  050F                     	;# 
  1428  050F                     	;# 
  1429  0510                     	;# 
  1430  0511                     	;# 
  1431  0512                     	;# 
  1432  0512                     	;# 
  1433  0513                     	;# 
  1434  0514                     	;# 
  1435  0515                     	;# 
  1436  0515                     	;# 
  1437  0516                     	;# 
  1438  0517                     	;# 
  1439  0518                     	;# 
  1440  0519                     	;# 
  1441  051A                     	;# 
  1442  051B                     	;# 
  1443  051C                     	;# 
  1444  051D                     	;# 
  1445  058C                     	;# 
  1446  058C                     	;# 
  1447  058D                     	;# 
  1448  058E                     	;# 
  1449  058F                     	;# 
  1450  058F                     	;# 
  1451  0590                     	;# 
  1452  0591                     	;# 
  1453  0592                     	;# 
  1454  0593                     	;# 
  1455  060C                     	;# 
  1456  060D                     	;# 
  1457  060E                     	;# 
  1458  060F                     	;# 
  1459  0610                     	;# 
  1460  0611                     	;# 
  1461  0612                     	;# 
  1462  0613                     	;# 
  1463  0614                     	;# 
  1464  0616                     	;# 
  1465  0617                     	;# 
  1466  0618                     	;# 
  1467  0619                     	;# 
  1468  061A                     	;# 
  1469  061B                     	;# 
  1470  061C                     	;# 
  1471  061D                     	;# 
  1472  061E                     	;# 
  1473  068C                     	;# 
  1474  068D                     	;# 
  1475  068E                     	;# 
  1476  068F                     	;# 
  1477  0690                     	;# 
  1478  0691                     	;# 
  1479  0692                     	;# 
  1480  0693                     	;# 
  1481  0694                     	;# 
  1482  070C                     	;# 
  1483  070D                     	;# 
  1484  070E                     	;# 
  1485  070F                     	;# 
  1486  0710                     	;# 
  1487  0711                     	;# 
  1488  0712                     	;# 
  1489  0713                     	;# 
  1490  0714                     	;# 
  1491  0716                     	;# 
  1492  0717                     	;# 
  1493  0718                     	;# 
  1494  0719                     	;# 
  1495  071A                     	;# 
  1496  071B                     	;# 
  1497  071C                     	;# 
  1498  071D                     	;# 
  1499  071E                     	;# 
  1500  0796                     	;# 
  1501  0797                     	;# 
  1502  0798                     	;# 
  1503  0799                     	;# 
  1504  079A                     	;# 
  1505  079B                     	;# 
  1506  080C                     	;# 
  1507  080D                     	;# 
  1508  080E                     	;# 
  1509  080F                     	;# 
  1510  0810                     	;# 
  1511  0811                     	;# 
  1512  0812                     	;# 
  1513  0813                     	;# 
  1514  0814                     	;# 
  1515  081A                     	;# 
  1516  081B                     	;# 
  1517  081C                     	;# 
  1518  081D                     	;# 
  1519  081E                     	;# 
  1520  081F                     	;# 
  1521  088C                     	;# 
  1522  088D                     	;# 
  1523  088E                     	;# 
  1524  088F                     	;# 
  1525  0890                     	;# 
  1526  0891                     	;# 
  1527  0892                     	;# 
  1528  0893                     	;# 
  1529  0895                     	;# 
  1530  0896                     	;# 
  1531  0897                     	;# 
  1532  0898                     	;# 
  1533  0899                     	;# 
  1534  089A                     	;# 
  1535  089B                     	;# 
  1536  090C                     	;# 
  1537  090E                     	;# 
  1538  090F                     	;# 
  1539  091F                     	;# 
  1540  091F                     	;# 
  1541  098F                     	;# 
  1542  098F                     	;# 
  1543  0990                     	;# 
  1544  0991                     	;# 
  1545  0992                     	;# 
  1546  0993                     	;# 
  1547  0994                     	;# 
  1548  0995                     	;# 
  1549  0996                     	;# 
  1550  0997                     	;# 
  1551  0E0F                     	;# 
  1552  0E10                     	;# 
  1553  0E11                     	;# 
  1554  0E12                     	;# 
  1555  0E13                     	;# 
  1556  0E14                     	;# 
  1557  0E15                     	;# 
  1558  0E16                     	;# 
  1559  0E17                     	;# 
  1560  0E18                     	;# 
  1561  0E19                     	;# 
  1562  0E1A                     	;# 
  1563  0E1B                     	;# 
  1564  0E1C                     	;# 
  1565  0E1D                     	;# 
  1566  0E1E                     	;# 
  1567  0E1F                     	;# 
  1568  0E20                     	;# 
  1569  0E21                     	;# 
  1570  0E22                     	;# 
  1571  0E23                     	;# 
  1572  0E24                     	;# 
  1573  0E25                     	;# 
  1574  0E26                     	;# 
  1575  0E27                     	;# 
  1576  0E28                     	;# 
  1577  0E29                     	;# 
  1578  0E2A                     	;# 
  1579  0E2B                     	;# 
  1580  0E2C                     	;# 
  1581  0E2D                     	;# 
  1582  0E2E                     	;# 
  1583  0E2F                     	;# 
  1584  0E30                     	;# 
  1585  0E31                     	;# 
  1586  0E32                     	;# 
  1587  0E33                     	;# 
  1588  0E34                     	;# 
  1589  0E35                     	;# 
  1590  0E36                     	;# 
  1591  0E37                     	;# 
  1592  0E8F                     	;# 
  1593  0E90                     	;# 
  1594  0E91                     	;# 
  1595  0E92                     	;# 
  1596  0E93                     	;# 
  1597  0E94                     	;# 
  1598  0E95                     	;# 
  1599  0E96                     	;# 
  1600  0E97                     	;# 
  1601  0E9C                     	;# 
  1602  0E9D                     	;# 
  1603  0E9E                     	;# 
  1604  0EA1                     	;# 
  1605  0EA2                     	;# 
  1606  0EA3                     	;# 
  1607  0EA4                     	;# 
  1608  0EA5                     	;# 
  1609  0EA9                     	;# 
  1610  0EAA                     	;# 
  1611  0EAB                     	;# 
  1612  0EAC                     	;# 
  1613  0EB1                     	;# 
  1614  0EB2                     	;# 
  1615  0EB3                     	;# 
  1616  0EB8                     	;# 
  1617  0EB9                     	;# 
  1618  0EBA                     	;# 
  1619  0EBB                     	;# 
  1620  0EBC                     	;# 
  1621  0EBD                     	;# 
  1622  0EBE                     	;# 
  1623  0EC3                     	;# 
  1624  0EC5                     	;# 
  1625  0EC6                     	;# 
  1626  0EC7                     	;# 
  1627  0EC8                     	;# 
  1628  0EC9                     	;# 
  1629  0ECA                     	;# 
  1630  0ECB                     	;# 
  1631  0ECC                     	;# 
  1632  0F10                     	;# 
  1633  0F11                     	;# 
  1634  0F12                     	;# 
  1635  0F13                     	;# 
  1636  0F14                     	;# 
  1637  0F15                     	;# 
  1638  0F16                     	;# 
  1639  0F17                     	;# 
  1640  0F18                     	;# 
  1641  0F19                     	;# 
  1642  0F1A                     	;# 
  1643  0F1B                     	;# 
  1644  0F1C                     	;# 
  1645  0F1D                     	;# 
  1646  0F1E                     	;# 
  1647  0F1F                     	;# 
  1648  0F20                     	;# 
  1649  0F21                     	;# 
  1650  0F22                     	;# 
  1651  0F23                     	;# 
  1652  0F24                     	;# 
  1653  0F25                     	;# 
  1654  0F26                     	;# 
  1655  0F27                     	;# 
  1656  0F38                     	;# 
  1657  0F39                     	;# 
  1658  0F3A                     	;# 
  1659  0F3B                     	;# 
  1660  0F3C                     	;# 
  1661  0F3D                     	;# 
  1662  0F3E                     	;# 
  1663  0F3F                     	;# 
  1664  0F40                     	;# 
  1665  0F41                     	;# 
  1666  0F43                     	;# 
  1667  0F44                     	;# 
  1668  0F45                     	;# 
  1669  0F46                     	;# 
  1670  0F47                     	;# 
  1671  0F48                     	;# 
  1672  0F49                     	;# 
  1673  0F4A                     	;# 
  1674  0F4B                     	;# 
  1675  0F4C                     	;# 
  1676  0F4E                     	;# 
  1677  0F4F                     	;# 
  1678  0F50                     	;# 
  1679  0F51                     	;# 
  1680  0F52                     	;# 
  1681  0F53                     	;# 
  1682  0F54                     	;# 
  1683  0F55                     	;# 
  1684  0F56                     	;# 
  1685  0F57                     	;# 
  1686  0F65                     	;# 
  1687  0F68                     	;# 
  1688  0F69                     	;# 
  1689  0F6A                     	;# 
  1690  0F6B                     	;# 
  1691  0FE4                     	;# 
  1692  0FE5                     	;# 
  1693  0FE6                     	;# 
  1694  0FE7                     	;# 
  1695  0FE8                     	;# 
  1696  0FE9                     	;# 
  1697  0FEA                     	;# 
  1698  0FEB                     	;# 
  1699  0FED                     	;# 
  1700  0FEE                     	;# 
  1701  0FEF                     	;# 
  1702  0000                     	;# 
  1703  0001                     	;# 
  1704  0002                     	;# 
  1705  0003                     	;# 
  1706  0004                     	;# 
  1707  0005                     	;# 
  1708  0006                     	;# 
  1709  0007                     	;# 
  1710  0008                     	;# 
  1711  0009                     	;# 
  1712  000A                     	;# 
  1713  000B                     	;# 
  1714  000C                     	;# 
  1715  000D                     	;# 
  1716  000E                     	;# 
  1717  0010                     	;# 
  1718  0011                     	;# 
  1719  0012                     	;# 
  1720  0013                     	;# 
  1721  0016                     	;# 
  1722  0017                     	;# 
  1723  0018                     	;# 
  1724  001C                     	;# 
  1725  001C                     	;# 
  1726  001D                     	;# 
  1727  001D                     	;# 
  1728  001E                     	;# 
  1729  001F                     	;# 
  1730  008C                     	;# 
  1731  008C                     	;# 
  1732  008D                     	;# 
  1733  008E                     	;# 
  1734  008E                     	;# 
  1735  008F                     	;# 
  1736  0090                     	;# 
  1737  0090                     	;# 
  1738  0091                     	;# 
  1739  0093                     	;# 
  1740  0094                     	;# 
  1741  0095                     	;# 
  1742  0096                     	;# 
  1743  0097                     	;# 
  1744  0098                     	;# 
  1745  0099                     	;# 
  1746  009A                     	;# 
  1747  009B                     	;# 
  1748  009C                     	;# 
  1749  009D                     	;# 
  1750  009E                     	;# 
  1751  010C                     	;# 
  1752  010D                     	;# 
  1753  010E                     	;# 
  1754  010E                     	;# 
  1755  010F                     	;# 
  1756  0110                     	;# 
  1757  0110                     	;# 
  1758  0111                     	;# 
  1759  0112                     	;# 
  1760  0112                     	;# 
  1761  0113                     	;# 
  1762  0114                     	;# 
  1763  0114                     	;# 
  1764  0115                     	;# 
  1765  0116                     	;# 
  1766  0116                     	;# 
  1767  0117                     	;# 
  1768  0119                     	;# 
  1769  0119                     	;# 
  1770  0119                     	;# 
  1771  011A                     	;# 
  1772  011A                     	;# 
  1773  011A                     	;# 
  1774  011B                     	;# 
  1775  011B                     	;# 
  1776  011B                     	;# 
  1777  011B                     	;# 
  1778  011B                     	;# 
  1779  011C                     	;# 
  1780  011C                     	;# 
  1781  011C                     	;# 
  1782  011D                     	;# 
  1783  011D                     	;# 
  1784  011D                     	;# 
  1785  011E                     	;# 
  1786  011E                     	;# 
  1787  011E                     	;# 
  1788  011F                     	;# 
  1789  011F                     	;# 
  1790  011F                     	;# 
  1791  011F                     	;# 
  1792  011F                     	;# 
  1793  018C                     	;# 
  1794  018D                     	;# 
  1795  018E                     	;# 
  1796  018F                     	;# 
  1797  0190                     	;# 
  1798  0191                     	;# 
  1799  0192                     	;# 
  1800  0196                     	;# 
  1801  0197                     	;# 
  1802  0198                     	;# 
  1803  0199                     	;# 
  1804  019A                     	;# 
  1805  019B                     	;# 
  1806  019C                     	;# 
  1807  020C                     	;# 
  1808  020C                     	;# 
  1809  020D                     	;# 
  1810  020E                     	;# 
  1811  020F                     	;# 
  1812  020F                     	;# 
  1813  0210                     	;# 
  1814  0210                     	;# 
  1815  0211                     	;# 
  1816  0211                     	;# 
  1817  0212                     	;# 
  1818  0212                     	;# 
  1819  0213                     	;# 
  1820  0214                     	;# 
  1821  0215                     	;# 
  1822  0215                     	;# 
  1823  0216                     	;# 
  1824  0216                     	;# 
  1825  0217                     	;# 
  1826  0217                     	;# 
  1827  0218                     	;# 
  1828  0218                     	;# 
  1829  0219                     	;# 
  1830  021A                     	;# 
  1831  021B                     	;# 
  1832  021B                     	;# 
  1833  021C                     	;# 
  1834  021C                     	;# 
  1835  021D                     	;# 
  1836  021D                     	;# 
  1837  021E                     	;# 
  1838  021F                     	;# 
  1839  028C                     	;# 
  1840  028C                     	;# 
  1841  028D                     	;# 
  1842  028D                     	;# 
  1843  028E                     	;# 
  1844  028F                     	;# 
  1845  0290                     	;# 
  1846  0290                     	;# 
  1847  0291                     	;# 
  1848  0292                     	;# 
  1849  0292                     	;# 
  1850  0293                     	;# 
  1851  0293                     	;# 
  1852  0294                     	;# 
  1853  0295                     	;# 
  1854  0296                     	;# 
  1855  0296                     	;# 
  1856  0297                     	;# 
  1857  0298                     	;# 
  1858  0298                     	;# 
  1859  0299                     	;# 
  1860  0299                     	;# 
  1861  029A                     	;# 
  1862  029B                     	;# 
  1863  029C                     	;# 
  1864  029C                     	;# 
  1865  029D                     	;# 
  1866  030C                     	;# 
  1867  030C                     	;# 
  1868  030D                     	;# 
  1869  030E                     	;# 
  1870  030F                     	;# 
  1871  0310                     	;# 
  1872  0310                     	;# 
  1873  0311                     	;# 
  1874  0312                     	;# 
  1875  0313                     	;# 
  1876  0314                     	;# 
  1877  0314                     	;# 
  1878  0315                     	;# 
  1879  0316                     	;# 
  1880  0317                     	;# 
  1881  0318                     	;# 
  1882  0318                     	;# 
  1883  0319                     	;# 
  1884  031A                     	;# 
  1885  031B                     	;# 
  1886  031C                     	;# 
  1887  031C                     	;# 
  1888  031D                     	;# 
  1889  031E                     	;# 
  1890  031F                     	;# 
  1891  038C                     	;# 
  1892  038C                     	;# 
  1893  038D                     	;# 
  1894  038E                     	;# 
  1895  0390                     	;# 
  1896  0390                     	;# 
  1897  0391                     	;# 
  1898  0392                     	;# 
  1899  040C                     	;# 
  1900  040D                     	;# 
  1901  040E                     	;# 
  1902  040F                     	;# 
  1903  0410                     	;# 
  1904  0411                     	;# 
  1905  0416                     	;# 
  1906  0416                     	;# 
  1907  0417                     	;# 
  1908  0418                     	;# 
  1909  0418                     	;# 
  1910  0419                     	;# 
  1911  041A                     	;# 
  1912  041A                     	;# 
  1913  041B                     	;# 
  1914  041C                     	;# 
  1915  041C                     	;# 
  1916  041D                     	;# 
  1917  041E                     	;# 
  1918  041F                     	;# 
  1919  048C                     	;# 
  1920  048C                     	;# 
  1921  048D                     	;# 
  1922  048E                     	;# 
  1923  048F                     	;# 
  1924  048F                     	;# 
  1925  0490                     	;# 
  1926  0491                     	;# 
  1927  0492                     	;# 
  1928  0492                     	;# 
  1929  0493                     	;# 
  1930  0494                     	;# 
  1931  0495                     	;# 
  1932  0495                     	;# 
  1933  0496                     	;# 
  1934  0497                     	;# 
  1935  0498                     	;# 
  1936  0499                     	;# 
  1937  049A                     	;# 
  1938  049B                     	;# 
  1939  049C                     	;# 
  1940  049D                     	;# 
  1941  050C                     	;# 
  1942  050C                     	;# 
  1943  050D                     	;# 
  1944  050E                     	;# 
  1945  050F                     	;# 
  1946  050F                     	;# 
  1947  0510                     	;# 
  1948  0511                     	;# 
  1949  0512                     	;# 
  1950  0512                     	;# 
  1951  0513                     	;# 
  1952  0514                     	;# 
  1953  0515                     	;# 
  1954  0515                     	;# 
  1955  0516                     	;# 
  1956  0517                     	;# 
  1957  0518                     	;# 
  1958  0519                     	;# 
  1959  051A                     	;# 
  1960  051B                     	;# 
  1961  051C                     	;# 
  1962  051D                     	;# 
  1963  058C                     	;# 
  1964  058C                     	;# 
  1965  058D                     	;# 
  1966  058E                     	;# 
  1967  058F                     	;# 
  1968  058F                     	;# 
  1969  0590                     	;# 
  1970  0591                     	;# 
  1971  0592                     	;# 
  1972  0593                     	;# 
  1973  060C                     	;# 
  1974  060D                     	;# 
  1975  060E                     	;# 
  1976  060F                     	;# 
  1977  0610                     	;# 
  1978  0611                     	;# 
  1979  0612                     	;# 
  1980  0613                     	;# 
  1981  0614                     	;# 
  1982  0616                     	;# 
  1983  0617                     	;# 
  1984  0618                     	;# 
  1985  0619                     	;# 
  1986  061A                     	;# 
  1987  061B                     	;# 
  1988  061C                     	;# 
  1989  061D                     	;# 
  1990  061E                     	;# 
  1991  068C                     	;# 
  1992  068D                     	;# 
  1993  068E                     	;# 
  1994  068F                     	;# 
  1995  0690                     	;# 
  1996  0691                     	;# 
  1997  0692                     	;# 
  1998  0693                     	;# 
  1999  0694                     	;# 
  2000  070C                     	;# 
  2001  070D                     	;# 
  2002  070E                     	;# 
  2003  070F                     	;# 
  2004  0710                     	;# 
  2005  0711                     	;# 
  2006  0712                     	;# 
  2007  0713                     	;# 
  2008  0714                     	;# 
  2009  0716                     	;# 
  2010  0717                     	;# 
  2011  0718                     	;# 
  2012  0719                     	;# 
  2013  071A                     	;# 
  2014  071B                     	;# 
  2015  071C                     	;# 
  2016  071D                     	;# 
  2017  071E                     	;# 
  2018  0796                     	;# 
  2019  0797                     	;# 
  2020  0798                     	;# 
  2021  0799                     	;# 
  2022  079A                     	;# 
  2023  079B                     	;# 
  2024  080C                     	;# 
  2025  080D                     	;# 
  2026  080E                     	;# 
  2027  080F                     	;# 
  2028  0810                     	;# 
  2029  0811                     	;# 
  2030  0812                     	;# 
  2031  0813                     	;# 
  2032  0814                     	;# 
  2033  081A                     	;# 
  2034  081B                     	;# 
  2035  081C                     	;# 
  2036  081D                     	;# 
  2037  081E                     	;# 
  2038  081F                     	;# 
  2039  088C                     	;# 
  2040  088D                     	;# 
  2041  088E                     	;# 
  2042  088F                     	;# 
  2043  0890                     	;# 
  2044  0891                     	;# 
  2045  0892                     	;# 
  2046  0893                     	;# 
  2047  0895                     	;# 
  2048  0896                     	;# 
  2049  0897                     	;# 
  2050  0898                     	;# 
  2051  0899                     	;# 
  2052  089A                     	;# 
  2053  089B                     	;# 
  2054  090C                     	;# 
  2055  090E                     	;# 
  2056  090F                     	;# 
  2057  091F                     	;# 
  2058  091F                     	;# 
  2059  098F                     	;# 
  2060  098F                     	;# 
  2061  0990                     	;# 
  2062  0991                     	;# 
  2063  0992                     	;# 
  2064  0993                     	;# 
  2065  0994                     	;# 
  2066  0995                     	;# 
  2067  0996                     	;# 
  2068  0997                     	;# 
  2069  0E0F                     	;# 
  2070  0E10                     	;# 
  2071  0E11                     	;# 
  2072  0E12                     	;# 
  2073  0E13                     	;# 
  2074  0E14                     	;# 
  2075  0E15                     	;# 
  2076  0E16                     	;# 
  2077  0E17                     	;# 
  2078  0E18                     	;# 
  2079  0E19                     	;# 
  2080  0E1A                     	;# 
  2081  0E1B                     	;# 
  2082  0E1C                     	;# 
  2083  0E1D                     	;# 
  2084  0E1E                     	;# 
  2085  0E1F                     	;# 
  2086  0E20                     	;# 
  2087  0E21                     	;# 
  2088  0E22                     	;# 
  2089  0E23                     	;# 
  2090  0E24                     	;# 
  2091  0E25                     	;# 
  2092  0E26                     	;# 
  2093  0E27                     	;# 
  2094  0E28                     	;# 
  2095  0E29                     	;# 
  2096  0E2A                     	;# 
  2097  0E2B                     	;# 
  2098  0E2C                     	;# 
  2099  0E2D                     	;# 
  2100  0E2E                     	;# 
  2101  0E2F                     	;# 
  2102  0E30                     	;# 
  2103  0E31                     	;# 
  2104  0E32                     	;# 
  2105  0E33                     	;# 
  2106  0E34                     	;# 
  2107  0E35                     	;# 
  2108  0E36                     	;# 
  2109  0E37                     	;# 
  2110  0E8F                     	;# 
  2111  0E90                     	;# 
  2112  0E91                     	;# 
  2113  0E92                     	;# 
  2114  0E93                     	;# 
  2115  0E94                     	;# 
  2116  0E95                     	;# 
  2117  0E96                     	;# 
  2118  0E97                     	;# 
  2119  0E9C                     	;# 
  2120  0E9D                     	;# 
  2121  0E9E                     	;# 
  2122  0EA1                     	;# 
  2123  0EA2                     	;# 
  2124  0EA3                     	;# 
  2125  0EA4                     	;# 
  2126  0EA5                     	;# 
  2127  0EA9                     	;# 
  2128  0EAA                     	;# 
  2129  0EAB                     	;# 
  2130  0EAC                     	;# 
  2131  0EB1                     	;# 
  2132  0EB2                     	;# 
  2133  0EB3                     	;# 
  2134  0EB8                     	;# 
  2135  0EB9                     	;# 
  2136  0EBA                     	;# 
  2137  0EBB                     	;# 
  2138  0EBC                     	;# 
  2139  0EBD                     	;# 
  2140  0EBE                     	;# 
  2141  0EC3                     	;# 
  2142  0EC5                     	;# 
  2143  0EC6                     	;# 
  2144  0EC7                     	;# 
  2145  0EC8                     	;# 
  2146  0EC9                     	;# 
  2147  0ECA                     	;# 
  2148  0ECB                     	;# 
  2149  0ECC                     	;# 
  2150  0F10                     	;# 
  2151  0F11                     	;# 
  2152  0F12                     	;# 
  2153  0F13                     	;# 
  2154  0F14                     	;# 
  2155  0F15                     	;# 
  2156  0F16                     	;# 
  2157  0F17                     	;# 
  2158  0F18                     	;# 
  2159  0F19                     	;# 
  2160  0F1A                     	;# 
  2161  0F1B                     	;# 
  2162  0F1C                     	;# 
  2163  0F1D                     	;# 
  2164  0F1E                     	;# 
  2165  0F1F                     	;# 
  2166  0F20                     	;# 
  2167  0F21                     	;# 
  2168  0F22                     	;# 
  2169  0F23                     	;# 
  2170  0F24                     	;# 
  2171  0F25                     	;# 
  2172  0F26                     	;# 
  2173  0F27                     	;# 
  2174  0F38                     	;# 
  2175  0F39                     	;# 
  2176  0F3A                     	;# 
  2177  0F3B                     	;# 
  2178  0F3C                     	;# 
  2179  0F3D                     	;# 
  2180  0F3E                     	;# 
  2181  0F3F                     	;# 
  2182  0F40                     	;# 
  2183  0F41                     	;# 
  2184  0F43                     	;# 
  2185  0F44                     	;# 
  2186  0F45                     	;# 
  2187  0F46                     	;# 
  2188  0F47                     	;# 
  2189  0F48                     	;# 
  2190  0F49                     	;# 
  2191  0F4A                     	;# 
  2192  0F4B                     	;# 
  2193  0F4C                     	;# 
  2194  0F4E                     	;# 
  2195  0F4F                     	;# 
  2196  0F50                     	;# 
  2197  0F51                     	;# 
  2198  0F52                     	;# 
  2199  0F53                     	;# 
  2200  0F54                     	;# 
  2201  0F55                     	;# 
  2202  0F56                     	;# 
  2203  0F57                     	;# 
  2204  0F65                     	;# 
  2205  0F68                     	;# 
  2206  0F69                     	;# 
  2207  0F6A                     	;# 
  2208  0F6B                     	;# 
  2209  0FE4                     	;# 
  2210  0FE5                     	;# 
  2211  0FE6                     	;# 
  2212  0FE7                     	;# 
  2213  0FE8                     	;# 
  2214  0FE9                     	;# 
  2215  0FEA                     	;# 
  2216  0FEB                     	;# 
  2217  0FED                     	;# 
  2218  0FEE                     	;# 
  2219  0FEF                     	;# 
  2220  0000                     	;# 
  2221  0001                     	;# 
  2222  0002                     	;# 
  2223  0003                     	;# 
  2224  0004                     	;# 
  2225  0005                     	;# 
  2226  0006                     	;# 
  2227  0007                     	;# 
  2228  0008                     	;# 
  2229  0009                     	;# 
  2230  000A                     	;# 
  2231  000B                     	;# 
  2232  000C                     	;# 
  2233  000D                     	;# 
  2234  000E                     	;# 
  2235  0010                     	;# 
  2236  0011                     	;# 
  2237  0012                     	;# 
  2238  0013                     	;# 
  2239  0016                     	;# 
  2240  0017                     	;# 
  2241  0018                     	;# 
  2242  001C                     	;# 
  2243  001C                     	;# 
  2244  001D                     	;# 
  2245  001D                     	;# 
  2246  001E                     	;# 
  2247  001F                     	;# 
  2248  008C                     	;# 
  2249  008C                     	;# 
  2250  008D                     	;# 
  2251  008E                     	;# 
  2252  008E                     	;# 
  2253  008F                     	;# 
  2254  0090                     	;# 
  2255  0090                     	;# 
  2256  0091                     	;# 
  2257  0093                     	;# 
  2258  0094                     	;# 
  2259  0095                     	;# 
  2260  0096                     	;# 
  2261  0097                     	;# 
  2262  0098                     	;# 
  2263  0099                     	;# 
  2264  009A                     	;# 
  2265  009B                     	;# 
  2266  009C                     	;# 
  2267  009D                     	;# 
  2268  009E                     	;# 
  2269  010C                     	;# 
  2270  010D                     	;# 
  2271  010E                     	;# 
  2272  010E                     	;# 
  2273  010F                     	;# 
  2274  0110                     	;# 
  2275  0110                     	;# 
  2276  0111                     	;# 
  2277  0112                     	;# 
  2278  0112                     	;# 
  2279  0113                     	;# 
  2280  0114                     	;# 
  2281  0114                     	;# 
  2282  0115                     	;# 
  2283  0116                     	;# 
  2284  0116                     	;# 
  2285  0117                     	;# 
  2286  0119                     	;# 
  2287  0119                     	;# 
  2288  0119                     	;# 
  2289  011A                     	;# 
  2290  011A                     	;# 
  2291  011A                     	;# 
  2292  011B                     	;# 
  2293  011B                     	;# 
  2294  011B                     	;# 
  2295  011B                     	;# 
  2296  011B                     	;# 
  2297  011C                     	;# 
  2298  011C                     	;# 
  2299  011C                     	;# 
  2300  011D                     	;# 
  2301  011D                     	;# 
  2302  011D                     	;# 
  2303  011E                     	;# 
  2304  011E                     	;# 
  2305  011E                     	;# 
  2306  011F                     	;# 
  2307  011F                     	;# 
  2308  011F                     	;# 
  2309  011F                     	;# 
  2310  011F                     	;# 
  2311  018C                     	;# 
  2312  018D                     	;# 
  2313  018E                     	;# 
  2314  018F                     	;# 
  2315  0190                     	;# 
  2316  0191                     	;# 
  2317  0192                     	;# 
  2318  0196                     	;# 
  2319  0197                     	;# 
  2320  0198                     	;# 
  2321  0199                     	;# 
  2322  019A                     	;# 
  2323  019B                     	;# 
  2324  019C                     	;# 
  2325  020C                     	;# 
  2326  020C                     	;# 
  2327  020D                     	;# 
  2328  020E                     	;# 
  2329  020F                     	;# 
  2330  020F                     	;# 
  2331  0210                     	;# 
  2332  0210                     	;# 
  2333  0211                     	;# 
  2334  0211                     	;# 
  2335  0212                     	;# 
  2336  0212                     	;# 
  2337  0213                     	;# 
  2338  0214                     	;# 
  2339  0215                     	;# 
  2340  0215                     	;# 
  2341  0216                     	;# 
  2342  0216                     	;# 
  2343  0217                     	;# 
  2344  0217                     	;# 
  2345  0218                     	;# 
  2346  0218                     	;# 
  2347  0219                     	;# 
  2348  021A                     	;# 
  2349  021B                     	;# 
  2350  021B                     	;# 
  2351  021C                     	;# 
  2352  021C                     	;# 
  2353  021D                     	;# 
  2354  021D                     	;# 
  2355  021E                     	;# 
  2356  021F                     	;# 
  2357  028C                     	;# 
  2358  028C                     	;# 
  2359  028D                     	;# 
  2360  028D                     	;# 
  2361  028E                     	;# 
  2362  028F                     	;# 
  2363  0290                     	;# 
  2364  0290                     	;# 
  2365  0291                     	;# 
  2366  0292                     	;# 
  2367  0292                     	;# 
  2368  0293                     	;# 
  2369  0293                     	;# 
  2370  0294                     	;# 
  2371  0295                     	;# 
  2372  0296                     	;# 
  2373  0296                     	;# 
  2374  0297                     	;# 
  2375  0298                     	;# 
  2376  0298                     	;# 
  2377  0299                     	;# 
  2378  0299                     	;# 
  2379  029A                     	;# 
  2380  029B                     	;# 
  2381  029C                     	;# 
  2382  029C                     	;# 
  2383  029D                     	;# 
  2384  030C                     	;# 
  2385  030C                     	;# 
  2386  030D                     	;# 
  2387  030E                     	;# 
  2388  030F                     	;# 
  2389  0310                     	;# 
  2390  0310                     	;# 
  2391  0311                     	;# 
  2392  0312                     	;# 
  2393  0313                     	;# 
  2394  0314                     	;# 
  2395  0314                     	;# 
  2396  0315                     	;# 
  2397  0316                     	;# 
  2398  0317                     	;# 
  2399  0318                     	;# 
  2400  0318                     	;# 
  2401  0319                     	;# 
  2402  031A                     	;# 
  2403  031B                     	;# 
  2404  031C                     	;# 
  2405  031C                     	;# 
  2406  031D                     	;# 
  2407  031E                     	;# 
  2408  031F                     	;# 
  2409  038C                     	;# 
  2410  038C                     	;# 
  2411  038D                     	;# 
  2412  038E                     	;# 
  2413  0390                     	;# 
  2414  0390                     	;# 
  2415  0391                     	;# 
  2416  0392                     	;# 
  2417  040C                     	;# 
  2418  040D                     	;# 
  2419  040E                     	;# 
  2420  040F                     	;# 
  2421  0410                     	;# 
  2422  0411                     	;# 
  2423  0416                     	;# 
  2424  0416                     	;# 
  2425  0417                     	;# 
  2426  0418                     	;# 
  2427  0418                     	;# 
  2428  0419                     	;# 
  2429  041A                     	;# 
  2430  041A                     	;# 
  2431  041B                     	;# 
  2432  041C                     	;# 
  2433  041C                     	;# 
  2434  041D                     	;# 
  2435  041E                     	;# 
  2436  041F                     	;# 
  2437  048C                     	;# 
  2438  048C                     	;# 
  2439  048D                     	;# 
  2440  048E                     	;# 
  2441  048F                     	;# 
  2442  048F                     	;# 
  2443  0490                     	;# 
  2444  0491                     	;# 
  2445  0492                     	;# 
  2446  0492                     	;# 
  2447  0493                     	;# 
  2448  0494                     	;# 
  2449  0495                     	;# 
  2450  0495                     	;# 
  2451  0496                     	;# 
  2452  0497                     	;# 
  2453  0498                     	;# 
  2454  0499                     	;# 
  2455  049A                     	;# 
  2456  049B                     	;# 
  2457  049C                     	;# 
  2458  049D                     	;# 
  2459  050C                     	;# 
  2460  050C                     	;# 
  2461  050D                     	;# 
  2462  050E                     	;# 
  2463  050F                     	;# 
  2464  050F                     	;# 
  2465  0510                     	;# 
  2466  0511                     	;# 
  2467  0512                     	;# 
  2468  0512                     	;# 
  2469  0513                     	;# 
  2470  0514                     	;# 
  2471  0515                     	;# 
  2472  0515                     	;# 
  2473  0516                     	;# 
  2474  0517                     	;# 
  2475  0518                     	;# 
  2476  0519                     	;# 
  2477  051A                     	;# 
  2478  051B                     	;# 
  2479  051C                     	;# 
  2480  051D                     	;# 
  2481  058C                     	;# 
  2482  058C                     	;# 
  2483  058D                     	;# 
  2484  058E                     	;# 
  2485  058F                     	;# 
  2486  058F                     	;# 
  2487  0590                     	;# 
  2488  0591                     	;# 
  2489  0592                     	;# 
  2490  0593                     	;# 
  2491  060C                     	;# 
  2492  060D                     	;# 
  2493  060E                     	;# 
  2494  060F                     	;# 
  2495  0610                     	;# 
  2496  0611                     	;# 
  2497  0612                     	;# 
  2498  0613                     	;# 
  2499  0614                     	;# 
  2500  0616                     	;# 
  2501  0617                     	;# 
  2502  0618                     	;# 
  2503  0619                     	;# 
  2504  061A                     	;# 
  2505  061B                     	;# 
  2506  061C                     	;# 
  2507  061D                     	;# 
  2508  061E                     	;# 
  2509  068C                     	;# 
  2510  068D                     	;# 
  2511  068E                     	;# 
  2512  068F                     	;# 
  2513  0690                     	;# 
  2514  0691                     	;# 
  2515  0692                     	;# 
  2516  0693                     	;# 
  2517  0694                     	;# 
  2518  070C                     	;# 
  2519  070D                     	;# 
  2520  070E                     	;# 
  2521  070F                     	;# 
  2522  0710                     	;# 
  2523  0711                     	;# 
  2524  0712                     	;# 
  2525  0713                     	;# 
  2526  0714                     	;# 
  2527  0716                     	;# 
  2528  0717                     	;# 
  2529  0718                     	;# 
  2530  0719                     	;# 
  2531  071A                     	;# 
  2532  071B                     	;# 
  2533  071C                     	;# 
  2534  071D                     	;# 
  2535  071E                     	;# 
  2536  0796                     	;# 
  2537  0797                     	;# 
  2538  0798                     	;# 
  2539  0799                     	;# 
  2540  079A                     	;# 
  2541  079B                     	;# 
  2542  080C                     	;# 
  2543  080D                     	;# 
  2544  080E                     	;# 
  2545  080F                     	;# 
  2546  0810                     	;# 
  2547  0811                     	;# 
  2548  0812                     	;# 
  2549  0813                     	;# 
  2550  0814                     	;# 
  2551  081A                     	;# 
  2552  081B                     	;# 
  2553  081C                     	;# 
  2554  081D                     	;# 
  2555  081E                     	;# 
  2556  081F                     	;# 
  2557  088C                     	;# 
  2558  088D                     	;# 
  2559  088E                     	;# 
  2560  088F                     	;# 
  2561  0890                     	;# 
  2562  0891                     	;# 
  2563  0892                     	;# 
  2564  0893                     	;# 
  2565  0895                     	;# 
  2566  0896                     	;# 
  2567  0897                     	;# 
  2568  0898                     	;# 
  2569  0899                     	;# 
  2570  089A                     	;# 
  2571  089B                     	;# 
  2572  090C                     	;# 
  2573  090E                     	;# 
  2574  090F                     	;# 
  2575  091F                     	;# 
  2576  091F                     	;# 
  2577  098F                     	;# 
  2578  098F                     	;# 
  2579  0990                     	;# 
  2580  0991                     	;# 
  2581  0992                     	;# 
  2582  0993                     	;# 
  2583  0994                     	;# 
  2584  0995                     	;# 
  2585  0996                     	;# 
  2586  0997                     	;# 
  2587  0E0F                     	;# 
  2588  0E10                     	;# 
  2589  0E11                     	;# 
  2590  0E12                     	;# 
  2591  0E13                     	;# 
  2592  0E14                     	;# 
  2593  0E15                     	;# 
  2594  0E16                     	;# 
  2595  0E17                     	;# 
  2596  0E18                     	;# 
  2597  0E19                     	;# 
  2598  0E1A                     	;# 
  2599  0E1B                     	;# 
  2600  0E1C                     	;# 
  2601  0E1D                     	;# 
  2602  0E1E                     	;# 
  2603  0E1F                     	;# 
  2604  0E20                     	;# 
  2605  0E21                     	;# 
  2606  0E22                     	;# 
  2607  0E23                     	;# 
  2608  0E24                     	;# 
  2609  0E25                     	;# 
  2610  0E26                     	;# 
  2611  0E27                     	;# 
  2612  0E28                     	;# 
  2613  0E29                     	;# 
  2614  0E2A                     	;# 
  2615  0E2B                     	;# 
  2616  0E2C                     	;# 
  2617  0E2D                     	;# 
  2618  0E2E                     	;# 
  2619  0E2F                     	;# 
  2620  0E30                     	;# 
  2621  0E31                     	;# 
  2622  0E32                     	;# 
  2623  0E33                     	;# 
  2624  0E34                     	;# 
  2625  0E35                     	;# 
  2626  0E36                     	;# 
  2627  0E37                     	;# 
  2628  0E8F                     	;# 
  2629  0E90                     	;# 
  2630  0E91                     	;# 
  2631  0E92                     	;# 
  2632  0E93                     	;# 
  2633  0E94                     	;# 
  2634  0E95                     	;# 
  2635  0E96                     	;# 
  2636  0E97                     	;# 
  2637  0E9C                     	;# 
  2638  0E9D                     	;# 
  2639  0E9E                     	;# 
  2640  0EA1                     	;# 
  2641  0EA2                     	;# 
  2642  0EA3                     	;# 
  2643  0EA4                     	;# 
  2644  0EA5                     	;# 
  2645  0EA9                     	;# 
  2646  0EAA                     	;# 
  2647  0EAB                     	;# 
  2648  0EAC                     	;# 
  2649  0EB1                     	;# 
  2650  0EB2                     	;# 
  2651  0EB3                     	;# 
  2652  0EB8                     	;# 
  2653  0EB9                     	;# 
  2654  0EBA                     	;# 
  2655  0EBB                     	;# 
  2656  0EBC                     	;# 
  2657  0EBD                     	;# 
  2658  0EBE                     	;# 
  2659  0EC3                     	;# 
  2660  0EC5                     	;# 
  2661  0EC6                     	;# 
  2662  0EC7                     	;# 
  2663  0EC8                     	;# 
  2664  0EC9                     	;# 
  2665  0ECA                     	;# 
  2666  0ECB                     	;# 
  2667  0ECC                     	;# 
  2668  0F10                     	;# 
  2669  0F11                     	;# 
  2670  0F12                     	;# 
  2671  0F13                     	;# 
  2672  0F14                     	;# 
  2673  0F15                     	;# 
  2674  0F16                     	;# 
  2675  0F17                     	;# 
  2676  0F18                     	;# 
  2677  0F19                     	;# 
  2678  0F1A                     	;# 
  2679  0F1B                     	;# 
  2680  0F1C                     	;# 
  2681  0F1D                     	;# 
  2682  0F1E                     	;# 
  2683  0F1F                     	;# 
  2684  0F20                     	;# 
  2685  0F21                     	;# 
  2686  0F22                     	;# 
  2687  0F23                     	;# 
  2688  0F24                     	;# 
  2689  0F25                     	;# 
  2690  0F26                     	;# 
  2691  0F27                     	;# 
  2692  0F38                     	;# 
  2693  0F39                     	;# 
  2694  0F3A                     	;# 
  2695  0F3B                     	;# 
  2696  0F3C                     	;# 
  2697  0F3D                     	;# 
  2698  0F3E                     	;# 
  2699  0F3F                     	;# 
  2700  0F40                     	;# 
  2701  0F41                     	;# 
  2702  0F43                     	;# 
  2703  0F44                     	;# 
  2704  0F45                     	;# 
  2705  0F46                     	;# 
  2706  0F47                     	;# 
  2707  0F48                     	;# 
  2708  0F49                     	;# 
  2709  0F4A                     	;# 
  2710  0F4B                     	;# 
  2711  0F4C                     	;# 
  2712  0F4E                     	;# 
  2713  0F4F                     	;# 
  2714  0F50                     	;# 
  2715  0F51                     	;# 
  2716  0F52                     	;# 
  2717  0F53                     	;# 
  2718  0F54                     	;# 
  2719  0F55                     	;# 
  2720  0F56                     	;# 
  2721  0F57                     	;# 
  2722  0F65                     	;# 
  2723  0F68                     	;# 
  2724  0F69                     	;# 
  2725  0F6A                     	;# 
  2726  0F6B                     	;# 
  2727  0FE4                     	;# 
  2728  0FE5                     	;# 
  2729  0FE6                     	;# 
  2730  0FE7                     	;# 
  2731  0FE8                     	;# 
  2732  0FE9                     	;# 
  2733  0FEA                     	;# 
  2734  0FEB                     	;# 
  2735  0FED                     	;# 
  2736  0FEE                     	;# 
  2737  0FEF                     	;# 
  2738  0000                     	;# 
  2739  0001                     	;# 
  2740  0002                     	;# 
  2741  0003                     	;# 
  2742  0004                     	;# 
  2743  0005                     	;# 
  2744  0006                     	;# 
  2745  0007                     	;# 
  2746  0008                     	;# 
  2747  0009                     	;# 
  2748  000A                     	;# 
  2749  000B                     	;# 
  2750  000C                     	;# 
  2751  000D                     	;# 
  2752  000E                     	;# 
  2753  0010                     	;# 
  2754  0011                     	;# 
  2755  0012                     	;# 
  2756  0013                     	;# 
  2757  0016                     	;# 
  2758  0017                     	;# 
  2759  0018                     	;# 
  2760  001C                     	;# 
  2761  001C                     	;# 
  2762  001D                     	;# 
  2763  001D                     	;# 
  2764  001E                     	;# 
  2765  001F                     	;# 
  2766  008C                     	;# 
  2767  008C                     	;# 
  2768  008D                     	;# 
  2769  008E                     	;# 
  2770  008E                     	;# 
  2771  008F                     	;# 
  2772  0090                     	;# 
  2773  0090                     	;# 
  2774  0091                     	;# 
  2775  0093                     	;# 
  2776  0094                     	;# 
  2777  0095                     	;# 
  2778  0096                     	;# 
  2779  0097                     	;# 
  2780  0098                     	;# 
  2781  0099                     	;# 
  2782  009A                     	;# 
  2783  009B                     	;# 
  2784  009C                     	;# 
  2785  009D                     	;# 
  2786  009E                     	;# 
  2787  010C                     	;# 
  2788  010D                     	;# 
  2789  010E                     	;# 
  2790  010E                     	;# 
  2791  010F                     	;# 
  2792  0110                     	;# 
  2793  0110                     	;# 
  2794  0111                     	;# 
  2795  0112                     	;# 
  2796  0112                     	;# 
  2797  0113                     	;# 
  2798  0114                     	;# 
  2799  0114                     	;# 
  2800  0115                     	;# 
  2801  0116                     	;# 
  2802  0116                     	;# 
  2803  0117                     	;# 
  2804  0119                     	;# 
  2805  0119                     	;# 
  2806  0119                     	;# 
  2807  011A                     	;# 
  2808  011A                     	;# 
  2809  011A                     	;# 
  2810  011B                     	;# 
  2811  011B                     	;# 
  2812  011B                     	;# 
  2813  011B                     	;# 
  2814  011B                     	;# 
  2815  011C                     	;# 
  2816  011C                     	;# 
  2817  011C                     	;# 
  2818  011D                     	;# 
  2819  011D                     	;# 
  2820  011D                     	;# 
  2821  011E                     	;# 
  2822  011E                     	;# 
  2823  011E                     	;# 
  2824  011F                     	;# 
  2825  011F                     	;# 
  2826  011F                     	;# 
  2827  011F                     	;# 
  2828  011F                     	;# 
  2829  018C                     	;# 
  2830  018D                     	;# 
  2831  018E                     	;# 
  2832  018F                     	;# 
  2833  0190                     	;# 
  2834  0191                     	;# 
  2835  0192                     	;# 
  2836  0196                     	;# 
  2837  0197                     	;# 
  2838  0198                     	;# 
  2839  0199                     	;# 
  2840  019A                     	;# 
  2841  019B                     	;# 
  2842  019C                     	;# 
  2843  020C                     	;# 
  2844  020C                     	;# 
  2845  020D                     	;# 
  2846  020E                     	;# 
  2847  020F                     	;# 
  2848  020F                     	;# 
  2849  0210                     	;# 
  2850  0210                     	;# 
  2851  0211                     	;# 
  2852  0211                     	;# 
  2853  0212                     	;# 
  2854  0212                     	;# 
  2855  0213                     	;# 
  2856  0214                     	;# 
  2857  0215                     	;# 
  2858  0215                     	;# 
  2859  0216                     	;# 
  2860  0216                     	;# 
  2861  0217                     	;# 
  2862  0217                     	;# 
  2863  0218                     	;# 
  2864  0218                     	;# 
  2865  0219                     	;# 
  2866  021A                     	;# 
  2867  021B                     	;# 
  2868  021B                     	;# 
  2869  021C                     	;# 
  2870  021C                     	;# 
  2871  021D                     	;# 
  2872  021D                     	;# 
  2873  021E                     	;# 
  2874  021F                     	;# 
  2875  028C                     	;# 
  2876  028C                     	;# 
  2877  028D                     	;# 
  2878  028D                     	;# 
  2879  028E                     	;# 
  2880  028F                     	;# 
  2881  0290                     	;# 
  2882  0290                     	;# 
  2883  0291                     	;# 
  2884  0292                     	;# 
  2885  0292                     	;# 
  2886  0293                     	;# 
  2887  0293                     	;# 
  2888  0294                     	;# 
  2889  0295                     	;# 
  2890  0296                     	;# 
  2891  0296                     	;# 
  2892  0297                     	;# 
  2893  0298                     	;# 
  2894  0298                     	;# 
  2895  0299                     	;# 
  2896  0299                     	;# 
  2897  029A                     	;# 
  2898  029B                     	;# 
  2899  029C                     	;# 
  2900  029C                     	;# 
  2901  029D                     	;# 
  2902  030C                     	;# 
  2903  030C                     	;# 
  2904  030D                     	;# 
  2905  030E                     	;# 
  2906  030F                     	;# 
  2907  0310                     	;# 
  2908  0310                     	;# 
  2909  0311                     	;# 
  2910  0312                     	;# 
  2911  0313                     	;# 
  2912  0314                     	;# 
  2913  0314                     	;# 
  2914  0315                     	;# 
  2915  0316                     	;# 
  2916  0317                     	;# 
  2917  0318                     	;# 
  2918  0318                     	;# 
  2919  0319                     	;# 
  2920  031A                     	;# 
  2921  031B                     	;# 
  2922  031C                     	;# 
  2923  031C                     	;# 
  2924  031D                     	;# 
  2925  031E                     	;# 
  2926  031F                     	;# 
  2927  038C                     	;# 
  2928  038C                     	;# 
  2929  038D                     	;# 
  2930  038E                     	;# 
  2931  0390                     	;# 
  2932  0390                     	;# 
  2933  0391                     	;# 
  2934  0392                     	;# 
  2935  040C                     	;# 
  2936  040D                     	;# 
  2937  040E                     	;# 
  2938  040F                     	;# 
  2939  0410                     	;# 
  2940  0411                     	;# 
  2941  0416                     	;# 
  2942  0416                     	;# 
  2943  0417                     	;# 
  2944  0418                     	;# 
  2945  0418                     	;# 
  2946  0419                     	;# 
  2947  041A                     	;# 
  2948  041A                     	;# 
  2949  041B                     	;# 
  2950  041C                     	;# 
  2951  041C                     	;# 
  2952  041D                     	;# 
  2953  041E                     	;# 
  2954  041F                     	;# 
  2955  048C                     	;# 
  2956  048C                     	;# 
  2957  048D                     	;# 
  2958  048E                     	;# 
  2959  048F                     	;# 
  2960  048F                     	;# 
  2961  0490                     	;# 
  2962  0491                     	;# 
  2963  0492                     	;# 
  2964  0492                     	;# 
  2965  0493                     	;# 
  2966  0494                     	;# 
  2967  0495                     	;# 
  2968  0495                     	;# 
  2969  0496                     	;# 
  2970  0497                     	;# 
  2971  0498                     	;# 
  2972  0499                     	;# 
  2973  049A                     	;# 
  2974  049B                     	;# 
  2975  049C                     	;# 
  2976  049D                     	;# 
  2977  050C                     	;# 
  2978  050C                     	;# 
  2979  050D                     	;# 
  2980  050E                     	;# 
  2981  050F                     	;# 
  2982  050F                     	;# 
  2983  0510                     	;# 
  2984  0511                     	;# 
  2985  0512                     	;# 
  2986  0512                     	;# 
  2987  0513                     	;# 
  2988  0514                     	;# 
  2989  0515                     	;# 
  2990  0515                     	;# 
  2991  0516                     	;# 
  2992  0517                     	;# 
  2993  0518                     	;# 
  2994  0519                     	;# 
  2995  051A                     	;# 
  2996  051B                     	;# 
  2997  051C                     	;# 
  2998  051D                     	;# 
  2999  058C                     	;# 
  3000  058C                     	;# 
  3001  058D                     	;# 
  3002  058E                     	;# 
  3003  058F                     	;# 
  3004  058F                     	;# 
  3005  0590                     	;# 
  3006  0591                     	;# 
  3007  0592                     	;# 
  3008  0593                     	;# 
  3009  060C                     	;# 
  3010  060D                     	;# 
  3011  060E                     	;# 
  3012  060F                     	;# 
  3013  0610                     	;# 
  3014  0611                     	;# 
  3015  0612                     	;# 
  3016  0613                     	;# 
  3017  0614                     	;# 
  3018  0616                     	;# 
  3019  0617                     	;# 
  3020  0618                     	;# 
  3021  0619                     	;# 
  3022  061A                     	;# 
  3023  061B                     	;# 
  3024  061C                     	;# 
  3025  061D                     	;# 
  3026  061E                     	;# 
  3027  068C                     	;# 
  3028  068D                     	;# 
  3029  068E                     	;# 
  3030  068F                     	;# 
  3031  0690                     	;# 
  3032  0691                     	;# 
  3033  0692                     	;# 
  3034  0693                     	;# 
  3035  0694                     	;# 
  3036  070C                     	;# 
  3037  070D                     	;# 
  3038  070E                     	;# 
  3039  070F                     	;# 
  3040  0710                     	;# 
  3041  0711                     	;# 
  3042  0712                     	;# 
  3043  0713                     	;# 
  3044  0714                     	;# 
  3045  0716                     	;# 
  3046  0717                     	;# 
  3047  0718                     	;# 
  3048  0719                     	;# 
  3049  071A                     	;# 
  3050  071B                     	;# 
  3051  071C                     	;# 
  3052  071D                     	;# 
  3053  071E                     	;# 
  3054  0796                     	;# 
  3055  0797                     	;# 
  3056  0798                     	;# 
  3057  0799                     	;# 
  3058  079A                     	;# 
  3059  079B                     	;# 
  3060  080C                     	;# 
  3061  080D                     	;# 
  3062  080E                     	;# 
  3063  080F                     	;# 
  3064  0810                     	;# 
  3065  0811                     	;# 
  3066  0812                     	;# 
  3067  0813                     	;# 
  3068  0814                     	;# 
  3069  081A                     	;# 
  3070  081B                     	;# 
  3071  081C                     	;# 
  3072  081D                     	;# 
  3073  081E                     	;# 
  3074  081F                     	;# 
  3075  088C                     	;# 
  3076  088D                     	;# 
  3077  088E                     	;# 
  3078  088F                     	;# 
  3079  0890                     	;# 
  3080  0891                     	;# 
  3081  0892                     	;# 
  3082  0893                     	;# 
  3083  0895                     	;# 
  3084  0896                     	;# 
  3085  0897                     	;# 
  3086  0898                     	;# 
  3087  0899                     	;# 
  3088  089A                     	;# 
  3089  089B                     	;# 
  3090  090C                     	;# 
  3091  090E                     	;# 
  3092  090F                     	;# 
  3093  091F                     	;# 
  3094  091F                     	;# 
  3095  098F                     	;# 
  3096  098F                     	;# 
  3097  0990                     	;# 
  3098  0991                     	;# 
  3099  0992                     	;# 
  3100  0993                     	;# 
  3101  0994                     	;# 
  3102  0995                     	;# 
  3103  0996                     	;# 
  3104  0997                     	;# 
  3105  0E0F                     	;# 
  3106  0E10                     	;# 
  3107  0E11                     	;# 
  3108  0E12                     	;# 
  3109  0E13                     	;# 
  3110  0E14                     	;# 
  3111  0E15                     	;# 
  3112  0E16                     	;# 
  3113  0E17                     	;# 
  3114  0E18                     	;# 
  3115  0E19                     	;# 
  3116  0E1A                     	;# 
  3117  0E1B                     	;# 
  3118  0E1C                     	;# 
  3119  0E1D                     	;# 
  3120  0E1E                     	;# 
  3121  0E1F                     	;# 
  3122  0E20                     	;# 
  3123  0E21                     	;# 
  3124  0E22                     	;# 
  3125  0E23                     	;# 
  3126  0E24                     	;# 
  3127  0E25                     	;# 
  3128  0E26                     	;# 
  3129  0E27                     	;# 
  3130  0E28                     	;# 
  3131  0E29                     	;# 
  3132  0E2A                     	;# 
  3133  0E2B                     	;# 
  3134  0E2C                     	;# 
  3135  0E2D                     	;# 
  3136  0E2E                     	;# 
  3137  0E2F                     	;# 
  3138  0E30                     	;# 
  3139  0E31                     	;# 
  3140  0E32                     	;# 
  3141  0E33                     	;# 
  3142  0E34                     	;# 
  3143  0E35                     	;# 
  3144  0E36                     	;# 
  3145  0E37                     	;# 
  3146  0E8F                     	;# 
  3147  0E90                     	;# 
  3148  0E91                     	;# 
  3149  0E92                     	;# 
  3150  0E93                     	;# 
  3151  0E94                     	;# 
  3152  0E95                     	;# 
  3153  0E96                     	;# 
  3154  0E97                     	;# 
  3155  0E9C                     	;# 
  3156  0E9D                     	;# 
  3157  0E9E                     	;# 
  3158  0EA1                     	;# 
  3159  0EA2                     	;# 
  3160  0EA3                     	;# 
  3161  0EA4                     	;# 
  3162  0EA5                     	;# 
  3163  0EA9                     	;# 
  3164  0EAA                     	;# 
  3165  0EAB                     	;# 
  3166  0EAC                     	;# 
  3167  0EB1                     	;# 
  3168  0EB2                     	;# 
  3169  0EB3                     	;# 
  3170  0EB8                     	;# 
  3171  0EB9                     	;# 
  3172  0EBA                     	;# 
  3173  0EBB                     	;# 
  3174  0EBC                     	;# 
  3175  0EBD                     	;# 
  3176  0EBE                     	;# 
  3177  0EC3                     	;# 
  3178  0EC5                     	;# 
  3179  0EC6                     	;# 
  3180  0EC7                     	;# 
  3181  0EC8                     	;# 
  3182  0EC9                     	;# 
  3183  0ECA                     	;# 
  3184  0ECB                     	;# 
  3185  0ECC                     	;# 
  3186  0F10                     	;# 
  3187  0F11                     	;# 
  3188  0F12                     	;# 
  3189  0F13                     	;# 
  3190  0F14                     	;# 
  3191  0F15                     	;# 
  3192  0F16                     	;# 
  3193  0F17                     	;# 
  3194  0F18                     	;# 
  3195  0F19                     	;# 
  3196  0F1A                     	;# 
  3197  0F1B                     	;# 
  3198  0F1C                     	;# 
  3199  0F1D                     	;# 
  3200  0F1E                     	;# 
  3201  0F1F                     	;# 
  3202  0F20                     	;# 
  3203  0F21                     	;# 
  3204  0F22                     	;# 
  3205  0F23                     	;# 
  3206  0F24                     	;# 
  3207  0F25                     	;# 
  3208  0F26                     	;# 
  3209  0F27                     	;# 
  3210  0F38                     	;# 
  3211  0F39                     	;# 
  3212  0F3A                     	;# 
  3213  0F3B                     	;# 
  3214  0F3C                     	;# 
  3215  0F3D                     	;# 
  3216  0F3E                     	;# 
  3217  0F3F                     	;# 
  3218  0F40                     	;# 
  3219  0F41                     	;# 
  3220  0F43                     	;# 
  3221  0F44                     	;# 
  3222  0F45                     	;# 
  3223  0F46                     	;# 
  3224  0F47                     	;# 
  3225  0F48                     	;# 
  3226  0F49                     	;# 
  3227  0F4A                     	;# 
  3228  0F4B                     	;# 
  3229  0F4C                     	;# 
  3230  0F4E                     	;# 
  3231  0F4F                     	;# 
  3232  0F50                     	;# 
  3233  0F51                     	;# 
  3234  0F52                     	;# 
  3235  0F53                     	;# 
  3236  0F54                     	;# 
  3237  0F55                     	;# 
  3238  0F56                     	;# 
  3239  0F57                     	;# 
  3240  0F65                     	;# 
  3241  0F68                     	;# 
  3242  0F69                     	;# 
  3243  0F6A                     	;# 
  3244  0F6B                     	;# 
  3245  0FE4                     	;# 
  3246  0FE5                     	;# 
  3247  0FE6                     	;# 
  3248  0FE7                     	;# 
  3249  0FE8                     	;# 
  3250  0FE9                     	;# 
  3251  0FEA                     	;# 
  3252  0FEB                     	;# 
  3253  0FED                     	;# 
  3254  0FEE                     	;# 
  3255  0FEF                     	;# 
  3256  0000                     	;# 
  3257  0001                     	;# 
  3258  0002                     	;# 
  3259  0003                     	;# 
  3260  0004                     	;# 
  3261  0005                     	;# 
  3262  0006                     	;# 
  3263  0007                     	;# 
  3264  0008                     	;# 
  3265  0009                     	;# 
  3266  000A                     	;# 
  3267  000B                     	;# 
  3268  000C                     	;# 
  3269  000D                     	;# 
  3270  000E                     	;# 
  3271  0010                     	;# 
  3272  0011                     	;# 
  3273  0012                     	;# 
  3274  0013                     	;# 
  3275  0016                     	;# 
  3276  0017                     	;# 
  3277  0018                     	;# 
  3278  001C                     	;# 
  3279  001C                     	;# 
  3280  001D                     	;# 
  3281  001D                     	;# 
  3282  001E                     	;# 
  3283  001F                     	;# 
  3284  008C                     	;# 
  3285  008C                     	;# 
  3286  008D                     	;# 
  3287  008E                     	;# 
  3288  008E                     	;# 
  3289  008F                     	;# 
  3290  0090                     	;# 
  3291  0090                     	;# 
  3292  0091                     	;# 
  3293  0093                     	;# 
  3294  0094                     	;# 
  3295  0095                     	;# 
  3296  0096                     	;# 
  3297  0097                     	;# 
  3298  0098                     	;# 
  3299  0099                     	;# 
  3300  009A                     	;# 
  3301  009B                     	;# 
  3302  009C                     	;# 
  3303  009D                     	;# 
  3304  009E                     	;# 
  3305  010C                     	;# 
  3306  010D                     	;# 
  3307  010E                     	;# 
  3308  010E                     	;# 
  3309  010F                     	;# 
  3310  0110                     	;# 
  3311  0110                     	;# 
  3312  0111                     	;# 
  3313  0112                     	;# 
  3314  0112                     	;# 
  3315  0113                     	;# 
  3316  0114                     	;# 
  3317  0114                     	;# 
  3318  0115                     	;# 
  3319  0116                     	;# 
  3320  0116                     	;# 
  3321  0117                     	;# 
  3322  0119                     	;# 
  3323  0119                     	;# 
  3324  0119                     	;# 
  3325  011A                     	;# 
  3326  011A                     	;# 
  3327  011A                     	;# 
  3328  011B                     	;# 
  3329  011B                     	;# 
  3330  011B                     	;# 
  3331  011B                     	;# 
  3332  011B                     	;# 
  3333  011C                     	;# 
  3334  011C                     	;# 
  3335  011C                     	;# 
  3336  011D                     	;# 
  3337  011D                     	;# 
  3338  011D                     	;# 
  3339  011E                     	;# 
  3340  011E                     	;# 
  3341  011E                     	;# 
  3342  011F                     	;# 
  3343  011F                     	;# 
  3344  011F                     	;# 
  3345  011F                     	;# 
  3346  011F                     	;# 
  3347  018C                     	;# 
  3348  018D                     	;# 
  3349  018E                     	;# 
  3350  018F                     	;# 
  3351  0190                     	;# 
  3352  0191                     	;# 
  3353  0192                     	;# 
  3354  0196                     	;# 
  3355  0197                     	;# 
  3356  0198                     	;# 
  3357  0199                     	;# 
  3358  019A                     	;# 
  3359  019B                     	;# 
  3360  019C                     	;# 
  3361  020C                     	;# 
  3362  020C                     	;# 
  3363  020D                     	;# 
  3364  020E                     	;# 
  3365  020F                     	;# 
  3366  020F                     	;# 
  3367  0210                     	;# 
  3368  0210                     	;# 
  3369  0211                     	;# 
  3370  0211                     	;# 
  3371  0212                     	;# 
  3372  0212                     	;# 
  3373  0213                     	;# 
  3374  0214                     	;# 
  3375  0215                     	;# 
  3376  0215                     	;# 
  3377  0216                     	;# 
  3378  0216                     	;# 
  3379  0217                     	;# 
  3380  0217                     	;# 
  3381  0218                     	;# 
  3382  0218                     	;# 
  3383  0219                     	;# 
  3384  021A                     	;# 
  3385  021B                     	;# 
  3386  021B                     	;# 
  3387  021C                     	;# 
  3388  021C                     	;# 
  3389  021D                     	;# 
  3390  021D                     	;# 
  3391  021E                     	;# 
  3392  021F                     	;# 
  3393  028C                     	;# 
  3394  028C                     	;# 
  3395  028D                     	;# 
  3396  028D                     	;# 
  3397  028E                     	;# 
  3398  028F                     	;# 
  3399  0290                     	;# 
  3400  0290                     	;# 
  3401  0291                     	;# 
  3402  0292                     	;# 
  3403  0292                     	;# 
  3404  0293                     	;# 
  3405  0293                     	;# 
  3406  0294                     	;# 
  3407  0295                     	;# 
  3408  0296                     	;# 
  3409  0296                     	;# 
  3410  0297                     	;# 
  3411  0298                     	;# 
  3412  0298                     	;# 
  3413  0299                     	;# 
  3414  0299                     	;# 
  3415  029A                     	;# 
  3416  029B                     	;# 
  3417  029C                     	;# 
  3418  029C                     	;# 
  3419  029D                     	;# 
  3420  030C                     	;# 
  3421  030C                     	;# 
  3422  030D                     	;# 
  3423  030E                     	;# 
  3424  030F                     	;# 
  3425  0310                     	;# 
  3426  0310                     	;# 
  3427  0311                     	;# 
  3428  0312                     	;# 
  3429  0313                     	;# 
  3430  0314                     	;# 
  3431  0314                     	;# 
  3432  0315                     	;# 
  3433  0316                     	;# 
  3434  0317                     	;# 
  3435  0318                     	;# 
  3436  0318                     	;# 
  3437  0319                     	;# 
  3438  031A                     	;# 
  3439  031B                     	;# 
  3440  031C                     	;# 
  3441  031C                     	;# 
  3442  031D                     	;# 
  3443  031E                     	;# 
  3444  031F                     	;# 
  3445  038C                     	;# 
  3446  038C                     	;# 
  3447  038D                     	;# 
  3448  038E                     	;# 
  3449  0390                     	;# 
  3450  0390                     	;# 
  3451  0391                     	;# 
  3452  0392                     	;# 
  3453  040C                     	;# 
  3454  040D                     	;# 
  3455  040E                     	;# 
  3456  040F                     	;# 
  3457  0410                     	;# 
  3458  0411                     	;# 
  3459  0416                     	;# 
  3460  0416                     	;# 
  3461  0417                     	;# 
  3462  0418                     	;# 
  3463  0418                     	;# 
  3464  0419                     	;# 
  3465  041A                     	;# 
  3466  041A                     	;# 
  3467  041B                     	;# 
  3468  041C                     	;# 
  3469  041C                     	;# 
  3470  041D                     	;# 
  3471  041E                     	;# 
  3472  041F                     	;# 
  3473  048C                     	;# 
  3474  048C                     	;# 
  3475  048D                     	;# 
  3476  048E                     	;# 
  3477  048F                     	;# 
  3478  048F                     	;# 
  3479  0490                     	;# 
  3480  0491                     	;# 
  3481  0492                     	;# 
  3482  0492                     	;# 
  3483  0493                     	;# 
  3484  0494                     	;# 
  3485  0495                     	;# 
  3486  0495                     	;# 
  3487  0496                     	;# 
  3488  0497                     	;# 
  3489  0498                     	;# 
  3490  0499                     	;# 
  3491  049A                     	;# 
  3492  049B                     	;# 
  3493  049C                     	;# 
  3494  049D                     	;# 
  3495  050C                     	;# 
  3496  050C                     	;# 
  3497  050D                     	;# 
  3498  050E                     	;# 
  3499  050F                     	;# 
  3500  050F                     	;# 
  3501  0510                     	;# 
  3502  0511                     	;# 
  3503  0512                     	;# 
  3504  0512                     	;# 
  3505  0513                     	;# 
  3506  0514                     	;# 
  3507  0515                     	;# 
  3508  0515                     	;# 
  3509  0516                     	;# 
  3510  0517                     	;# 
  3511  0518                     	;# 
  3512  0519                     	;# 
  3513  051A                     	;# 
  3514  051B                     	;# 
  3515  051C                     	;# 
  3516  051D                     	;# 
  3517  058C                     	;# 
  3518  058C                     	;# 
  3519  058D                     	;# 
  3520  058E                     	;# 
  3521  058F                     	;# 
  3522  058F                     	;# 
  3523  0590                     	;# 
  3524  0591                     	;# 
  3525  0592                     	;# 
  3526  0593                     	;# 
  3527  060C                     	;# 
  3528  060D                     	;# 
  3529  060E                     	;# 
  3530  060F                     	;# 
  3531  0610                     	;# 
  3532  0611                     	;# 
  3533  0612                     	;# 
  3534  0613                     	;# 
  3535  0614                     	;# 
  3536  0616                     	;# 
  3537  0617                     	;# 
  3538  0618                     	;# 
  3539  0619                     	;# 
  3540  061A                     	;# 
  3541  061B                     	;# 
  3542  061C                     	;# 
  3543  061D                     	;# 
  3544  061E                     	;# 
  3545  068C                     	;# 
  3546  068D                     	;# 
  3547  068E                     	;# 
  3548  068F                     	;# 
  3549  0690                     	;# 
  3550  0691                     	;# 
  3551  0692                     	;# 
  3552  0693                     	;# 
  3553  0694                     	;# 
  3554  070C                     	;# 
  3555  070D                     	;# 
  3556  070E                     	;# 
  3557  070F                     	;# 
  3558  0710                     	;# 
  3559  0711                     	;# 
  3560  0712                     	;# 
  3561  0713                     	;# 
  3562  0714                     	;# 
  3563  0716                     	;# 
  3564  0717                     	;# 
  3565  0718                     	;# 
  3566  0719                     	;# 
  3567  071A                     	;# 
  3568  071B                     	;# 
  3569  071C                     	;# 
  3570  071D                     	;# 
  3571  071E                     	;# 
  3572  0796                     	;# 
  3573  0797                     	;# 
  3574  0798                     	;# 
  3575  0799                     	;# 
  3576  079A                     	;# 
  3577  079B                     	;# 
  3578  080C                     	;# 
  3579  080D                     	;# 
  3580  080E                     	;# 
  3581  080F                     	;# 
  3582  0810                     	;# 
  3583  0811                     	;# 
  3584  0812                     	;# 
  3585  0813                     	;# 
  3586  0814                     	;# 
  3587  081A                     	;# 
  3588  081B                     	;# 
  3589  081C                     	;# 
  3590  081D                     	;# 
  3591  081E                     	;# 
  3592  081F                     	;# 
  3593  088C                     	;# 
  3594  088D                     	;# 
  3595  088E                     	;# 
  3596  088F                     	;# 
  3597  0890                     	;# 
  3598  0891                     	;# 
  3599  0892                     	;# 
  3600  0893                     	;# 
  3601  0895                     	;# 
  3602  0896                     	;# 
  3603  0897                     	;# 
  3604  0898                     	;# 
  3605  0899                     	;# 
  3606  089A                     	;# 
  3607  089B                     	;# 
  3608  090C                     	;# 
  3609  090E                     	;# 
  3610  090F                     	;# 
  3611  091F                     	;# 
  3612  091F                     	;# 
  3613  098F                     	;# 
  3614  098F                     	;# 
  3615  0990                     	;# 
  3616  0991                     	;# 
  3617  0992                     	;# 
  3618  0993                     	;# 
  3619  0994                     	;# 
  3620  0995                     	;# 
  3621  0996                     	;# 
  3622  0997                     	;# 
  3623  0E0F                     	;# 
  3624  0E10                     	;# 
  3625  0E11                     	;# 
  3626  0E12                     	;# 
  3627  0E13                     	;# 
  3628  0E14                     	;# 
  3629  0E15                     	;# 
  3630  0E16                     	;# 
  3631  0E17                     	;# 
  3632  0E18                     	;# 
  3633  0E19                     	;# 
  3634  0E1A                     	;# 
  3635  0E1B                     	;# 
  3636  0E1C                     	;# 
  3637  0E1D                     	;# 
  3638  0E1E                     	;# 
  3639  0E1F                     	;# 
  3640  0E20                     	;# 
  3641  0E21                     	;# 
  3642  0E22                     	;# 
  3643  0E23                     	;# 
  3644  0E24                     	;# 
  3645  0E25                     	;# 
  3646  0E26                     	;# 
  3647  0E27                     	;# 
  3648  0E28                     	;# 
  3649  0E29                     	;# 
  3650  0E2A                     	;# 
  3651  0E2B                     	;# 
  3652  0E2C                     	;# 
  3653  0E2D                     	;# 
  3654  0E2E                     	;# 
  3655  0E2F                     	;# 
  3656  0E30                     	;# 
  3657  0E31                     	;# 
  3658  0E32                     	;# 
  3659  0E33                     	;# 
  3660  0E34                     	;# 
  3661  0E35                     	;# 
  3662  0E36                     	;# 
  3663  0E37                     	;# 
  3664  0E8F                     	;# 
  3665  0E90                     	;# 
  3666  0E91                     	;# 
  3667  0E92                     	;# 
  3668  0E93                     	;# 
  3669  0E94                     	;# 
  3670  0E95                     	;# 
  3671  0E96                     	;# 
  3672  0E97                     	;# 
  3673  0E9C                     	;# 
  3674  0E9D                     	;# 
  3675  0E9E                     	;# 
  3676  0EA1                     	;# 
  3677  0EA2                     	;# 
  3678  0EA3                     	;# 
  3679  0EA4                     	;# 
  3680  0EA5                     	;# 
  3681  0EA9                     	;# 
  3682  0EAA                     	;# 
  3683  0EAB                     	;# 
  3684  0EAC                     	;# 
  3685  0EB1                     	;# 
  3686  0EB2                     	;# 
  3687  0EB3                     	;# 
  3688  0EB8                     	;# 
  3689  0EB9                     	;# 
  3690  0EBA                     	;# 
  3691  0EBB                     	;# 
  3692  0EBC                     	;# 
  3693  0EBD                     	;# 
  3694  0EBE                     	;# 
  3695  0EC3                     	;# 
  3696  0EC5                     	;# 
  3697  0EC6                     	;# 
  3698  0EC7                     	;# 
  3699  0EC8                     	;# 
  3700  0EC9                     	;# 
  3701  0ECA                     	;# 
  3702  0ECB                     	;# 
  3703  0ECC                     	;# 
  3704  0F10                     	;# 
  3705  0F11                     	;# 
  3706  0F12                     	;# 
  3707  0F13                     	;# 
  3708  0F14                     	;# 
  3709  0F15                     	;# 
  3710  0F16                     	;# 
  3711  0F17                     	;# 
  3712  0F18                     	;# 
  3713  0F19                     	;# 
  3714  0F1A                     	;# 
  3715  0F1B                     	;# 
  3716  0F1C                     	;# 
  3717  0F1D                     	;# 
  3718  0F1E                     	;# 
  3719  0F1F                     	;# 
  3720  0F20                     	;# 
  3721  0F21                     	;# 
  3722  0F22                     	;# 
  3723  0F23                     	;# 
  3724  0F24                     	;# 
  3725  0F25                     	;# 
  3726  0F26                     	;# 
  3727  0F27                     	;# 
  3728  0F38                     	;# 
  3729  0F39                     	;# 
  3730  0F3A                     	;# 
  3731  0F3B                     	;# 
  3732  0F3C                     	;# 
  3733  0F3D                     	;# 
  3734  0F3E                     	;# 
  3735  0F3F                     	;# 
  3736  0F40                     	;# 
  3737  0F41                     	;# 
  3738  0F43                     	;# 
  3739  0F44                     	;# 
  3740  0F45                     	;# 
  3741  0F46                     	;# 
  3742  0F47                     	;# 
  3743  0F48                     	;# 
  3744  0F49                     	;# 
  3745  0F4A                     	;# 
  3746  0F4B                     	;# 
  3747  0F4C                     	;# 
  3748  0F4E                     	;# 
  3749  0F4F                     	;# 
  3750  0F50                     	;# 
  3751  0F51                     	;# 
  3752  0F52                     	;# 
  3753  0F53                     	;# 
  3754  0F54                     	;# 
  3755  0F55                     	;# 
  3756  0F56                     	;# 
  3757  0F57                     	;# 
  3758  0F65                     	;# 
  3759  0F68                     	;# 
  3760  0F69                     	;# 
  3761  0F6A                     	;# 
  3762  0F6B                     	;# 
  3763  0FE4                     	;# 
  3764  0FE5                     	;# 
  3765  0FE6                     	;# 
  3766  0FE7                     	;# 
  3767  0FE8                     	;# 
  3768  0FE9                     	;# 
  3769  0FEA                     	;# 
  3770  0FEB                     	;# 
  3771  0FED                     	;# 
  3772  0FEE                     	;# 
  3773  0FEF                     	;# 
  3774  0000                     	;# 
  3775  0001                     	;# 
  3776  0002                     	;# 
  3777  0003                     	;# 
  3778  0004                     	;# 
  3779  0005                     	;# 
  3780  0006                     	;# 
  3781  0007                     	;# 
  3782  0008                     	;# 
  3783  0009                     	;# 
  3784  000A                     	;# 
  3785  000B                     	;# 
  3786  000C                     	;# 
  3787  000D                     	;# 
  3788  000E                     	;# 
  3789  0010                     	;# 
  3790  0011                     	;# 
  3791  0012                     	;# 
  3792  0013                     	;# 
  3793  0016                     	;# 
  3794  0017                     	;# 
  3795  0018                     	;# 
  3796  001C                     	;# 
  3797  001C                     	;# 
  3798  001D                     	;# 
  3799  001D                     	;# 
  3800  001E                     	;# 
  3801  001F                     	;# 
  3802  008C                     	;# 
  3803  008C                     	;# 
  3804  008D                     	;# 
  3805  008E                     	;# 
  3806  008E                     	;# 
  3807  008F                     	;# 
  3808  0090                     	;# 
  3809  0090                     	;# 
  3810  0091                     	;# 
  3811  0093                     	;# 
  3812  0094                     	;# 
  3813  0095                     	;# 
  3814  0096                     	;# 
  3815  0097                     	;# 
  3816  0098                     	;# 
  3817  0099                     	;# 
  3818  009A                     	;# 
  3819  009B                     	;# 
  3820  009C                     	;# 
  3821  009D                     	;# 
  3822  009E                     	;# 
  3823  010C                     	;# 
  3824  010D                     	;# 
  3825  010E                     	;# 
  3826  010E                     	;# 
  3827  010F                     	;# 
  3828  0110                     	;# 
  3829  0110                     	;# 
  3830  0111                     	;# 
  3831  0112                     	;# 
  3832  0112                     	;# 
  3833  0113                     	;# 
  3834  0114                     	;# 
  3835  0114                     	;# 
  3836  0115                     	;# 
  3837  0116                     	;# 
  3838  0116                     	;# 
  3839  0117                     	;# 
  3840  0119                     	;# 
  3841  0119                     	;# 
  3842  0119                     	;# 
  3843  011A                     	;# 
  3844  011A                     	;# 
  3845  011A                     	;# 
  3846  011B                     	;# 
  3847  011B                     	;# 
  3848  011B                     	;# 
  3849  011B                     	;# 
  3850  011B                     	;# 
  3851  011C                     	;# 
  3852  011C                     	;# 
  3853  011C                     	;# 
  3854  011D                     	;# 
  3855  011D                     	;# 
  3856  011D                     	;# 
  3857  011E                     	;# 
  3858  011E                     	;# 
  3859  011E                     	;# 
  3860  011F                     	;# 
  3861  011F                     	;# 
  3862  011F                     	;# 
  3863  011F                     	;# 
  3864  011F                     	;# 
  3865  018C                     	;# 
  3866  018D                     	;# 
  3867  018E                     	;# 
  3868  018F                     	;# 
  3869  0190                     	;# 
  3870  0191                     	;# 
  3871  0192                     	;# 
  3872  0196                     	;# 
  3873  0197                     	;# 
  3874  0198                     	;# 
  3875  0199                     	;# 
  3876  019A                     	;# 
  3877  019B                     	;# 
  3878  019C                     	;# 
  3879  020C                     	;# 
  3880  020C                     	;# 
  3881  020D                     	;# 
  3882  020E                     	;# 
  3883  020F                     	;# 
  3884  020F                     	;# 
  3885  0210                     	;# 
  3886  0210                     	;# 
  3887  0211                     	;# 
  3888  0211                     	;# 
  3889  0212                     	;# 
  3890  0212                     	;# 
  3891  0213                     	;# 
  3892  0214                     	;# 
  3893  0215                     	;# 
  3894  0215                     	;# 
  3895  0216                     	;# 
  3896  0216                     	;# 
  3897  0217                     	;# 
  3898  0217                     	;# 
  3899  0218                     	;# 
  3900  0218                     	;# 
  3901  0219                     	;# 
  3902  021A                     	;# 
  3903  021B                     	;# 
  3904  021B                     	;# 
  3905  021C                     	;# 
  3906  021C                     	;# 
  3907  021D                     	;# 
  3908  021D                     	;# 
  3909  021E                     	;# 
  3910  021F                     	;# 
  3911  028C                     	;# 
  3912  028C                     	;# 
  3913  028D                     	;# 
  3914  028D                     	;# 
  3915  028E                     	;# 
  3916  028F                     	;# 
  3917  0290                     	;# 
  3918  0290                     	;# 
  3919  0291                     	;# 
  3920  0292                     	;# 
  3921  0292                     	;# 
  3922  0293                     	;# 
  3923  0293                     	;# 
  3924  0294                     	;# 
  3925  0295                     	;# 
  3926  0296                     	;# 
  3927  0296                     	;# 
  3928  0297                     	;# 
  3929  0298                     	;# 
  3930  0298                     	;# 
  3931  0299                     	;# 
  3932  0299                     	;# 
  3933  029A                     	;# 
  3934  029B                     	;# 
  3935  029C                     	;# 
  3936  029C                     	;# 
  3937  029D                     	;# 
  3938  030C                     	;# 
  3939  030C                     	;# 
  3940  030D                     	;# 
  3941  030E                     	;# 
  3942  030F                     	;# 
  3943  0310                     	;# 
  3944  0310                     	;# 
  3945  0311                     	;# 
  3946  0312                     	;# 
  3947  0313                     	;# 
  3948  0314                     	;# 
  3949  0314                     	;# 
  3950  0315                     	;# 
  3951  0316                     	;# 
  3952  0317                     	;# 
  3953  0318                     	;# 
  3954  0318                     	;# 
  3955  0319                     	;# 
  3956  031A                     	;# 
  3957  031B                     	;# 
  3958  031C                     	;# 
  3959  031C                     	;# 
  3960  031D                     	;# 
  3961  031E                     	;# 
  3962  031F                     	;# 
  3963  038C                     	;# 
  3964  038C                     	;# 
  3965  038D                     	;# 
  3966  038E                     	;# 
  3967  0390                     	;# 
  3968  0390                     	;# 
  3969  0391                     	;# 
  3970  0392                     	;# 
  3971  040C                     	;# 
  3972  040D                     	;# 
  3973  040E                     	;# 
  3974  040F                     	;# 
  3975  0410                     	;# 
  3976  0411                     	;# 
  3977  0416                     	;# 
  3978  0416                     	;# 
  3979  0417                     	;# 
  3980  0418                     	;# 
  3981  0418                     	;# 
  3982  0419                     	;# 
  3983  041A                     	;# 
  3984  041A                     	;# 
  3985  041B                     	;# 
  3986  041C                     	;# 
  3987  041C                     	;# 
  3988  041D                     	;# 
  3989  041E                     	;# 
  3990  041F                     	;# 
  3991  048C                     	;# 
  3992  048C                     	;# 
  3993  048D                     	;# 
  3994  048E                     	;# 
  3995  048F                     	;# 
  3996  048F                     	;# 
  3997  0490                     	;# 
  3998  0491                     	;# 
  3999  0492                     	;# 
  4000  0492                     	;# 
  4001  0493                     	;# 
  4002  0494                     	;# 
  4003  0495                     	;# 
  4004  0495                     	;# 
  4005  0496                     	;# 
  4006  0497                     	;# 
  4007  0498                     	;# 
  4008  0499                     	;# 
  4009  049A                     	;# 
  4010  049B                     	;# 
  4011  049C                     	;# 
  4012  049D                     	;# 
  4013  050C                     	;# 
  4014  050C                     	;# 
  4015  050D                     	;# 
  4016  050E                     	;# 
  4017  050F                     	;# 
  4018  050F                     	;# 
  4019  0510                     	;# 
  4020  0511                     	;# 
  4021  0512                     	;# 
  4022  0512                     	;# 
  4023  0513                     	;# 
  4024  0514                     	;# 
  4025  0515                     	;# 
  4026  0515                     	;# 
  4027  0516                     	;# 
  4028  0517                     	;# 
  4029  0518                     	;# 
  4030  0519                     	;# 
  4031  051A                     	;# 
  4032  051B                     	;# 
  4033  051C                     	;# 
  4034  051D                     	;# 
  4035  058C                     	;# 
  4036  058C                     	;# 
  4037  058D                     	;# 
  4038  058E                     	;# 
  4039  058F                     	;# 
  4040  058F                     	;# 
  4041  0590                     	;# 
  4042  0591                     	;# 
  4043  0592                     	;# 
  4044  0593                     	;# 
  4045  060C                     	;# 
  4046  060D                     	;# 
  4047  060E                     	;# 
  4048  060F                     	;# 
  4049  0610                     	;# 
  4050  0611                     	;# 
  4051  0612                     	;# 
  4052  0613                     	;# 
  4053  0614                     	;# 
  4054  0616                     	;# 
  4055  0617                     	;# 
  4056  0618                     	;# 
  4057  0619                     	;# 
  4058  061A                     	;# 
  4059  061B                     	;# 
  4060  061C                     	;# 
  4061  061D                     	;# 
  4062  061E                     	;# 
  4063  068C                     	;# 
  4064  068D                     	;# 
  4065  068E                     	;# 
  4066  068F                     	;# 
  4067  0690                     	;# 
  4068  0691                     	;# 
  4069  0692                     	;# 
  4070  0693                     	;# 
  4071  0694                     	;# 
  4072  070C                     	;# 
  4073  070D                     	;# 
  4074  070E                     	;# 
  4075  070F                     	;# 
  4076  0710                     	;# 
  4077  0711                     	;# 
  4078  0712                     	;# 
  4079  0713                     	;# 
  4080  0714                     	;# 
  4081  0716                     	;# 
  4082  0717                     	;# 
  4083  0718                     	;# 
  4084  0719                     	;# 
  4085  071A                     	;# 
  4086  071B                     	;# 
  4087  071C                     	;# 
  4088  071D                     	;# 
  4089  071E                     	;# 
  4090  0796                     	;# 
  4091  0797                     	;# 
  4092  0798                     	;# 
  4093  0799                     	;# 
  4094  079A                     	;# 
  4095  079B                     	;# 
  4096  080C                     	;# 
  4097  080D                     	;# 
  4098  080E                     	;# 
  4099  080F                     	;# 
  4100  0810                     	;# 
  4101  0811                     	;# 
  4102  0812                     	;# 
  4103  0813                     	;# 
  4104  0814                     	;# 
  4105  081A                     	;# 
  4106  081B                     	;# 
  4107  081C                     	;# 
  4108  081D                     	;# 
  4109  081E                     	;# 
  4110  081F                     	;# 
  4111  088C                     	;# 
  4112  088D                     	;# 
  4113  088E                     	;# 
  4114  088F                     	;# 
  4115  0890                     	;# 
  4116  0891                     	;# 
  4117  0892                     	;# 
  4118  0893                     	;# 
  4119  0895                     	;# 
  4120  0896                     	;# 
  4121  0897                     	;# 
  4122  0898                     	;# 
  4123  0899                     	;# 
  4124  089A                     	;# 
  4125  089B                     	;# 
  4126  090C                     	;# 
  4127  090E                     	;# 
  4128  090F                     	;# 
  4129  091F                     	;# 
  4130  091F                     	;# 
  4131  098F                     	;# 
  4132  098F                     	;# 
  4133  0990                     	;# 
  4134  0991                     	;# 
  4135  0992                     	;# 
  4136  0993                     	;# 
  4137  0994                     	;# 
  4138  0995                     	;# 
  4139  0996                     	;# 
  4140  0997                     	;# 
  4141  0E0F                     	;# 
  4142  0E10                     	;# 
  4143  0E11                     	;# 
  4144  0E12                     	;# 
  4145  0E13                     	;# 
  4146  0E14                     	;# 
  4147  0E15                     	;# 
  4148  0E16                     	;# 
  4149  0E17                     	;# 
  4150  0E18                     	;# 
  4151  0E19                     	;# 
  4152  0E1A                     	;# 
  4153  0E1B                     	;# 
  4154  0E1C                     	;# 
  4155  0E1D                     	;# 
  4156  0E1E                     	;# 
  4157  0E1F                     	;# 
  4158  0E20                     	;# 
  4159  0E21                     	;# 
  4160  0E22                     	;# 
  4161  0E23                     	;# 
  4162  0E24                     	;# 
  4163  0E25                     	;# 
  4164  0E26                     	;# 
  4165  0E27                     	;# 
  4166  0E28                     	;# 
  4167  0E29                     	;# 
  4168  0E2A                     	;# 
  4169  0E2B                     	;# 
  4170  0E2C                     	;# 
  4171  0E2D                     	;# 
  4172  0E2E                     	;# 
  4173  0E2F                     	;# 
  4174  0E30                     	;# 
  4175  0E31                     	;# 
  4176  0E32                     	;# 
  4177  0E33                     	;# 
  4178  0E34                     	;# 
  4179  0E35                     	;# 
  4180  0E36                     	;# 
  4181  0E37                     	;# 
  4182  0E8F                     	;# 
  4183  0E90                     	;# 
  4184  0E91                     	;# 
  4185  0E92                     	;# 
  4186  0E93                     	;# 
  4187  0E94                     	;# 
  4188  0E95                     	;# 
  4189  0E96                     	;# 
  4190  0E97                     	;# 
  4191  0E9C                     	;# 
  4192  0E9D                     	;# 
  4193  0E9E                     	;# 
  4194  0EA1                     	;# 
  4195  0EA2                     	;# 
  4196  0EA3                     	;# 
  4197  0EA4                     	;# 
  4198  0EA5                     	;# 
  4199  0EA9                     	;# 
  4200  0EAA                     	;# 
  4201  0EAB                     	;# 
  4202  0EAC                     	;# 
  4203  0EB1                     	;# 
  4204  0EB2                     	;# 
  4205  0EB3                     	;# 
  4206  0EB8                     	;# 
  4207  0EB9                     	;# 
  4208  0EBA                     	;# 
  4209  0EBB                     	;# 
  4210  0EBC                     	;# 
  4211  0EBD                     	;# 
  4212  0EBE                     	;# 
  4213  0EC3                     	;# 
  4214  0EC5                     	;# 
  4215  0EC6                     	;# 
  4216  0EC7                     	;# 
  4217  0EC8                     	;# 
  4218  0EC9                     	;# 
  4219  0ECA                     	;# 
  4220  0ECB                     	;# 
  4221  0ECC                     	;# 
  4222  0F10                     	;# 
  4223  0F11                     	;# 
  4224  0F12                     	;# 
  4225  0F13                     	;# 
  4226  0F14                     	;# 
  4227  0F15                     	;# 
  4228  0F16                     	;# 
  4229  0F17                     	;# 
  4230  0F18                     	;# 
  4231  0F19                     	;# 
  4232  0F1A                     	;# 
  4233  0F1B                     	;# 
  4234  0F1C                     	;# 
  4235  0F1D                     	;# 
  4236  0F1E                     	;# 
  4237  0F1F                     	;# 
  4238  0F20                     	;# 
  4239  0F21                     	;# 
  4240  0F22                     	;# 
  4241  0F23                     	;# 
  4242  0F24                     	;# 
  4243  0F25                     	;# 
  4244  0F26                     	;# 
  4245  0F27                     	;# 
  4246  0F38                     	;# 
  4247  0F39                     	;# 
  4248  0F3A                     	;# 
  4249  0F3B                     	;# 
  4250  0F3C                     	;# 
  4251  0F3D                     	;# 
  4252  0F3E                     	;# 
  4253  0F3F                     	;# 
  4254  0F40                     	;# 
  4255  0F41                     	;# 
  4256  0F43                     	;# 
  4257  0F44                     	;# 
  4258  0F45                     	;# 
  4259  0F46                     	;# 
  4260  0F47                     	;# 
  4261  0F48                     	;# 
  4262  0F49                     	;# 
  4263  0F4A                     	;# 
  4264  0F4B                     	;# 
  4265  0F4C                     	;# 
  4266  0F4E                     	;# 
  4267  0F4F                     	;# 
  4268  0F50                     	;# 
  4269  0F51                     	;# 
  4270  0F52                     	;# 
  4271  0F53                     	;# 
  4272  0F54                     	;# 
  4273  0F55                     	;# 
  4274  0F56                     	;# 
  4275  0F57                     	;# 
  4276  0F65                     	;# 
  4277  0F68                     	;# 
  4278  0F69                     	;# 
  4279  0F6A                     	;# 
  4280  0F6B                     	;# 
  4281  0FE4                     	;# 
  4282  0FE5                     	;# 
  4283  0FE6                     	;# 
  4284  0FE7                     	;# 
  4285  0FE8                     	;# 
  4286  0FE9                     	;# 
  4287  0FEA                     	;# 
  4288  0FEB                     	;# 
  4289  0FED                     	;# 
  4290  0FEE                     	;# 
  4291  0FEF                     	;# 
  4292  0000                     	;# 
  4293  0001                     	;# 
  4294  0002                     	;# 
  4295  0003                     	;# 
  4296  0004                     	;# 
  4297  0005                     	;# 
  4298  0006                     	;# 
  4299  0007                     	;# 
  4300  0008                     	;# 
  4301  0009                     	;# 
  4302  000A                     	;# 
  4303  000B                     	;# 
  4304  000C                     	;# 
  4305  000D                     	;# 
  4306  000E                     	;# 
  4307  0010                     	;# 
  4308  0011                     	;# 
  4309  0012                     	;# 
  4310  0013                     	;# 
  4311  0016                     	;# 
  4312  0017                     	;# 
  4313  0018                     	;# 
  4314  001C                     	;# 
  4315  001C                     	;# 
  4316  001D                     	;# 
  4317  001D                     	;# 
  4318  001E                     	;# 
  4319  001F                     	;# 
  4320  008C                     	;# 
  4321  008C                     	;# 
  4322  008D                     	;# 
  4323  008E                     	;# 
  4324  008E                     	;# 
  4325  008F                     	;# 
  4326  0090                     	;# 
  4327  0090                     	;# 
  4328  0091                     	;# 
  4329  0093                     	;# 
  4330  0094                     	;# 
  4331  0095                     	;# 
  4332  0096                     	;# 
  4333  0097                     	;# 
  4334  0098                     	;# 
  4335  0099                     	;# 
  4336  009A                     	;# 
  4337  009B                     	;# 
  4338  009C                     	;# 
  4339  009D                     	;# 
  4340  009E                     	;# 
  4341  010C                     	;# 
  4342  010D                     	;# 
  4343  010E                     	;# 
  4344  010E                     	;# 
  4345  010F                     	;# 
  4346  0110                     	;# 
  4347  0110                     	;# 
  4348  0111                     	;# 
  4349  0112                     	;# 
  4350  0112                     	;# 
  4351  0113                     	;# 
  4352  0114                     	;# 
  4353  0114                     	;# 
  4354  0115                     	;# 
  4355  0116                     	;# 
  4356  0116                     	;# 
  4357  0117                     	;# 
  4358  0119                     	;# 
  4359  0119                     	;# 
  4360  0119                     	;# 
  4361  011A                     	;# 
  4362  011A                     	;# 
  4363  011A                     	;# 
  4364  011B                     	;# 
  4365  011B                     	;# 
  4366  011B                     	;# 
  4367  011B                     	;# 
  4368  011B                     	;# 
  4369  011C                     	;# 
  4370  011C                     	;# 
  4371  011C                     	;# 
  4372  011D                     	;# 
  4373  011D                     	;# 
  4374  011D                     	;# 
  4375  011E                     	;# 
  4376  011E                     	;# 
  4377  011E                     	;# 
  4378  011F                     	;# 
  4379  011F                     	;# 
  4380  011F                     	;# 
  4381  011F                     	;# 
  4382  011F                     	;# 
  4383  018C                     	;# 
  4384  018D                     	;# 
  4385  018E                     	;# 
  4386  018F                     	;# 
  4387  0190                     	;# 
  4388  0191                     	;# 
  4389  0192                     	;# 
  4390  0196                     	;# 
  4391  0197                     	;# 
  4392  0198                     	;# 
  4393  0199                     	;# 
  4394  019A                     	;# 
  4395  019B                     	;# 
  4396  019C                     	;# 
  4397  020C                     	;# 
  4398  020C                     	;# 
  4399  020D                     	;# 
  4400  020E                     	;# 
  4401  020F                     	;# 
  4402  020F                     	;# 
  4403  0210                     	;# 
  4404  0210                     	;# 
  4405  0211                     	;# 
  4406  0211                     	;# 
  4407  0212                     	;# 
  4408  0212                     	;# 
  4409  0213                     	;# 
  4410  0214                     	;# 
  4411  0215                     	;# 
  4412  0215                     	;# 
  4413  0216                     	;# 
  4414  0216                     	;# 
  4415  0217                     	;# 
  4416  0217                     	;# 
  4417  0218                     	;# 
  4418  0218                     	;# 
  4419  0219                     	;# 
  4420  021A                     	;# 
  4421  021B                     	;# 
  4422  021B                     	;# 
  4423  021C                     	;# 
  4424  021C                     	;# 
  4425  021D                     	;# 
  4426  021D                     	;# 
  4427  021E                     	;# 
  4428  021F                     	;# 
  4429  028C                     	;# 
  4430  028C                     	;# 
  4431  028D                     	;# 
  4432  028D                     	;# 
  4433  028E                     	;# 
  4434  028F                     	;# 
  4435  0290                     	;# 
  4436  0290                     	;# 
  4437  0291                     	;# 
  4438  0292                     	;# 
  4439  0292                     	;# 
  4440  0293                     	;# 
  4441  0293                     	;# 
  4442  0294                     	;# 
  4443  0295                     	;# 
  4444  0296                     	;# 
  4445  0296                     	;# 
  4446  0297                     	;# 
  4447  0298                     	;# 
  4448  0298                     	;# 
  4449  0299                     	;# 
  4450  0299                     	;# 
  4451  029A                     	;# 
  4452  029B                     	;# 
  4453  029C                     	;# 
  4454  029C                     	;# 
  4455  029D                     	;# 
  4456  030C                     	;# 
  4457  030C                     	;# 
  4458  030D                     	;# 
  4459  030E                     	;# 
  4460  030F                     	;# 
  4461  0310                     	;# 
  4462  0310                     	;# 
  4463  0311                     	;# 
  4464  0312                     	;# 
  4465  0313                     	;# 
  4466  0314                     	;# 
  4467  0314                     	;# 
  4468  0315                     	;# 
  4469  0316                     	;# 
  4470  0317                     	;# 
  4471  0318                     	;# 
  4472  0318                     	;# 
  4473  0319                     	;# 
  4474  031A                     	;# 
  4475  031B                     	;# 
  4476  031C                     	;# 
  4477  031C                     	;# 
  4478  031D                     	;# 
  4479  031E                     	;# 
  4480  031F                     	;# 
  4481  038C                     	;# 
  4482  038C                     	;# 
  4483  038D                     	;# 
  4484  038E                     	;# 
  4485  0390                     	;# 
  4486  0390                     	;# 
  4487  0391                     	;# 
  4488  0392                     	;# 
  4489  040C                     	;# 
  4490  040D                     	;# 
  4491  040E                     	;# 
  4492  040F                     	;# 
  4493  0410                     	;# 
  4494  0411                     	;# 
  4495  0416                     	;# 
  4496  0416                     	;# 
  4497  0417                     	;# 
  4498  0418                     	;# 
  4499  0418                     	;# 
  4500  0419                     	;# 
  4501  041A                     	;# 
  4502  041A                     	;# 
  4503  041B                     	;# 
  4504  041C                     	;# 
  4505  041C                     	;# 
  4506  041D                     	;# 
  4507  041E                     	;# 
  4508  041F                     	;# 
  4509  048C                     	;# 
  4510  048C                     	;# 
  4511  048D                     	;# 
  4512  048E                     	;# 
  4513  048F                     	;# 
  4514  048F                     	;# 
  4515  0490                     	;# 
  4516  0491                     	;# 
  4517  0492                     	;# 
  4518  0492                     	;# 
  4519  0493                     	;# 
  4520  0494                     	;# 
  4521  0495                     	;# 
  4522  0495                     	;# 
  4523  0496                     	;# 
  4524  0497                     	;# 
  4525  0498                     	;# 
  4526  0499                     	;# 
  4527  049A                     	;# 
  4528  049B                     	;# 
  4529  049C                     	;# 
  4530  049D                     	;# 
  4531  050C                     	;# 
  4532  050C                     	;# 
  4533  050D                     	;# 
  4534  050E                     	;# 
  4535  050F                     	;# 
  4536  050F                     	;# 
  4537  0510                     	;# 
  4538  0511                     	;# 
  4539  0512                     	;# 
  4540  0512                     	;# 
  4541  0513                     	;# 
  4542  0514                     	;# 
  4543  0515                     	;# 
  4544  0515                     	;# 
  4545  0516                     	;# 
  4546  0517                     	;# 
  4547  0518                     	;# 
  4548  0519                     	;# 
  4549  051A                     	;# 
  4550  051B                     	;# 
  4551  051C                     	;# 
  4552  051D                     	;# 
  4553  058C                     	;# 
  4554  058C                     	;# 
  4555  058D                     	;# 
  4556  058E                     	;# 
  4557  058F                     	;# 
  4558  058F                     	;# 
  4559  0590                     	;# 
  4560  0591                     	;# 
  4561  0592                     	;# 
  4562  0593                     	;# 
  4563  060C                     	;# 
  4564  060D                     	;# 
  4565  060E                     	;# 
  4566  060F                     	;# 
  4567  0610                     	;# 
  4568  0611                     	;# 
  4569  0612                     	;# 
  4570  0613                     	;# 
  4571  0614                     	;# 
  4572  0616                     	;# 
  4573  0617                     	;# 
  4574  0618                     	;# 
  4575  0619                     	;# 
  4576  061A                     	;# 
  4577  061B                     	;# 
  4578  061C                     	;# 
  4579  061D                     	;# 
  4580  061E                     	;# 
  4581  068C                     	;# 
  4582  068D                     	;# 
  4583  068E                     	;# 
  4584  068F                     	;# 
  4585  0690                     	;# 
  4586  0691                     	;# 
  4587  0692                     	;# 
  4588  0693                     	;# 
  4589  0694                     	;# 
  4590  070C                     	;# 
  4591  070D                     	;# 
  4592  070E                     	;# 
  4593  070F                     	;# 
  4594  0710                     	;# 
  4595  0711                     	;# 
  4596  0712                     	;# 
  4597  0713                     	;# 
  4598  0714                     	;# 
  4599  0716                     	;# 
  4600  0717                     	;# 
  4601  0718                     	;# 
  4602  0719                     	;# 
  4603  071A                     	;# 
  4604  071B                     	;# 
  4605  071C                     	;# 
  4606  071D                     	;# 
  4607  071E                     	;# 
  4608  0796                     	;# 
  4609  0797                     	;# 
  4610  0798                     	;# 
  4611  0799                     	;# 
  4612  079A                     	;# 
  4613  079B                     	;# 
  4614  080C                     	;# 
  4615  080D                     	;# 
  4616  080E                     	;# 
  4617  080F                     	;# 
  4618  0810                     	;# 
  4619  0811                     	;# 
  4620  0812                     	;# 
  4621  0813                     	;# 
  4622  0814                     	;# 
  4623  081A                     	;# 
  4624  081B                     	;# 
  4625  081C                     	;# 
  4626  081D                     	;# 
  4627  081E                     	;# 
  4628  081F                     	;# 
  4629  088C                     	;# 
  4630  088D                     	;# 
  4631  088E                     	;# 
  4632  088F                     	;# 
  4633  0890                     	;# 
  4634  0891                     	;# 
  4635  0892                     	;# 
  4636  0893                     	;# 
  4637  0895                     	;# 
  4638  0896                     	;# 
  4639  0897                     	;# 
  4640  0898                     	;# 
  4641  0899                     	;# 
  4642  089A                     	;# 
  4643  089B                     	;# 
  4644  090C                     	;# 
  4645  090E                     	;# 
  4646  090F                     	;# 
  4647  091F                     	;# 
  4648  091F                     	;# 
  4649  098F                     	;# 
  4650  098F                     	;# 
  4651  0990                     	;# 
  4652  0991                     	;# 
  4653  0992                     	;# 
  4654  0993                     	;# 
  4655  0994                     	;# 
  4656  0995                     	;# 
  4657  0996                     	;# 
  4658  0997                     	;# 
  4659  0E0F                     	;# 
  4660  0E10                     	;# 
  4661  0E11                     	;# 
  4662  0E12                     	;# 
  4663  0E13                     	;# 
  4664  0E14                     	;# 
  4665  0E15                     	;# 
  4666  0E16                     	;# 
  4667  0E17                     	;# 
  4668  0E18                     	;# 
  4669  0E19                     	;# 
  4670  0E1A                     	;# 
  4671  0E1B                     	;# 
  4672  0E1C                     	;# 
  4673  0E1D                     	;# 
  4674  0E1E                     	;# 
  4675  0E1F                     	;# 
  4676  0E20                     	;# 
  4677  0E21                     	;# 
  4678  0E22                     	;# 
  4679  0E23                     	;# 
  4680  0E24                     	;# 
  4681  0E25                     	;# 
  4682  0E26                     	;# 
  4683  0E27                     	;# 
  4684  0E28                     	;# 
  4685  0E29                     	;# 
  4686  0E2A                     	;# 
  4687  0E2B                     	;# 
  4688  0E2C                     	;# 
  4689  0E2D                     	;# 
  4690  0E2E                     	;# 
  4691  0E2F                     	;# 
  4692  0E30                     	;# 
  4693  0E31                     	;# 
  4694  0E32                     	;# 
  4695  0E33                     	;# 
  4696  0E34                     	;# 
  4697  0E35                     	;# 
  4698  0E36                     	;# 
  4699  0E37                     	;# 
  4700  0E8F                     	;# 
  4701  0E90                     	;# 
  4702  0E91                     	;# 
  4703  0E92                     	;# 
  4704  0E93                     	;# 
  4705  0E94                     	;# 
  4706  0E95                     	;# 
  4707  0E96                     	;# 
  4708  0E97                     	;# 
  4709  0E9C                     	;# 
  4710  0E9D                     	;# 
  4711  0E9E                     	;# 
  4712  0EA1                     	;# 
  4713  0EA2                     	;# 
  4714  0EA3                     	;# 
  4715  0EA4                     	;# 
  4716  0EA5                     	;# 
  4717  0EA9                     	;# 
  4718  0EAA                     	;# 
  4719  0EAB                     	;# 
  4720  0EAC                     	;# 
  4721  0EB1                     	;# 
  4722  0EB2                     	;# 
  4723  0EB3                     	;# 
  4724  0EB8                     	;# 
  4725  0EB9                     	;# 
  4726  0EBA                     	;# 
  4727  0EBB                     	;# 
  4728  0EBC                     	;# 
  4729  0EBD                     	;# 
  4730  0EBE                     	;# 
  4731  0EC3                     	;# 
  4732  0EC5                     	;# 
  4733  0EC6                     	;# 
  4734  0EC7                     	;# 
  4735  0EC8                     	;# 
  4736  0EC9                     	;# 
  4737  0ECA                     	;# 
  4738  0ECB                     	;# 
  4739  0ECC                     	;# 
  4740  0F10                     	;# 
  4741  0F11                     	;# 
  4742  0F12                     	;# 
  4743  0F13                     	;# 
  4744  0F14                     	;# 
  4745  0F15                     	;# 
  4746  0F16                     	;# 
  4747  0F17                     	;# 
  4748  0F18                     	;# 
  4749  0F19                     	;# 
  4750  0F1A                     	;# 
  4751  0F1B                     	;# 
  4752  0F1C                     	;# 
  4753  0F1D                     	;# 
  4754  0F1E                     	;# 
  4755  0F1F                     	;# 
  4756  0F20                     	;# 
  4757  0F21                     	;# 
  4758  0F22                     	;# 
  4759  0F23                     	;# 
  4760  0F24                     	;# 
  4761  0F25                     	;# 
  4762  0F26                     	;# 
  4763  0F27                     	;# 
  4764  0F38                     	;# 
  4765  0F39                     	;# 
  4766  0F3A                     	;# 
  4767  0F3B                     	;# 
  4768  0F3C                     	;# 
  4769  0F3D                     	;# 
  4770  0F3E                     	;# 
  4771  0F3F                     	;# 
  4772  0F40                     	;# 
  4773  0F41                     	;# 
  4774  0F43                     	;# 
  4775  0F44                     	;# 
  4776  0F45                     	;# 
  4777  0F46                     	;# 
  4778  0F47                     	;# 
  4779  0F48                     	;# 
  4780  0F49                     	;# 
  4781  0F4A                     	;# 
  4782  0F4B                     	;# 
  4783  0F4C                     	;# 
  4784  0F4E                     	;# 
  4785  0F4F                     	;# 
  4786  0F50                     	;# 
  4787  0F51                     	;# 
  4788  0F52                     	;# 
  4789  0F53                     	;# 
  4790  0F54                     	;# 
  4791  0F55                     	;# 
  4792  0F56                     	;# 
  4793  0F57                     	;# 
  4794  0F65                     	;# 
  4795  0F68                     	;# 
  4796  0F69                     	;# 
  4797  0F6A                     	;# 
  4798  0F6B                     	;# 
  4799  0FE4                     	;# 
  4800  0FE5                     	;# 
  4801  0FE6                     	;# 
  4802  0FE7                     	;# 
  4803  0FE8                     	;# 
  4804  0FE9                     	;# 
  4805  0FEA                     	;# 
  4806  0FEB                     	;# 
  4807  0FED                     	;# 
  4808  0FEE                     	;# 
  4809  0FEF                     	;# 
  4810  0000                     	;# 
  4811  0001                     	;# 
  4812  0002                     	;# 
  4813  0003                     	;# 
  4814  0004                     	;# 
  4815  0005                     	;# 
  4816  0006                     	;# 
  4817  0007                     	;# 
  4818  0008                     	;# 
  4819  0009                     	;# 
  4820  000A                     	;# 
  4821  000B                     	;# 
  4822  000C                     	;# 
  4823  000D                     	;# 
  4824  000E                     	;# 
  4825  0010                     	;# 
  4826  0011                     	;# 
  4827  0012                     	;# 
  4828  0013                     	;# 
  4829  0016                     	;# 
  4830  0017                     	;# 
  4831  0018                     	;# 
  4832  001C                     	;# 
  4833  001C                     	;# 
  4834  001D                     	;# 
  4835  001D                     	;# 
  4836  001E                     	;# 
  4837  001F                     	;# 
  4838  008C                     	;# 
  4839  008C                     	;# 
  4840  008D                     	;# 
  4841  008E                     	;# 
  4842  008E                     	;# 
  4843  008F                     	;# 
  4844  0090                     	;# 
  4845  0090                     	;# 
  4846  0091                     	;# 
  4847  0093                     	;# 
  4848  0094                     	;# 
  4849  0095                     	;# 
  4850  0096                     	;# 
  4851  0097                     	;# 
  4852  0098                     	;# 
  4853  0099                     	;# 
  4854  009A                     	;# 
  4855  009B                     	;# 
  4856  009C                     	;# 
  4857  009D                     	;# 
  4858  009E                     	;# 
  4859  010C                     	;# 
  4860  010D                     	;# 
  4861  010E                     	;# 
  4862  010E                     	;# 
  4863  010F                     	;# 
  4864  0110                     	;# 
  4865  0110                     	;# 
  4866  0111                     	;# 
  4867  0112                     	;# 
  4868  0112                     	;# 
  4869  0113                     	;# 
  4870  0114                     	;# 
  4871  0114                     	;# 
  4872  0115                     	;# 
  4873  0116                     	;# 
  4874  0116                     	;# 
  4875  0117                     	;# 
  4876  0119                     	;# 
  4877  0119                     	;# 
  4878  0119                     	;# 
  4879  011A                     	;# 
  4880  011A                     	;# 
  4881  011A                     	;# 
  4882  011B                     	;# 
  4883  011B                     	;# 
  4884  011B                     	;# 
  4885  011B                     	;# 
  4886  011B                     	;# 
  4887  011C                     	;# 
  4888  011C                     	;# 
  4889  011C                     	;# 
  4890  011D                     	;# 
  4891  011D                     	;# 
  4892  011D                     	;# 
  4893  011E                     	;# 
  4894  011E                     	;# 
  4895  011E                     	;# 
  4896  011F                     	;# 
  4897  011F                     	;# 
  4898  011F                     	;# 
  4899  011F                     	;# 
  4900  011F                     	;# 
  4901  018C                     	;# 
  4902  018D                     	;# 
  4903  018E                     	;# 
  4904  018F                     	;# 
  4905  0190                     	;# 
  4906  0191                     	;# 
  4907  0192                     	;# 
  4908  0196                     	;# 
  4909  0197                     	;# 
  4910  0198                     	;# 
  4911  0199                     	;# 
  4912  019A                     	;# 
  4913  019B                     	;# 
  4914  019C                     	;# 
  4915  020C                     	;# 
  4916  020C                     	;# 
  4917  020D                     	;# 
  4918  020E                     	;# 
  4919  020F                     	;# 
  4920  020F                     	;# 
  4921  0210                     	;# 
  4922  0210                     	;# 
  4923  0211                     	;# 
  4924  0211                     	;# 
  4925  0212                     	;# 
  4926  0212                     	;# 
  4927  0213                     	;# 
  4928  0214                     	;# 
  4929  0215                     	;# 
  4930  0215                     	;# 
  4931  0216                     	;# 
  4932  0216                     	;# 
  4933  0217                     	;# 
  4934  0217                     	;# 
  4935  0218                     	;# 
  4936  0218                     	;# 
  4937  0219                     	;# 
  4938  021A                     	;# 
  4939  021B                     	;# 
  4940  021B                     	;# 
  4941  021C                     	;# 
  4942  021C                     	;# 
  4943  021D                     	;# 
  4944  021D                     	;# 
  4945  021E                     	;# 
  4946  021F                     	;# 
  4947  028C                     	;# 
  4948  028C                     	;# 
  4949  028D                     	;# 
  4950  028D                     	;# 
  4951  028E                     	;# 
  4952  028F                     	;# 
  4953  0290                     	;# 
  4954  0290                     	;# 
  4955  0291                     	;# 
  4956  0292                     	;# 
  4957  0292                     	;# 
  4958  0293                     	;# 
  4959  0293                     	;# 
  4960  0294                     	;# 
  4961  0295                     	;# 
  4962  0296                     	;# 
  4963  0296                     	;# 
  4964  0297                     	;# 
  4965  0298                     	;# 
  4966  0298                     	;# 
  4967  0299                     	;# 
  4968  0299                     	;# 
  4969  029A                     	;# 
  4970  029B                     	;# 
  4971  029C                     	;# 
  4972  029C                     	;# 
  4973  029D                     	;# 
  4974  030C                     	;# 
  4975  030C                     	;# 
  4976  030D                     	;# 
  4977  030E                     	;# 
  4978  030F                     	;# 
  4979  0310                     	;# 
  4980  0310                     	;# 
  4981  0311                     	;# 
  4982  0312                     	;# 
  4983  0313                     	;# 
  4984  0314                     	;# 
  4985  0314                     	;# 
  4986  0315                     	;# 
  4987  0316                     	;# 
  4988  0317                     	;# 
  4989  0318                     	;# 
  4990  0318                     	;# 
  4991  0319                     	;# 
  4992  031A                     	;# 
  4993  031B                     	;# 
  4994  031C                     	;# 
  4995  031C                     	;# 
  4996  031D                     	;# 
  4997  031E                     	;# 
  4998  031F                     	;# 
  4999  038C                     	;# 
  5000  038C                     	;# 
  5001  038D                     	;# 
  5002  038E                     	;# 
  5003  0390                     	;# 
  5004  0390                     	;# 
  5005  0391                     	;# 
  5006  0392                     	;# 
  5007  040C                     	;# 
  5008  040D                     	;# 
  5009  040E                     	;# 
  5010  040F                     	;# 
  5011  0410                     	;# 
  5012  0411                     	;# 
  5013  0416                     	;# 
  5014  0416                     	;# 
  5015  0417                     	;# 
  5016  0418                     	;# 
  5017  0418                     	;# 
  5018  0419                     	;# 
  5019  041A                     	;# 
  5020  041A                     	;# 
  5021  041B                     	;# 
  5022  041C                     	;# 
  5023  041C                     	;# 
  5024  041D                     	;# 
  5025  041E                     	;# 
  5026  041F                     	;# 
  5027  048C                     	;# 
  5028  048C                     	;# 
  5029  048D                     	;# 
  5030  048E                     	;# 
  5031  048F                     	;# 
  5032  048F                     	;# 
  5033  0490                     	;# 
  5034  0491                     	;# 
  5035  0492                     	;# 
  5036  0492                     	;# 
  5037  0493                     	;# 
  5038  0494                     	;# 
  5039  0495                     	;# 
  5040  0495                     	;# 
  5041  0496                     	;# 
  5042  0497                     	;# 
  5043  0498                     	;# 
  5044  0499                     	;# 
  5045  049A                     	;# 
  5046  049B                     	;# 
  5047  049C                     	;# 
  5048  049D                     	;# 
  5049  050C                     	;# 
  5050  050C                     	;# 
  5051  050D                     	;# 
  5052  050E                     	;# 
  5053  050F                     	;# 
  5054  050F                     	;# 
  5055  0510                     	;# 
  5056  0511                     	;# 
  5057  0512                     	;# 
  5058  0512                     	;# 
  5059  0513                     	;# 
  5060  0514                     	;# 
  5061  0515                     	;# 
  5062  0515                     	;# 
  5063  0516                     	;# 
  5064  0517                     	;# 
  5065  0518                     	;# 
  5066  0519                     	;# 
  5067  051A                     	;# 
  5068  051B                     	;# 
  5069  051C                     	;# 
  5070  051D                     	;# 
  5071  058C                     	;# 
  5072  058C                     	;# 
  5073  058D                     	;# 
  5074  058E                     	;# 
  5075  058F                     	;# 
  5076  058F                     	;# 
  5077  0590                     	;# 
  5078  0591                     	;# 
  5079  0592                     	;# 
  5080  0593                     	;# 
  5081  060C                     	;# 
  5082  060D                     	;# 
  5083  060E                     	;# 
  5084  060F                     	;# 
  5085  0610                     	;# 
  5086  0611                     	;# 
  5087  0612                     	;# 
  5088  0613                     	;# 
  5089  0614                     	;# 
  5090  0616                     	;# 
  5091  0617                     	;# 
  5092  0618                     	;# 
  5093  0619                     	;# 
  5094  061A                     	;# 
  5095  061B                     	;# 
  5096  061C                     	;# 
  5097  061D                     	;# 
  5098  061E                     	;# 
  5099  068C                     	;# 
  5100  068D                     	;# 
  5101  068E                     	;# 
  5102  068F                     	;# 
  5103  0690                     	;# 
  5104  0691                     	;# 
  5105  0692                     	;# 
  5106  0693                     	;# 
  5107  0694                     	;# 
  5108  070C                     	;# 
  5109  070D                     	;# 
  5110  070E                     	;# 
  5111  070F                     	;# 
  5112  0710                     	;# 
  5113  0711                     	;# 
  5114  0712                     	;# 
  5115  0713                     	;# 
  5116  0714                     	;# 
  5117  0716                     	;# 
  5118  0717                     	;# 
  5119  0718                     	;# 
  5120  0719                     	;# 
  5121  071A                     	;# 
  5122  071B                     	;# 
  5123  071C                     	;# 
  5124  071D                     	;# 
  5125  071E                     	;# 
  5126  0796                     	;# 
  5127  0797                     	;# 
  5128  0798                     	;# 
  5129  0799                     	;# 
  5130  079A                     	;# 
  5131  079B                     	;# 
  5132  080C                     	;# 
  5133  080D                     	;# 
  5134  080E                     	;# 
  5135  080F                     	;# 
  5136  0810                     	;# 
  5137  0811                     	;# 
  5138  0812                     	;# 
  5139  0813                     	;# 
  5140  0814                     	;# 
  5141  081A                     	;# 
  5142  081B                     	;# 
  5143  081C                     	;# 
  5144  081D                     	;# 
  5145  081E                     	;# 
  5146  081F                     	;# 
  5147  088C                     	;# 
  5148  088D                     	;# 
  5149  088E                     	;# 
  5150  088F                     	;# 
  5151  0890                     	;# 
  5152  0891                     	;# 
  5153  0892                     	;# 
  5154  0893                     	;# 
  5155  0895                     	;# 
  5156  0896                     	;# 
  5157  0897                     	;# 
  5158  0898                     	;# 
  5159  0899                     	;# 
  5160  089A                     	;# 
  5161  089B                     	;# 
  5162  090C                     	;# 
  5163  090E                     	;# 
  5164  090F                     	;# 
  5165  091F                     	;# 
  5166  091F                     	;# 
  5167  098F                     	;# 
  5168  098F                     	;# 
  5169  0990                     	;# 
  5170  0991                     	;# 
  5171  0992                     	;# 
  5172  0993                     	;# 
  5173  0994                     	;# 
  5174  0995                     	;# 
  5175  0996                     	;# 
  5176  0997                     	;# 
  5177  0E0F                     	;# 
  5178  0E10                     	;# 
  5179  0E11                     	;# 
  5180  0E12                     	;# 
  5181  0E13                     	;# 
  5182  0E14                     	;# 
  5183  0E15                     	;# 
  5184  0E16                     	;# 
  5185  0E17                     	;# 
  5186  0E18                     	;# 
  5187  0E19                     	;# 
  5188  0E1A                     	;# 
  5189  0E1B                     	;# 
  5190  0E1C                     	;# 
  5191  0E1D                     	;# 
  5192  0E1E                     	;# 
  5193  0E1F                     	;# 
  5194  0E20                     	;# 
  5195  0E21                     	;# 
  5196  0E22                     	;# 
  5197  0E23                     	;# 
  5198  0E24                     	;# 
  5199  0E25                     	;# 
  5200  0E26                     	;# 
  5201  0E27                     	;# 
  5202  0E28                     	;# 
  5203  0E29                     	;# 
  5204  0E2A                     	;# 
  5205  0E2B                     	;# 
  5206  0E2C                     	;# 
  5207  0E2D                     	;# 
  5208  0E2E                     	;# 
  5209  0E2F                     	;# 
  5210  0E30                     	;# 
  5211  0E31                     	;# 
  5212  0E32                     	;# 
  5213  0E33                     	;# 
  5214  0E34                     	;# 
  5215  0E35                     	;# 
  5216  0E36                     	;# 
  5217  0E37                     	;# 
  5218  0E8F                     	;# 
  5219  0E90                     	;# 
  5220  0E91                     	;# 
  5221  0E92                     	;# 
  5222  0E93                     	;# 
  5223  0E94                     	;# 
  5224  0E95                     	;# 
  5225  0E96                     	;# 
  5226  0E97                     	;# 
  5227  0E9C                     	;# 
  5228  0E9D                     	;# 
  5229  0E9E                     	;# 
  5230  0EA1                     	;# 
  5231  0EA2                     	;# 
  5232  0EA3                     	;# 
  5233  0EA4                     	;# 
  5234  0EA5                     	;# 
  5235  0EA9                     	;# 
  5236  0EAA                     	;# 
  5237  0EAB                     	;# 
  5238  0EAC                     	;# 
  5239  0EB1                     	;# 
  5240  0EB2                     	;# 
  5241  0EB3                     	;# 
  5242  0EB8                     	;# 
  5243  0EB9                     	;# 
  5244  0EBA                     	;# 
  5245  0EBB                     	;# 
  5246  0EBC                     	;# 
  5247  0EBD                     	;# 
  5248  0EBE                     	;# 
  5249  0EC3                     	;# 
  5250  0EC5                     	;# 
  5251  0EC6                     	;# 
  5252  0EC7                     	;# 
  5253  0EC8                     	;# 
  5254  0EC9                     	;# 
  5255  0ECA                     	;# 
  5256  0ECB                     	;# 
  5257  0ECC                     	;# 
  5258  0F10                     	;# 
  5259  0F11                     	;# 
  5260  0F12                     	;# 
  5261  0F13                     	;# 
  5262  0F14                     	;# 
  5263  0F15                     	;# 
  5264  0F16                     	;# 
  5265  0F17                     	;# 
  5266  0F18                     	;# 
  5267  0F19                     	;# 
  5268  0F1A                     	;# 
  5269  0F1B                     	;# 
  5270  0F1C                     	;# 
  5271  0F1D                     	;# 
  5272  0F1E                     	;# 
  5273  0F1F                     	;# 
  5274  0F20                     	;# 
  5275  0F21                     	;# 
  5276  0F22                     	;# 
  5277  0F23                     	;# 
  5278  0F24                     	;# 
  5279  0F25                     	;# 
  5280  0F26                     	;# 
  5281  0F27                     	;# 
  5282  0F38                     	;# 
  5283  0F39                     	;# 
  5284  0F3A                     	;# 
  5285  0F3B                     	;# 
  5286  0F3C                     	;# 
  5287  0F3D                     	;# 
  5288  0F3E                     	;# 
  5289  0F3F                     	;# 
  5290  0F40                     	;# 
  5291  0F41                     	;# 
  5292  0F43                     	;# 
  5293  0F44                     	;# 
  5294  0F45                     	;# 
  5295  0F46                     	;# 
  5296  0F47                     	;# 
  5297  0F48                     	;# 
  5298  0F49                     	;# 
  5299  0F4A                     	;# 
  5300  0F4B                     	;# 
  5301  0F4C                     	;# 
  5302  0F4E                     	;# 
  5303  0F4F                     	;# 
  5304  0F50                     	;# 
  5305  0F51                     	;# 
  5306  0F52                     	;# 
  5307  0F53                     	;# 
  5308  0F54                     	;# 
  5309  0F55                     	;# 
  5310  0F56                     	;# 
  5311  0F57                     	;# 
  5312  0F65                     	;# 
  5313  0F68                     	;# 
  5314  0F69                     	;# 
  5315  0F6A                     	;# 
  5316  0F6B                     	;# 
  5317  0FE4                     	;# 
  5318  0FE5                     	;# 
  5319  0FE6                     	;# 
  5320  0FE7                     	;# 
  5321  0FE8                     	;# 
  5322  0FE9                     	;# 
  5323  0FEA                     	;# 
  5324  0FEB                     	;# 
  5325  0FED                     	;# 
  5326  0FEE                     	;# 
  5327  0FEF                     	;# 
  5328                           
  5329 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  5330  0000                     
  5331 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  5332  0000                     
  5333 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  5334  0000                     
  5335                           	psect	idataBANK1
  5336  1728                     __pidataBANK1:
  5337                           
  5338                           ;initializer for _letra
  5339  1728  3441               	retlw	65
  5340  1729  3400               	retlw	0
  5341                           
  5342                           	psect	stringtext1
  5343  0800                     __pstringtext1:
  5344  0800                     _bigChars:
  5345  0800  3420               	retlw	32
  5346  0801  3420               	retlw	32
  5347  0802  3400               	retlw	0
  5348  0803  3400               	retlw	0
  5349  0804  3400               	retlw	0
  5350  0805  3400               	retlw	0
  5351  0806  3400               	retlw	0
  5352  0807  3400               	retlw	0
  5353  0808  34FF               	retlw	255
  5354  0809  3407               	retlw	7
  5355  080A  3400               	retlw	0
  5356  080B  3400               	retlw	0
  5357  080C  3400               	retlw	0
  5358  080D  3400               	retlw	0
  5359  080E  3400               	retlw	0
  5360  080F  3400               	retlw	0
  5361  0810  3405               	retlw	5
  5362  0811  3405               	retlw	5
  5363  0812  3420               	retlw	32
  5364  0813  3420               	retlw	32
  5365  0814  3400               	retlw	0
  5366  0815  3400               	retlw	0
  5367  0816  3400               	retlw	0
  5368  0817  3400               	retlw	0
  5369  0818  3404               	retlw	4
  5370  0819  34FF               	retlw	255
  5371  081A  3404               	retlw	4
  5372  081B  34FF               	retlw	255
  5373  081C  3404               	retlw	4
  5374  081D  3401               	retlw	1
  5375  081E  34FF               	retlw	255
  5376  081F  3401               	retlw	1
  5377  0820  3408               	retlw	8
  5378  0821  34FF               	retlw	255
  5379  0822  3406               	retlw	6
  5380  0823  3407               	retlw	7
  5381  0824  34FF               	retlw	255
  5382  0825  3405               	retlw	5
  5383  0826  3400               	retlw	0
  5384  0827  3400               	retlw	0
  5385  0828  3401               	retlw	1
  5386  0829  3420               	retlw	32
  5387  082A  3404               	retlw	4
  5388  082B  3401               	retlw	1
  5389  082C  3404               	retlw	4
  5390  082D  3401               	retlw	1
  5391  082E  3420               	retlw	32
  5392  082F  3404               	retlw	4
  5393  0830  3408               	retlw	8
  5394  0831  3406               	retlw	6
  5395  0832  3402               	retlw	2
  5396  0833  3420               	retlw	32
  5397  0834  3403               	retlw	3
  5398  0835  3407               	retlw	7
  5399  0836  3402               	retlw	2
  5400  0837  3404               	retlw	4
  5401  0838  3405               	retlw	5
  5402  0839  3420               	retlw	32
  5403  083A  3400               	retlw	0
  5404  083B  3400               	retlw	0
  5405  083C  3400               	retlw	0
  5406  083D  3400               	retlw	0
  5407  083E  3400               	retlw	0
  5408  083F  3400               	retlw	0
  5409  0840  3408               	retlw	8
  5410  0841  3401               	retlw	1
  5411  0842  3403               	retlw	3
  5412  0843  3404               	retlw	4
  5413  0844  3400               	retlw	0
  5414  0845  3400               	retlw	0
  5415  0846  3400               	retlw	0
  5416  0847  3400               	retlw	0
  5417  0848  3401               	retlw	1
  5418  0849  3402               	retlw	2
  5419  084A  3404               	retlw	4
  5420  084B  3405               	retlw	5
  5421  084C  3400               	retlw	0
  5422  084D  3400               	retlw	0
  5423  084E  3400               	retlw	0
  5424  084F  3400               	retlw	0
  5425  0850  3401               	retlw	1
  5426  0851  3404               	retlw	4
  5427  0852  3404               	retlw	4
  5428  0853  3401               	retlw	1
  5429  0854  3404               	retlw	4
  5430  0855  3401               	retlw	1
  5431  0856  3401               	retlw	1
  5432  0857  3404               	retlw	4
  5433  0858  3404               	retlw	4
  5434  0859  34FF               	retlw	255
  5435  085A  3404               	retlw	4
  5436  085B  3401               	retlw	1
  5437  085C  34FF               	retlw	255
  5438  085D  3401               	retlw	1
  5439  085E  3400               	retlw	0
  5440  085F  3400               	retlw	0
  5441  0860  3420               	retlw	32
  5442  0861  3405               	retlw	5
  5443  0862  3400               	retlw	0
  5444  0863  3400               	retlw	0
  5445  0864  3400               	retlw	0
  5446  0865  3400               	retlw	0
  5447  0866  3400               	retlw	0
  5448  0867  3400               	retlw	0
  5449  0868  3404               	retlw	4
  5450  0869  3404               	retlw	4
  5451  086A  3404               	retlw	4
  5452  086B  3420               	retlw	32
  5453  086C  3420               	retlw	32
  5454  086D  3420               	retlw	32
  5455  086E  3400               	retlw	0
  5456  086F  3400               	retlw	0
  5457  0870  3420               	retlw	32
  5458  0871  3404               	retlw	4
  5459  0872  3400               	retlw	0
  5460  0873  3400               	retlw	0
  5461  0874  3400               	retlw	0
  5462  0875  3400               	retlw	0
  5463  0876  3400               	retlw	0
  5464  0877  3400               	retlw	0
  5465  0878  3420               	retlw	32
  5466  0879  3420               	retlw	32
  5467  087A  3404               	retlw	4
  5468  087B  3401               	retlw	1
  5469  087C  3404               	retlw	4
  5470  087D  3401               	retlw	1
  5471  087E  3420               	retlw	32
  5472  087F  3420               	retlw	32
  5473  0880  3408               	retlw	8
  5474  0881  3401               	retlw	1
  5475  0882  3402               	retlw	2
  5476  0883  3403               	retlw	3
  5477  0884  3404               	retlw	4
  5478  0885  3405               	retlw	5
  5479  0886  3400               	retlw	0
  5480  0887  3400               	retlw	0
  5481  0888  3401               	retlw	1
  5482  0889  3402               	retlw	2
  5483  088A  3420               	retlw	32
  5484  088B  3404               	retlw	4
  5485  088C  34FF               	retlw	255
  5486  088D  3404               	retlw	4
  5487  088E  3400               	retlw	0
  5488  088F  3400               	retlw	0
  5489  0890  3406               	retlw	6
  5490  0891  3406               	retlw	6
  5491  0892  3402               	retlw	2
  5492  0893  34FF               	retlw	255
  5493  0894  3407               	retlw	7
  5494  0895  3407               	retlw	7
  5495  0896  3400               	retlw	0
  5496  0897  3400               	retlw	0
  5497  0898  3401               	retlw	1
  5498  0899  3406               	retlw	6
  5499  089A  3402               	retlw	2
  5500  089B  3404               	retlw	4
  5501  089C  3407               	retlw	7
  5502  089D  3405               	retlw	5
  5503  089E  3400               	retlw	0
  5504  089F  3400               	retlw	0
  5505  08A0  3403               	retlw	3
  5506  08A1  3404               	retlw	4
  5507  08A2  34FF               	retlw	255
  5508  08A3  3420               	retlw	32
  5509  08A4  3420               	retlw	32
  5510  08A5  34FF               	retlw	255
  5511  08A6  3400               	retlw	0
  5512  08A7  3400               	retlw	0
  5513  08A8  34FF               	retlw	255
  5514  08A9  3406               	retlw	6
  5515  08AA  3406               	retlw	6
  5516  08AB  3407               	retlw	7
  5517  08AC  3407               	retlw	7
  5518  08AD  3405               	retlw	5
  5519  08AE  3400               	retlw	0
  5520  08AF  3400               	retlw	0
  5521  08B0  3408               	retlw	8
  5522  08B1  3406               	retlw	6
  5523  08B2  3406               	retlw	6
  5524  08B3  3403               	retlw	3
  5525  08B4  3407               	retlw	7
  5526  08B5  3405               	retlw	5
  5527  08B6  3400               	retlw	0
  5528  08B7  3400               	retlw	0
  5529  08B8  3401               	retlw	1
  5530  08B9  3401               	retlw	1
  5531  08BA  3402               	retlw	2
  5532  08BB  3420               	retlw	32
  5533  08BC  3408               	retlw	8
  5534  08BD  3420               	retlw	32
  5535  08BE  3400               	retlw	0
  5536  08BF  3400               	retlw	0
  5537  08C0  3408               	retlw	8
  5538  08C1  3406               	retlw	6
  5539  08C2  3402               	retlw	2
  5540  08C3  3403               	retlw	3
  5541  08C4  3407               	retlw	7
  5542  08C5  3405               	retlw	5
  5543  08C6  3400               	retlw	0
  5544  08C7  3400               	retlw	0
  5545  08C8  3408               	retlw	8
  5546  08C9  3406               	retlw	6
  5547  08CA  3402               	retlw	2
  5548  08CB  3407               	retlw	7
  5549  08CC  3407               	retlw	7
  5550  08CD  3405               	retlw	5
  5551  08CE  3400               	retlw	0
  5552  08CF  3400               	retlw	0
  5553  08D0  34A5               	retlw	165
  5554  08D1  34A5               	retlw	165
  5555  08D2  3400               	retlw	0
  5556  08D3  3400               	retlw	0
  5557  08D4  3400               	retlw	0
  5558  08D5  3400               	retlw	0
  5559  08D6  3400               	retlw	0
  5560  08D7  3400               	retlw	0
  5561  08D8  3404               	retlw	4
  5562  08D9  3405               	retlw	5
  5563  08DA  3400               	retlw	0
  5564  08DB  3400               	retlw	0
  5565  08DC  3400               	retlw	0
  5566  08DD  3400               	retlw	0
  5567  08DE  3400               	retlw	0
  5568  08DF  3400               	retlw	0
  5569  08E0  3420               	retlw	32
  5570  08E1  3404               	retlw	4
  5571  08E2  3401               	retlw	1
  5572  08E3  3401               	retlw	1
  5573  08E4  3401               	retlw	1
  5574  08E5  3404               	retlw	4
  5575  08E6  3400               	retlw	0
  5576  08E7  3400               	retlw	0
  5577  08E8  3404               	retlw	4
  5578  08E9  3404               	retlw	4
  5579  08EA  3404               	retlw	4
  5580  08EB  3401               	retlw	1
  5581  08EC  3401               	retlw	1
  5582  08ED  3401               	retlw	1
  5583  08EE  3400               	retlw	0
  5584  08EF  3400               	retlw	0
  5585  08F0  3401               	retlw	1
  5586  08F1  3404               	retlw	4
  5587  08F2  3420               	retlw	32
  5588  08F3  3404               	retlw	4
  5589  08F4  3401               	retlw	1
  5590  08F5  3401               	retlw	1
  5591  08F6  3400               	retlw	0
  5592  08F7  3400               	retlw	0
  5593  08F8  3401               	retlw	1
  5594  08F9  3406               	retlw	6
  5595  08FA  3402               	retlw	2
  5596  08FB  3420               	retlw	32
  5597  08FC  3407               	retlw	7
  5598  08FD  3420               	retlw	32
  5599  08FE  3400               	retlw	0
  5600  08FF  3400               	retlw	0
  5601  0900  3408               	retlw	8
  5602  0901  3406               	retlw	6
  5603  0902  3402               	retlw	2
  5604  0903  3403               	retlw	3
  5605  0904  3404               	retlw	4
  5606  0905  3404               	retlw	4
  5607  0906  3400               	retlw	0
  5608  0907  3400               	retlw	0
  5609  0908  3408               	retlw	8
  5610  0909  3406               	retlw	6
  5611  090A  3402               	retlw	2
  5612  090B  34FF               	retlw	255
  5613  090C  3420               	retlw	32
  5614  090D  34FF               	retlw	255
  5615  090E  3400               	retlw	0
  5616  090F  3400               	retlw	0
  5617  0910  34FF               	retlw	255
  5618  0911  3406               	retlw	6
  5619  0912  3405               	retlw	5
  5620  0913  34FF               	retlw	255
  5621  0914  3407               	retlw	7
  5622  0915  3402               	retlw	2
  5623  0916  3400               	retlw	0
  5624  0917  3400               	retlw	0
  5625  0918  3408               	retlw	8
  5626  0919  3401               	retlw	1
  5627  091A  3401               	retlw	1
  5628  091B  3403               	retlw	3
  5629  091C  3404               	retlw	4
  5630  091D  3404               	retlw	4
  5631  091E  3400               	retlw	0
  5632  091F  3400               	retlw	0
  5633  0920  34FF               	retlw	255
  5634  0921  3401               	retlw	1
  5635  0922  3402               	retlw	2
  5636  0923  34FF               	retlw	255
  5637  0924  3404               	retlw	4
  5638  0925  3405               	retlw	5
  5639  0926  3400               	retlw	0
  5640  0927  3400               	retlw	0
  5641  0928  34FF               	retlw	255
  5642  0929  3406               	retlw	6
  5643  092A  3406               	retlw	6
  5644  092B  34FF               	retlw	255
  5645  092C  3407               	retlw	7
  5646  092D  3407               	retlw	7
  5647  092E  3400               	retlw	0
  5648  092F  3400               	retlw	0
  5649  0930  34FF               	retlw	255
  5650  0931  3406               	retlw	6
  5651  0932  3406               	retlw	6
  5652  0933  34FF               	retlw	255
  5653  0934  3420               	retlw	32
  5654  0935  3420               	retlw	32
  5655  0936  3400               	retlw	0
  5656  0937  3400               	retlw	0
  5657  0938  3408               	retlw	8
  5658  0939  3401               	retlw	1
  5659  093A  3401               	retlw	1
  5660  093B  3403               	retlw	3
  5661  093C  3404               	retlw	4
  5662  093D  3402               	retlw	2
  5663  093E  3400               	retlw	0
  5664  093F  3400               	retlw	0
  5665  0940  34FF               	retlw	255
  5666  0941  3404               	retlw	4
  5667  0942  34FF               	retlw	255
  5668  0943  34FF               	retlw	255
  5669  0944  3420               	retlw	32
  5670  0945  34FF               	retlw	255
  5671  0946  3400               	retlw	0
  5672  0947  3400               	retlw	0
  5673  0948  3401               	retlw	1
  5674  0949  34FF               	retlw	255
  5675  094A  3401               	retlw	1
  5676  094B  3404               	retlw	4
  5677  094C  34FF               	retlw	255
  5678  094D  3404               	retlw	4
  5679  094E  3400               	retlw	0
  5680  094F  3400               	retlw	0
  5681  0950  3420               	retlw	32
  5682  0951  3420               	retlw	32
  5683  0952  34FF               	retlw	255
  5684  0953  3404               	retlw	4
  5685  0954  3404               	retlw	4
  5686  0955  3405               	retlw	5
  5687  0956  3400               	retlw	0
  5688  0957  3400               	retlw	0
  5689  0958  34FF               	retlw	255
  5690  0959  3404               	retlw	4
  5691  095A  3405               	retlw	5
  5692  095B  34FF               	retlw	255
  5693  095C  3420               	retlw	32
  5694  095D  3402               	retlw	2
  5695  095E  3400               	retlw	0
  5696  095F  3400               	retlw	0
  5697  0960  34FF               	retlw	255
  5698  0961  3420               	retlw	32
  5699  0962  3420               	retlw	32
  5700  0963  34FF               	retlw	255
  5701  0964  3404               	retlw	4
  5702  0965  3404               	retlw	4
  5703  0966  3400               	retlw	0
  5704  0967  3400               	retlw	0
  5705  0968  3408               	retlw	8
  5706  0969  3403               	retlw	3
  5707  096A  3405               	retlw	5
  5708  096B  3402               	retlw	2
  5709  096C  34FF               	retlw	255
  5710  096D  3420               	retlw	32
  5711  096E  3420               	retlw	32
  5712  096F  34FF               	retlw	255
  5713  0970  34FF               	retlw	255
  5714  0971  3402               	retlw	2
  5715  0972  3420               	retlw	32
  5716  0973  34FF               	retlw	255
  5717  0974  34FF               	retlw	255
  5718  0975  3420               	retlw	32
  5719  0976  3403               	retlw	3
  5720  0977  34FF               	retlw	255
  5721  0978  3408               	retlw	8
  5722  0979  3401               	retlw	1
  5723  097A  3402               	retlw	2
  5724  097B  3403               	retlw	3
  5725  097C  3404               	retlw	4
  5726  097D  3405               	retlw	5
  5727  097E  3400               	retlw	0
  5728  097F  3400               	retlw	0
  5729  0980  3408               	retlw	8
  5730  0981  3406               	retlw	6
  5731  0982  3402               	retlw	2
  5732  0983  34FF               	retlw	255
  5733  0984  3420               	retlw	32
  5734  0985  3420               	retlw	32
  5735  0986  3400               	retlw	0
  5736  0987  3400               	retlw	0
  5737  0988  3408               	retlw	8
  5738  0989  3401               	retlw	1
  5739  098A  3402               	retlw	2
  5740  098B  3420               	retlw	32
  5741  098C  3403               	retlw	3
  5742  098D  3404               	retlw	4
  5743  098E  34FF               	retlw	255
  5744  098F  3404               	retlw	4
  5745  0990  34FF               	retlw	255
  5746  0991  3406               	retlw	6
  5747  0992  3402               	retlw	2
  5748  0993  34FF               	retlw	255
  5749  0994  3420               	retlw	32
  5750  0995  3402               	retlw	2
  5751  0996  3400               	retlw	0
  5752  0997  3400               	retlw	0
  5753  0998  3408               	retlw	8
  5754  0999  3406               	retlw	6
  5755  099A  3406               	retlw	6
  5756  099B  3407               	retlw	7
  5757  099C  3407               	retlw	7
  5758  099D  3405               	retlw	5
  5759  099E  3400               	retlw	0
  5760  099F  3400               	retlw	0
  5761  09A0  3401               	retlw	1
  5762  09A1  34FF               	retlw	255
  5763  09A2  3401               	retlw	1
  5764  09A3  3420               	retlw	32
  5765  09A4  34FF               	retlw	255
  5766  09A5  3420               	retlw	32
  5767  09A6  3400               	retlw	0
  5768  09A7  3400               	retlw	0
  5769  09A8  34FF               	retlw	255
  5770  09A9  3420               	retlw	32
  5771  09AA  34FF               	retlw	255
  5772  09AB  3403               	retlw	3
  5773  09AC  3404               	retlw	4
  5774  09AD  3405               	retlw	5
  5775  09AE  3400               	retlw	0
  5776  09AF  3400               	retlw	0
  5777  09B0  3403               	retlw	3
  5778  09B1  3420               	retlw	32
  5779  09B2  3420               	retlw	32
  5780  09B3  3405               	retlw	5
  5781  09B4  3420               	retlw	32
  5782  09B5  3402               	retlw	2
  5783  09B6  3408               	retlw	8
  5784  09B7  3420               	retlw	32
  5785  09B8  34FF               	retlw	255
  5786  09B9  3420               	retlw	32
  5787  09BA  3420               	retlw	32
  5788  09BB  34FF               	retlw	255
  5789  09BC  3403               	retlw	3
  5790  09BD  3408               	retlw	8
  5791  09BE  3402               	retlw	2
  5792  09BF  3405               	retlw	5
  5793  09C0  3403               	retlw	3
  5794  09C1  3404               	retlw	4
  5795  09C2  3405               	retlw	5
  5796  09C3  3408               	retlw	8
  5797  09C4  3420               	retlw	32
  5798  09C5  3402               	retlw	2
  5799  09C6  3400               	retlw	0
  5800  09C7  3400               	retlw	0
  5801  09C8  3403               	retlw	3
  5802  09C9  3404               	retlw	4
  5803  09CA  3405               	retlw	5
  5804  09CB  3420               	retlw	32
  5805  09CC  34FF               	retlw	255
  5806  09CD  3420               	retlw	32
  5807  09CE  3400               	retlw	0
  5808  09CF  3400               	retlw	0
  5809  09D0  3401               	retlw	1
  5810  09D1  3406               	retlw	6
  5811  09D2  3405               	retlw	5
  5812  09D3  3408               	retlw	8
  5813  09D4  3407               	retlw	7
  5814  09D5  3404               	retlw	4
  5815  09D6  3400               	retlw	0
  5816  09D7  3400               	retlw	0
  5817  09D8  34FF               	retlw	255
  5818  09D9  3401               	retlw	1
  5819  09DA  34FF               	retlw	255
  5820  09DB  3404               	retlw	4
  5821  09DC  3400               	retlw	0
  5822  09DD  3400               	retlw	0
  5823  09DE  3400               	retlw	0
  5824  09DF  3400               	retlw	0
  5825  09E0  3401               	retlw	1
  5826  09E1  3404               	retlw	4
  5827  09E2  3420               	retlw	32
  5828  09E3  3420               	retlw	32
  5829  09E4  3420               	retlw	32
  5830  09E5  3420               	retlw	32
  5831  09E6  3401               	retlw	1
  5832  09E7  3404               	retlw	4
  5833  09E8  3401               	retlw	1
  5834  09E9  34FF               	retlw	255
  5835  09EA  3404               	retlw	4
  5836  09EB  34FF               	retlw	255
  5837  09EC  3400               	retlw	0
  5838  09ED  3400               	retlw	0
  5839  09EE  3400               	retlw	0
  5840  09EF  3400               	retlw	0
  5841  09F0  3408               	retlw	8
  5842  09F1  3402               	retlw	2
  5843  09F2  3420               	retlw	32
  5844  09F3  3420               	retlw	32
  5845  09F4  3400               	retlw	0
  5846  09F5  3400               	retlw	0
  5847  09F6  3400               	retlw	0
  5848  09F7  3400               	retlw	0
  5849  09F8  3420               	retlw	32
  5850  09F9  3420               	retlw	32
  5851  09FA  3420               	retlw	32
  5852  09FB  3404               	retlw	4
  5853  09FC  3404               	retlw	4
  5854  09FD  3404               	retlw	4
  5855  09FE  3400               	retlw	0
  5856  09FF  3400               	retlw	0
  5857  0A00                     __end_of_bigChars:
  5858                           
  5859                           	psect	stringtext2
  5860  1000                     __pstringtext2:
  5861  1000                     _custom:
  5862  1000  3403               	retlw	3
  5863  1001  3407               	retlw	7
  5864  1002  340F               	retlw	15
  5865  1003  341F               	retlw	31
  5866  1004  341F               	retlw	31
  5867  1005  341F               	retlw	31
  5868  1006  341F               	retlw	31
  5869  1007  341F               	retlw	31
  5870  1008  341F               	retlw	31
  5871  1009  341F               	retlw	31
  5872  100A  341F               	retlw	31
  5873  100B  3400               	retlw	0
  5874  100C  3400               	retlw	0
  5875  100D  3400               	retlw	0
  5876  100E  3400               	retlw	0
  5877  100F  3400               	retlw	0
  5878  1010  3418               	retlw	24
  5879  1011  341C               	retlw	28
  5880  1012  341E               	retlw	30
  5881  1013  341F               	retlw	31
  5882  1014  341F               	retlw	31
  5883  1015  341F               	retlw	31
  5884  1016  341F               	retlw	31
  5885  1017  341F               	retlw	31
  5886  1018  341F               	retlw	31
  5887  1019  341F               	retlw	31
  5888  101A  341F               	retlw	31
  5889  101B  341F               	retlw	31
  5890  101C  341F               	retlw	31
  5891  101D  340F               	retlw	15
  5892  101E  3407               	retlw	7
  5893  101F  3403               	retlw	3
  5894  1020  3400               	retlw	0
  5895  1021  3400               	retlw	0
  5896  1022  3400               	retlw	0
  5897  1023  3400               	retlw	0
  5898  1024  3400               	retlw	0
  5899  1025  341F               	retlw	31
  5900  1026  341F               	retlw	31
  5901  1027  341F               	retlw	31
  5902  1028  341F               	retlw	31
  5903  1029  341F               	retlw	31
  5904  102A  341F               	retlw	31
  5905  102B  341F               	retlw	31
  5906  102C  341F               	retlw	31
  5907  102D  341E               	retlw	30
  5908  102E  341C               	retlw	28
  5909  102F  3418               	retlw	24
  5910  1030  341F               	retlw	31
  5911  1031  341F               	retlw	31
  5912  1032  341F               	retlw	31
  5913  1033  3400               	retlw	0
  5914  1034  3400               	retlw	0
  5915  1035  3400               	retlw	0
  5916  1036  341F               	retlw	31
  5917  1037  341F               	retlw	31
  5918  1038  341F               	retlw	31
  5919  1039  3400               	retlw	0
  5920  103A  3400               	retlw	0
  5921  103B  3400               	retlw	0
  5922  103C  3400               	retlw	0
  5923  103D  341F               	retlw	31
  5924  103E  341F               	retlw	31
  5925  103F  341F               	retlw	31
  5926  1040                     __end_of_custom:
  5927                           
  5928                           	psect	stringtext3
  5929  1040                     __pstringtext3:
  5930  1040                     _i2c1_fsmStateTable:
  5931  1040  344F               	retlw	low _I2C1_DO_IDLE
  5932  1041  3417               	retlw	high _I2C1_DO_IDLE
  5933  1042  34D4               	retlw	low _I2C1_DO_SEND_ADR_READ
  5934  1043  3417               	retlw	high _I2C1_DO_SEND_ADR_READ
  5935  1044  34BA               	retlw	low _I2C1_DO_SEND_ADR_WRITE
  5936  1045  3417               	retlw	high _I2C1_DO_SEND_ADR_WRITE
  5937  1046  34F8               	retlw	low _I2C1_DO_TX
  5938  1047  340E               	retlw	high _I2C1_DO_TX
  5939  1048  345F               	retlw	low _I2C1_DO_RX
  5940  1049  340E               	retlw	high _I2C1_DO_RX
  5941  104A  34AB               	retlw	low _I2C1_DO_RCEN
  5942  104B  3417               	retlw	high _I2C1_DO_RCEN
  5943  104C  34A4               	retlw	low _I2C1_DO_TX_EMPTY
  5944  104D  340C               	retlw	high _I2C1_DO_TX_EMPTY
  5945  104E  3454               	retlw	low _I2C1_DO_SEND_RESTART_READ
  5946  104F  3417               	retlw	high _I2C1_DO_SEND_RESTART_READ
  5947  1050  3459               	retlw	low _I2C1_DO_SEND_RESTART_WRITE
  5948  1051  3417               	retlw	high _I2C1_DO_SEND_RESTART_WRITE
  5949  1052  345E               	retlw	low _I2C1_DO_SEND_RESTART
  5950  1053  3417               	retlw	high _I2C1_DO_SEND_RESTART
  5951  1054  3463               	retlw	low _I2C1_DO_SEND_STOP
  5952  1055  3417               	retlw	high _I2C1_DO_SEND_STOP
  5953  1056  3468               	retlw	low _I2C1_DO_RX_ACK
  5954  1057  3417               	retlw	high _I2C1_DO_RX_ACK
  5955  1058  346D               	retlw	low _I2C1_DO_RX_NACK_STOP
  5956  1059  3417               	retlw	high _I2C1_DO_RX_NACK_STOP
  5957  105A  3472               	retlw	low _I2C1_DO_RX_NACK_RESTART
  5958  105B  3417               	retlw	high _I2C1_DO_RX_NACK_RESTART
  5959  105C  3477               	retlw	low _I2C1_DO_RESET
  5960  105D  3417               	retlw	high _I2C1_DO_RESET
  5961  105E  344A               	retlw	low _I2C1_DO_ADDRESS_NACK
  5962  105F  340C               	retlw	high _I2C1_DO_ADDRESS_NACK
  5963  1060                     __end_of_i2c1_fsmStateTable:
  5964                           
  5965                           	psect	nvBANK1
  5966  00E4                     __pnvBANK1:
  5967  00E4                     _EUSART_ErrorHandler:
  5968  00E4                     	ds	2
  5969  00E6                     _EUSART_OverrunErrorHandler:
  5970  00E6                     	ds	2
  5971  00E8                     _EUSART_FramingErrorHandler:
  5972  00E8                     	ds	2
  5973  0013                     _TRISC	set	19
  5974  0012                     _TRISB	set	18
  5975  0011                     _TRISA	set	17
  5976  0018                     _LATC	set	24
  5977  0017                     _LATB	set	23
  5978  0016                     _LATA	set	22
  5979  0094                     _ADCON1bits	set	148
  5980  008E                     _ADPREVL	set	142
  5981  008F                     _ADPREVH	set	143
  5982  0097                     _ADSTATbits	set	151
  5983  0090                     _ADACCL	set	144
  5984  0091                     _ADACCH	set	145
  5985  0095                     _ADCON2bits	set	149
  5986  0096                     _ADCON3bits	set	150
  5987  008C                     _ADRESL	set	140
  5988  008D                     _ADRESH	set	141
  5989  0093                     _ADCON0bits	set	147
  5990  009D                     _ADACQ	set	157
  5991  0093                     _ADCON0	set	147
  5992  0098                     _ADCLK	set	152
  5993  0099                     _ADACT	set	153
  5994  009A                     _ADREF	set	154
  5995  0097                     _ADSTAT	set	151
  5996  0096                     _ADCON3	set	150
  5997  0095                     _ADCON2	set	149
  5998  0094                     _ADCON1	set	148
  5999  009C                     _ADPRE	set	156
  6000  009B                     _ADCAP	set	155
  6001  009E                     _ADPCH	set	158
  6002  011A                     _TX1REG	set	282
  6003  0119                     _RC1REG	set	281
  6004  011D                     _RC1STAbits	set	285
  6005  011E                     _TX1STAbits	set	286
  6006  011C                     _SP1BRGH	set	284
  6007  011B                     _SP1BRGL	set	283
  6008  011E                     _TX1STA	set	286
  6009  011D                     _RC1STA	set	285
  6010  011F                     _BAUD1CON	set	287
  6011  0116                     _ADERRL	set	278
  6012  0117                     _ADERRH	set	279
  6013  0114                     _ADFLTRL	set	276
  6014  0115                     _ADFLTRH	set	277
  6015  010C                     _ADCNT	set	268
  6016  010D                     _ADRPT	set	269
  6017  0113                     _ADSTPTH	set	275
  6018  0112                     _ADSTPTL	set	274
  6019  0111                     _ADUTHH	set	273
  6020  0110                     _ADUTHL	set	272
  6021  010F                     _ADLTHH	set	271
  6022  010E                     _ADLTHL	set	270
  6023  018F                     _SSP1STATbits	set	399
  6024  0191                     _SSP1CON2bits	set	401
  6025  018C                     _SSP1BUF	set	396
  6026  0190                     _SSP1CON1bits	set	400
  6027  018D                     _SSP1ADD	set	397
  6028  0191                     _SSP1CON2	set	401
  6029  0190                     _SSP1CON1	set	400
  6030  018F                     _SSP1STAT	set	399
  6031  0719                     _PIE3bits	set	1817
  6032  070F                     _PIR3bits	set	1807
  6033  079B                     _PMD5	set	1947
  6034  079A                     _PMD4	set	1946
  6035  0799                     _PMD3	set	1945
  6036  0798                     _PMD2	set	1944
  6037  0797                     _PMD1	set	1943
  6038  0796                     _PMD0	set	1942
  6039  0892                     _OSCTUNE	set	2194
  6040  0893                     _OSCFRQ	set	2195
  6041  0891                     _OSCEN	set	2193
  6042  088F                     _OSCCON3	set	2191
  6043  088D                     _OSCCON1	set	2189
  6044  0EC6                     _SSP1DATPPS	set	3782
  6045  0EC5                     _SSP1CLKPPS	set	3781
  6046  0ECB                     _RXPPS	set	3787
  6047  0F24                     _RC4PPS	set	3876
  6048  0F23                     _RC3PPS	set	3875
  6049  0F20                     _RC0PPS	set	3872
  6050  0F68                     _INLVLE	set	3944
  6051  0F52                     _INLVLC	set	3922
  6052  0F47                     _INLVLB	set	3911
  6053  0F3C                     _INLVLA	set	3900
  6054  0F51                     _SLRCONC	set	3921
  6055  0F46                     _SLRCONB	set	3910
  6056  0F3B                     _SLRCONA	set	3899
  6057  0F50                     _ODCONC	set	3920
  6058  0F45                     _ODCONB	set	3909
  6059  0F3A                     _ODCONA	set	3898
  6060  0F4F                     _WPUC	set	3919
  6061  0F39                     _WPUA	set	3897
  6062  0F44                     _WPUB	set	3908
  6063  0F65                     _WPUE	set	3941
  6064  0F38                     _ANSELA	set	3896
  6065  0F43                     _ANSELB	set	3907
  6066  0F4E                     _ANSELC	set	3918
  6067                           
  6068                           	psect	stringtext4
  6069  1060                     __pstringtext4:
  6070  1060                     STR_1:
  6071  1060  340C               	retlw	12
  6072  1061  3442               	retlw	66	;'B'
  6073  1062  3449               	retlw	73	;'I'
  6074  1063  3447               	retlw	71	;'G'
  6075  1064  345F               	retlw	95	;'_'
  6076  1065  3446               	retlw	70	;'F'
  6077  1066  344F               	retlw	79	;'O'
  6078  1067  344E               	retlw	78	;'N'
  6079  1068  3454               	retlw	84	;'T'
  6080  1069  3420               	retlw	32	;' '
  6081  106A  344C               	retlw	76	;'L'
  6082  106B  3449               	retlw	73	;'I'
  6083  106C  3442               	retlw	66	;'B'
  6084  106D  3400               	retlw	0
  6085                           
  6086                           	psect	stringtext5
  6087  1800                     __pstringtext5:
  6088  1800                     STR_2:
  6089  1800  3431               	retlw	49	;'1'
  6090  1801  3435               	retlw	53	;'5'
  6091  1802  343A               	retlw	58	;':'
  6092  1803  3431               	retlw	49	;'1'
  6093  1804  3431               	retlw	49	;'1'
  6094  1805  3400               	retlw	0
  6095                           
  6096                           	psect	stringtext6
  6097  1806                     __pstringtext6:
  6098  1806                     STR_4:
  6099  1806  3425               	retlw	37	;'%'
  6100  1807  3469               	retlw	105	;'i'
  6101  1808  3420               	retlw	32	;' '
  6102  1809  3425               	retlw	37	;'%'
  6103  180A  3463               	retlw	99	;'c'
  6104  180B  3400               	retlw	0
  6105                           
  6106                           	psect	stringtext7
  6107  180C                     __pstringtext7:
  6108  180C                     STR_3:
  6109  180C  3468               	retlw	104	;'h'
  6110  180D  3472               	retlw	114	;'r'
  6111  180E  3473               	retlw	115	;'s'
  6112  180F  3400               	retlw	0
  6113                           
  6114                           	psect	stringtext8
  6115  0000                     __pstringtext8:
  6116                           
  6117                           	psect	cinit
  6118  07E4                     start_initialization:	
  6119                           ; #config settings
  6120                           
  6121  07E4                     __initialization:
  6122                           
  6123                           ; Initialize objects allocated to BANK1
  6124  07E4  0021               	movlb	1	; select bank1
  6125  07E5  3197  2728  3187   	fcall	__pidataBANK1	;fetch initializer
  6126  07E8  00EA               	movwf	__pdataBANK1& (0+127)
  6127  07E9  3197  2729  3187   	fcall	__pidataBANK1+1	;fetch initializer
  6128  07EC  00EB               	movwf	(__pdataBANK1+1)& (0+127)
  6129                           
  6130                           ; Clear objects allocated to BANK1
  6131  07ED  30A0               	movlw	low __pbssBANK1
  6132  07EE  0084               	movwf	4
  6133  07EF  3000               	movlw	high __pbssBANK1
  6134  07F0  0085               	movwf	5
  6135  07F1  3038               	movlw	56
  6136  07F2  3197  27A5  3187   	fcall	clear_ram0
  6137                           
  6138                           ; Clear objects allocated to BANK2
  6139  07F5  3020               	movlw	low __pbssBANK2
  6140  07F6  0084               	movwf	4
  6141  07F7  3001               	movlw	high __pbssBANK2
  6142  07F8  0085               	movwf	5
  6143  07F9  3032               	movlw	50
  6144  07FA  3197  27A5  3187   	fcall	clear_ram0
  6145  07FD                     end_of_initialization:	
  6146                           ;End of C runtime variable initialization code
  6147                           
  6148  07FD                     __end_of__initialization:
  6149  07FD  0020               	movlb	0
  6150  07FE  3182  2A0B         	ljmp	_main	;jump to C main() function
  6151                           
  6152                           	psect	bssBANK1
  6153  00A0                     __pbssBANK1:
  6154  00A0                     _I2C1_Status:
  6155  00A0                     	ds	29
  6156  00BD                     _nout:
  6157  00BD                     	ds	2
  6158  00BF                     _width:
  6159  00BF                     	ds	2
  6160  00C1                     _prec:
  6161  00C1                     	ds	2
  6162  00C3                     _flags:
  6163  00C3                     	ds	2
  6164  00C5                     _pos:
  6165  00C5                     	ds	2
  6166  00C7                     _contador:
  6167  00C7                     	ds	2
  6168  00C9                     _g_LcdY:
  6169  00C9                     	ds	1
  6170  00CA                     _g_LcdX:
  6171  00CA                     	ds	1
  6172  00CB                     _bc:
  6173  00CB                     	ds	1
  6174  00CC                     _nb:
  6175  00CC                     	ds	1
  6176  00CD                     _row:
  6177  00CD                     	ds	1
  6178  00CE                     _col:
  6179  00CE                     	ds	1
  6180  00CF                     _eusartRxLastError:
  6181  00CF                     	ds	1
  6182  00D0                     _bb:
  6183  00D0                     	ds	8
  6184                           
  6185                           	psect	dataBANK1
  6186  00EA                     __pdataBANK1:
  6187  00EA                     _letra:
  6188  00EA                     	ds	2
  6189                           
  6190                           	psect	bssBANK2
  6191  0120                     __pbssBANK2:
  6192  0120                     _dbuf:
  6193  0120                     	ds	32
  6194  0140                     _buffer:
  6195  0140                     	ds	18
  6196                           
  6197                           	psect	clrtext
  6198  17A5                     clear_ram0:	
  6199                           ;	Called with FSR0 containing the base address, and
  6200                           ;	WREG with the size to clear
  6201                           
  6202  17A5  0064               	clrwdt	;clear the watchdog before getting into this loop
  6203  17A6                     clrloop0:
  6204  17A6  0180               	clrf	0	;clear RAM location pointed to by FSR
  6205  17A7  3101               	addfsr 0,1
  6206  17A8  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  6207  17A9  2FA6               	goto	clrloop0	;have we reached the end yet?
  6208  17AA  3400               	retlw	0	;all done for this memory range, return
  6209                           
  6210                           	psect	cstackBANK1
  6211  00D8                     __pcstackBANK1:
  6212  00D8                     sprintf@ap:
  6213                           
  6214                           ; 1 bytes @ 0x0
  6215  00D8                     	ds	1
  6216  00D9                     sprintf@s:
  6217                           
  6218                           ; 1 bytes @ 0x1
  6219  00D9                     	ds	1
  6220  00DA                     sprintf@f:
  6221                           
  6222                           ; 10 bytes @ 0x2
  6223  00DA                     	ds	10
  6224                           
  6225                           	psect	cstackCOMMON
  6226  0070                     __pcstackCOMMON:
  6227  0070                     ?_I2C1_Open:
  6228  0070                     ??_I2C1_Open:	
  6229                           ; 1 bytes @ 0x0
  6230                           
  6231  0070                     ?_I2C1_SetBuffer:	
  6232                           ; 1 bytes @ 0x0
  6233                           
  6234  0070                     ?_I2C1_MasterWrite:	
  6235                           ; 1 bytes @ 0x0
  6236                           
  6237  0070                     ?_I2C1_Close:	
  6238                           ; 1 bytes @ 0x0
  6239                           
  6240  0070                     ??_I2C1_Close:	
  6241                           ; 1 bytes @ 0x0
  6242                           
  6243  0070                     ?_PMD_Initialize:	
  6244                           ; 1 bytes @ 0x0
  6245                           
  6246  0070                     ??_PMD_Initialize:	
  6247                           ; 1 bytes @ 0x0
  6248                           
  6249  0070                     ?_I2C1_Initialize:	
  6250                           ; 1 bytes @ 0x0
  6251                           
  6252  0070                     ??_I2C1_Initialize:	
  6253                           ; 1 bytes @ 0x0
  6254                           
  6255  0070                     ?_PIN_MANAGER_Initialize:	
  6256                           ; 1 bytes @ 0x0
  6257                           
  6258  0070                     ??_PIN_MANAGER_Initialize:	
  6259                           ; 1 bytes @ 0x0
  6260                           
  6261  0070                     ?_OSCILLATOR_Initialize:	
  6262                           ; 1 bytes @ 0x0
  6263                           
  6264  0070                     ??_OSCILLATOR_Initialize:	
  6265                           ; 1 bytes @ 0x0
  6266                           
  6267  0070                     ?_ADCC_Initialize:	
  6268                           ; 1 bytes @ 0x0
  6269                           
  6270  0070                     ??_ADCC_Initialize:	
  6271                           ; 1 bytes @ 0x0
  6272                           
  6273  0070                     ?_EUSART_Initialize:	
  6274                           ; 1 bytes @ 0x0
  6275                           
  6276  0070                     ?_I2C1_DO_IDLE:	
  6277                           ; 1 bytes @ 0x0
  6278                           
  6279  0070                     ??_I2C1_DO_IDLE:	
  6280                           ; 1 bytes @ 0x0
  6281                           
  6282  0070                     ?_I2C1_DO_SEND_ADR_READ:	
  6283                           ; 1 bytes @ 0x0
  6284                           
  6285  0070                     ??_I2C1_DO_SEND_ADR_READ:	
  6286                           ; 1 bytes @ 0x0
  6287                           
  6288  0070                     ?_I2C1_DO_SEND_ADR_WRITE:	
  6289                           ; 1 bytes @ 0x0
  6290                           
  6291  0070                     ?_I2C1_DO_TX:	
  6292                           ; 1 bytes @ 0x0
  6293                           
  6294  0070                     ?_I2C1_DO_RX:	
  6295                           ; 1 bytes @ 0x0
  6296                           
  6297  0070                     ?_I2C1_DO_RCEN:	
  6298                           ; 1 bytes @ 0x0
  6299                           
  6300  0070                     ??_I2C1_DO_RCEN:	
  6301                           ; 1 bytes @ 0x0
  6302                           
  6303  0070                     ?_I2C1_DO_TX_EMPTY:	
  6304                           ; 1 bytes @ 0x0
  6305                           
  6306  0070                     ?_I2C1_DO_SEND_RESTART_READ:	
  6307                           ; 1 bytes @ 0x0
  6308                           
  6309  0070                     ??_I2C1_DO_SEND_RESTART_READ:	
  6310                           ; 1 bytes @ 0x0
  6311                           
  6312  0070                     ?_I2C1_DO_SEND_RESTART_WRITE:	
  6313                           ; 1 bytes @ 0x0
  6314                           
  6315  0070                     ??_I2C1_DO_SEND_RESTART_WRITE:	
  6316                           ; 1 bytes @ 0x0
  6317                           
  6318  0070                     ?_I2C1_DO_SEND_RESTART:	
  6319                           ; 1 bytes @ 0x0
  6320                           
  6321  0070                     ??_I2C1_DO_SEND_RESTART:	
  6322                           ; 1 bytes @ 0x0
  6323                           
  6324  0070                     ?_I2C1_DO_SEND_STOP:	
  6325                           ; 1 bytes @ 0x0
  6326                           
  6327  0070                     ??_I2C1_DO_SEND_STOP:	
  6328                           ; 1 bytes @ 0x0
  6329                           
  6330  0070                     ?_I2C1_DO_RX_ACK:	
  6331                           ; 1 bytes @ 0x0
  6332                           
  6333  0070                     ??_I2C1_DO_RX_ACK:	
  6334                           ; 1 bytes @ 0x0
  6335                           
  6336  0070                     ?_I2C1_DO_RX_NACK_STOP:	
  6337                           ; 1 bytes @ 0x0
  6338                           
  6339  0070                     ??_I2C1_DO_RX_NACK_STOP:	
  6340                           ; 1 bytes @ 0x0
  6341                           
  6342  0070                     ?_I2C1_DO_RX_NACK_RESTART:	
  6343                           ; 1 bytes @ 0x0
  6344                           
  6345  0070                     ??_I2C1_DO_RX_NACK_RESTART:	
  6346                           ; 1 bytes @ 0x0
  6347                           
  6348  0070                     ?_I2C1_DO_RESET:	
  6349                           ; 1 bytes @ 0x0
  6350                           
  6351  0070                     ??_I2C1_DO_RESET:	
  6352                           ; 1 bytes @ 0x0
  6353                           
  6354  0070                     ?_I2C1_DO_ADDRESS_NACK:	
  6355                           ; 1 bytes @ 0x0
  6356                           
  6357  0070                     ?_I2C1_MasterClearIrq:	
  6358                           ; 1 bytes @ 0x0
  6359                           
  6360  0070                     ??_I2C1_MasterClearIrq:	
  6361                           ; 1 bytes @ 0x0
  6362                           
  6363  0070                     ?_I2C1_MasterOpen:	
  6364                           ; 1 bytes @ 0x0
  6365                           
  6366  0070                     ??_I2C1_MasterOpen:	
  6367                           ; 1 bytes @ 0x0
  6368                           
  6369  0070                     ?_I2C1_MasterDisableIrq:	
  6370                           ; 1 bytes @ 0x0
  6371                           
  6372  0070                     ??_I2C1_MasterDisableIrq:	
  6373                           ; 1 bytes @ 0x0
  6374                           
  6375  0070                     ?_I2C1_MasterClose:	
  6376                           ; 1 bytes @ 0x0
  6377                           
  6378  0070                     ??_I2C1_MasterClose:	
  6379                           ; 1 bytes @ 0x0
  6380                           
  6381  0070                     ?_I2C1_MasterStart:	
  6382                           ; 1 bytes @ 0x0
  6383                           
  6384  0070                     ??_I2C1_MasterStart:	
  6385                           ; 1 bytes @ 0x0
  6386                           
  6387  0070                     ?_I2C1_Poller:	
  6388                           ; 1 bytes @ 0x0
  6389                           
  6390  0070                     ?_I2C1_SetCallback:	
  6391                           ; 1 bytes @ 0x0
  6392                           
  6393  0070                     ?_I2C1_MasterWaitForEvent:	
  6394                           ; 1 bytes @ 0x0
  6395                           
  6396  0070                     ??_I2C1_MasterWaitForEvent:	
  6397                           ; 1 bytes @ 0x0
  6398                           
  6399  0070                     ?_I2C1_MasterFsm:	
  6400                           ; 1 bytes @ 0x0
  6401                           
  6402  0070                     ?_I2C1_MasterIsNack:	
  6403                           ; 1 bytes @ 0x0
  6404                           
  6405  0070                     ??_I2C1_MasterIsNack:	
  6406                           ; 1 bytes @ 0x0
  6407                           
  6408  0070                     ?_I2C1_MasterSendTxData:	
  6409                           ; 1 bytes @ 0x0
  6410                           
  6411  0070                     ??_I2C1_MasterSendTxData:	
  6412                           ; 1 bytes @ 0x0
  6413                           
  6414  0070                     ?_I2C1_MasterGetRxData:	
  6415                           ; 1 bytes @ 0x0
  6416                           
  6417  0070                     ??_I2C1_MasterGetRxData:	
  6418                           ; 1 bytes @ 0x0
  6419                           
  6420  0070                     ?_I2C1_MasterSendAck:	
  6421                           ; 1 bytes @ 0x0
  6422                           
  6423  0070                     ??_I2C1_MasterSendAck:	
  6424                           ; 1 bytes @ 0x0
  6425                           
  6426  0070                     ?_I2C1_MasterStartRx:	
  6427                           ; 1 bytes @ 0x0
  6428                           
  6429  0070                     ??_I2C1_MasterStartRx:	
  6430                           ; 1 bytes @ 0x0
  6431                           
  6432  0070                     ?_I2C1_MasterSetIrq:	
  6433                           ; 1 bytes @ 0x0
  6434                           
  6435  0070                     ??_I2C1_MasterSetIrq:	
  6436                           ; 1 bytes @ 0x0
  6437                           
  6438  0070                     ?_I2C1_MasterEnableRestart:	
  6439                           ; 1 bytes @ 0x0
  6440                           
  6441  0070                     ??_I2C1_MasterEnableRestart:	
  6442                           ; 1 bytes @ 0x0
  6443                           
  6444  0070                     ?_I2C1_MasterStop:	
  6445                           ; 1 bytes @ 0x0
  6446                           
  6447  0070                     ??_I2C1_MasterStop:	
  6448                           ; 1 bytes @ 0x0
  6449                           
  6450  0070                     ?_I2C1_MasterSendNack:	
  6451                           ; 1 bytes @ 0x0
  6452                           
  6453  0070                     ??_I2C1_MasterSendNack:	
  6454                           ; 1 bytes @ 0x0
  6455                           
  6456  0070                     ?_EUSART_SetFramingErrorHandler:	
  6457                           ; 1 bytes @ 0x0
  6458                           
  6459  0070                     ?_EUSART_SetOverrunErrorHandler:	
  6460                           ; 1 bytes @ 0x0
  6461                           
  6462  0070                     ?_EUSART_SetErrorHandler:	
  6463                           ; 1 bytes @ 0x0
  6464                           
  6465  0070                     ?_lcd_init:	
  6466                           ; 1 bytes @ 0x0
  6467                           
  6468  0070                     ?_lcd_BigFont_init:	
  6469                           ; 1 bytes @ 0x0
  6470                           
  6471  0070                     ?_lcd_putc:	
  6472                           ; 1 bytes @ 0x0
  6473                           
  6474  0070                     ?_lcd_clear:	
  6475                           ; 1 bytes @ 0x0
  6476                           
  6477  0070                     ?_SYSTEM_Initialize:	
  6478                           ; 1 bytes @ 0x0
  6479                           
  6480  0070                     ?_I2C1_MasterOperation:	
  6481                           ; 1 bytes @ 0x0
  6482                           
  6483  0070                     ?_EUSART_Write:	
  6484                           ; 1 bytes @ 0x0
  6485                           
  6486  0070                     ??_EUSART_Write:	
  6487                           ; 1 bytes @ 0x0
  6488                           
  6489  0070                     ?_putch:	
  6490                           ; 1 bytes @ 0x0
  6491                           
  6492  0070                     ?_main:	
  6493                           ; 1 bytes @ 0x0
  6494                           
  6495  0070                     ?_Write_PCF:	
  6496                           ; 1 bytes @ 0x0
  6497                           
  6498  0070                     ??___aodiv:	
  6499                           ; 1 bytes @ 0x0
  6500                           
  6501  0070                     ??___aomod:	
  6502                           ; 1 bytes @ 0x0
  6503                           
  6504  0070                     ?_strlen:	
  6505                           ; 1 bytes @ 0x0
  6506                           
  6507  0070                     ?___awdiv:	
  6508                           ; 2 bytes @ 0x0
  6509                           
  6510  0070                     I2C1_MasterSendTxData@data:	
  6511                           ; 2 bytes @ 0x0
  6512                           
  6513  0070                     EUSART_Write@txData:	
  6514                           ; 1 bytes @ 0x0
  6515                           
  6516  0070                     I2C1_SetBuffer@bufferSize:	
  6517                           ; 1 bytes @ 0x0
  6518                           
  6519  0070                     I2C1_SetCallback@cb:	
  6520                           ; 2 bytes @ 0x0
  6521                           
  6522  0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  6523                           ; 2 bytes @ 0x0
  6524                           
  6525  0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  6526                           ; 2 bytes @ 0x0
  6527                           
  6528  0070                     EUSART_SetErrorHandler@interruptHandler:	
  6529                           ; 2 bytes @ 0x0
  6530                           
  6531  0070                     ___awdiv@divisor:	
  6532                           ; 2 bytes @ 0x0
  6533                           
  6534                           
  6535                           ; 2 bytes @ 0x0
  6536  0070                     	ds	1
  6537  0071                     ??_I2C1_DO_SEND_ADR_WRITE:
  6538  0071                     ??_putch:	
  6539                           ; 1 bytes @ 0x1
  6540                           
  6541  0071                     I2C1_Open@address:	
  6542                           ; 1 bytes @ 0x1
  6543                           
  6544  0071                     I2C1_Close@returnValue:	
  6545                           ; 1 bytes @ 0x1
  6546                           
  6547  0071                     putch@txData:	
  6548                           ; 1 bytes @ 0x1
  6549                           
  6550  0071                     ___aodiv@counter:	
  6551                           ; 1 bytes @ 0x1
  6552                           
  6553  0071                     ___aomod@counter:	
  6554                           ; 1 bytes @ 0x1
  6555                           
  6556                           
  6557                           ; 1 bytes @ 0x1
  6558  0071                     	ds	1
  6559  0072                     ??_I2C1_SetBuffer:
  6560  0072                     ??_EUSART_Initialize:	
  6561                           ; 1 bytes @ 0x2
  6562                           
  6563  0072                     ??_EUSART_SetFramingErrorHandler:	
  6564                           ; 1 bytes @ 0x2
  6565                           
  6566  0072                     ??_EUSART_SetOverrunErrorHandler:	
  6567                           ; 1 bytes @ 0x2
  6568                           
  6569  0072                     ??_EUSART_SetErrorHandler:	
  6570                           ; 1 bytes @ 0x2
  6571                           
  6572  0072                     ??_strlen:	
  6573                           ; 1 bytes @ 0x2
  6574                           
  6575  0072                     ??_SYSTEM_Initialize:	
  6576                           ; 1 bytes @ 0x2
  6577                           
  6578  0072                     ?_fputc:	
  6579                           ; 1 bytes @ 0x2
  6580                           
  6581  0072                     I2C1_Open@returnValue:	
  6582                           ; 2 bytes @ 0x2
  6583                           
  6584  0072                     I2C1_SetCallback@ptr:	
  6585                           ; 1 bytes @ 0x2
  6586                           
  6587  0072                     ___aodiv@sign:	
  6588                           ; 1 bytes @ 0x2
  6589                           
  6590  0072                     ___aomod@sign:	
  6591                           ; 1 bytes @ 0x2
  6592                           
  6593  0072                     ___awdiv@dividend:	
  6594                           ; 1 bytes @ 0x2
  6595                           
  6596  0072                     fputc@c:	
  6597                           ; 2 bytes @ 0x2
  6598                           
  6599                           
  6600                           ; 2 bytes @ 0x2
  6601  0072                     	ds	1
  6602  0073                     ??_I2C1_SetCallback:
  6603  0073                     ?_abs:	
  6604                           ; 1 bytes @ 0x3
  6605                           
  6606  0073                     I2C1_SetBuffer@buffer:	
  6607                           ; 2 bytes @ 0x3
  6608                           
  6609  0073                     strlen@a:	
  6610                           ; 1 bytes @ 0x3
  6611                           
  6612  0073                     abs@a:	
  6613                           ; 1 bytes @ 0x3
  6614                           
  6615  0073                     ___aodiv@quotient:	
  6616                           ; 2 bytes @ 0x3
  6617                           
  6618                           
  6619                           ; 8 bytes @ 0x3
  6620  0073                     	ds	1
  6621  0074                     ??___awdiv:
  6622  0074                     I2C1_SetCallback@idx:	
  6623                           ; 1 bytes @ 0x4
  6624                           
  6625  0074                     fputc@fp:	
  6626                           ; 1 bytes @ 0x4
  6627                           
  6628  0074                     strlen@s:	
  6629                           ; 1 bytes @ 0x4
  6630                           
  6631                           
  6632                           ; 1 bytes @ 0x4
  6633  0074                     	ds	1
  6634  0075                     ?_I2C1_SetDataCompleteCallback:
  6635  0075                     ?_I2C1_SetAddressNackCallback:	
  6636                           ; 1 bytes @ 0x5
  6637                           
  6638  0075                     ??_fputc:	
  6639                           ; 1 bytes @ 0x5
  6640                           
  6641  0075                     ??_abs:	
  6642                           ; 1 bytes @ 0x5
  6643                           
  6644  0075                     ___awdiv@counter:	
  6645                           ; 1 bytes @ 0x5
  6646                           
  6647  0075                     I2C1_SetDataCompleteCallback@cb:	
  6648                           ; 1 bytes @ 0x5
  6649                           
  6650  0075                     I2C1_SetAddressNackCallback@cb:	
  6651                           ; 2 bytes @ 0x5
  6652                           
  6653                           
  6654                           ; 2 bytes @ 0x5
  6655  0075                     	ds	1
  6656  0076                     ___awdiv@sign:
  6657                           
  6658                           ; 1 bytes @ 0x6
  6659  0076                     	ds	1
  6660  0077                     I2C1_SetDataCompleteCallback@ptr:
  6661  0077                     I2C1_SetAddressNackCallback@ptr:	
  6662                           ; 1 bytes @ 0x7
  6663                           
  6664  0077                     ___awdiv@quotient:	
  6665                           ; 1 bytes @ 0x7
  6666                           
  6667                           
  6668                           ; 2 bytes @ 0x7
  6669  0077                     	ds	1
  6670  0078                     ??_I2C1_SetDataCompleteCallback:
  6671  0078                     ??_I2C1_SetAddressNackCallback:	
  6672                           ; 1 bytes @ 0x8
  6673                           
  6674                           
  6675                           ; 1 bytes @ 0x8
  6676  0078                     	ds	1
  6677  0079                     ?_rd1RegCompleteHandler:
  6678  0079                     ?_rd2RegCompleteHandler:	
  6679                           ; 1 bytes @ 0x9
  6680                           
  6681  0079                     ?_wr1RegCompleteHandler:	
  6682                           ; 1 bytes @ 0x9
  6683                           
  6684  0079                     ?_wr2RegCompleteHandler:	
  6685                           ; 1 bytes @ 0x9
  6686                           
  6687  0079                     ?_rdBlkRegCompleteHandler:	
  6688                           ; 1 bytes @ 0x9
  6689                           
  6690  0079                     ?_I2C1_CallbackReturnStop:	
  6691                           ; 1 bytes @ 0x9
  6692                           
  6693  0079                     ?_I2C1_CallbackReturnReset:	
  6694                           ; 1 bytes @ 0x9
  6695                           
  6696  0079                     rd1RegCompleteHandler@ptr:	
  6697                           ; 1 bytes @ 0x9
  6698                           
  6699  0079                     rd2RegCompleteHandler@ptr:	
  6700                           ; 1 bytes @ 0x9
  6701                           
  6702  0079                     wr1RegCompleteHandler@ptr:	
  6703                           ; 1 bytes @ 0x9
  6704                           
  6705  0079                     wr2RegCompleteHandler@ptr:	
  6706                           ; 1 bytes @ 0x9
  6707                           
  6708  0079                     rdBlkRegCompleteHandler@ptr:	
  6709                           ; 1 bytes @ 0x9
  6710                           
  6711  0079                     I2C1_CallbackReturnStop@funPtr:	
  6712                           ; 1 bytes @ 0x9
  6713                           
  6714  0079                     I2C1_CallbackReturnReset@funPtr:	
  6715                           ; 1 bytes @ 0x9
  6716                           
  6717                           
  6718                           ; 1 bytes @ 0x9
  6719  0079                     	ds	1
  6720  007A                     ??_rd1RegCompleteHandler:
  6721  007A                     ??_rd2RegCompleteHandler:	
  6722                           ; 1 bytes @ 0xA
  6723                           
  6724  007A                     ??_wr1RegCompleteHandler:	
  6725                           ; 1 bytes @ 0xA
  6726                           
  6727  007A                     ??_wr2RegCompleteHandler:	
  6728                           ; 1 bytes @ 0xA
  6729                           
  6730  007A                     ??_rdBlkRegCompleteHandler:	
  6731                           ; 1 bytes @ 0xA
  6732                           
  6733  007A                     ??_I2C1_DO_TX:	
  6734                           ; 1 bytes @ 0xA
  6735                           
  6736  007A                     ??_I2C1_DO_RX:	
  6737                           ; 1 bytes @ 0xA
  6738                           
  6739  007A                     ??_I2C1_DO_TX_EMPTY:	
  6740                           ; 1 bytes @ 0xA
  6741                           
  6742  007A                     ??_I2C1_DO_ADDRESS_NACK:	
  6743                           ; 1 bytes @ 0xA
  6744                           
  6745  007A                     ??_I2C1_CallbackReturnStop:	
  6746                           ; 1 bytes @ 0xA
  6747                           
  6748  007A                     ??_I2C1_CallbackReturnReset:	
  6749                           ; 1 bytes @ 0xA
  6750                           
  6751  007A                     ?_fputs:	
  6752                           ; 1 bytes @ 0xA
  6753                           
  6754  007A                     ?_ctoa:	
  6755                           ; 2 bytes @ 0xA
  6756                           
  6757  007A                     ctoa@c:	
  6758                           ; 2 bytes @ 0xA
  6759                           
  6760  007A                     fputs@fp:	
  6761                           ; 1 bytes @ 0xA
  6762                           
  6763                           
  6764                           ; 1 bytes @ 0xA
  6765  007A                     	ds	1
  6766  007B                     ??_fputs:
  6767                           
  6768                           ; 1 bytes @ 0xB
  6769  007B                     	ds	2
  6770  007D                     ??_I2C1_Poller:
  6771  007D                     ??_I2C1_MasterOperation:	
  6772                           ; 1 bytes @ 0xD
  6773                           
  6774                           
  6775                           ; 1 bytes @ 0xD
  6776  007D                     	ds	1
  6777  007E                     ??_I2C1_MasterWrite:
  6778  007E                     ??_I2C1_WR:	
  6779                           ; 1 bytes @ 0xE
  6780                           
  6781                           
  6782                           	psect	cstackBANK0
  6783  0020                     __pcstackBANK0:	
  6784                           ; 1 bytes @ 0xE
  6785                           
  6786  0020                     ??_I2C1_MasterFsm:
  6787  0020                     ??_ctoa:	
  6788                           ; 1 bytes @ 0x0
  6789                           
  6790  0020                     ?___aodiv:	
  6791                           ; 1 bytes @ 0x0
  6792                           
  6793  0020                     ?___aomod:	
  6794                           ; 8 bytes @ 0x0
  6795                           
  6796  0020                     fputs@c:	
  6797                           ; 8 bytes @ 0x0
  6798                           
  6799  0020                     ___aodiv@divisor:	
  6800                           ; 1 bytes @ 0x0
  6801                           
  6802  0020                     ___aomod@divisor:	
  6803                           ; 8 bytes @ 0x0
  6804                           
  6805                           
  6806                           ; 8 bytes @ 0x0
  6807  0020                     	ds	1
  6808  0021                     fputs@i:
  6809                           
  6810                           ; 2 bytes @ 0x1
  6811  0021                     	ds	2
  6812  0023                     I2C1_MasterOperation@read:
  6813  0023                     fputs@s:	
  6814                           ; 1 bytes @ 0x3
  6815                           
  6816  0023                     ctoa@l:	
  6817                           ; 1 bytes @ 0x3
  6818                           
  6819                           
  6820                           ; 2 bytes @ 0x3
  6821  0023                     	ds	1
  6822  0024                     ?_pad:
  6823  0024                     I2C1_MasterOperation@returnValue:	
  6824                           ; 2 bytes @ 0x4
  6825                           
  6826  0024                     pad@buf:	
  6827                           ; 1 bytes @ 0x4
  6828                           
  6829                           
  6830                           ; 1 bytes @ 0x4
  6831  0024                     	ds	1
  6832  0025                     ?_I2C1_WR:
  6833  0025                     ?_I2C1_Write1ByteRegister:	
  6834                           ; 1 bytes @ 0x5
  6835                           
  6836  0025                     I2C1_Write1ByteRegister@reg:	
  6837                           ; 1 bytes @ 0x5
  6838                           
  6839  0025                     I2C1_WR@data:	
  6840                           ; 1 bytes @ 0x5
  6841                           
  6842  0025                     pad@p:	
  6843                           ; 1 bytes @ 0x5
  6844                           
  6845  0025                     ctoa@w:	
  6846                           ; 2 bytes @ 0x5
  6847                           
  6848                           
  6849                           ; 2 bytes @ 0x5
  6850  0025                     	ds	1
  6851  0026                     I2C1_Write1ByteRegister@data:
  6852  0026                     I2C1_WR@address:	
  6853                           ; 1 bytes @ 0x6
  6854                           
  6855                           
  6856                           ; 1 bytes @ 0x6
  6857  0026                     	ds	1
  6858  0027                     ??_I2C1_Write1ByteRegister:
  6859  0027                     ??_Write_PCF:	
  6860                           ; 1 bytes @ 0x7
  6861                           
  6862  0027                     ??_pad:	
  6863                           ; 1 bytes @ 0x7
  6864                           
  6865  0027                     ctoa@fp:	
  6866                           ; 1 bytes @ 0x7
  6867                           
  6868                           
  6869                           ; 1 bytes @ 0x7
  6870  0027                     	ds	1
  6871  0028                     I2C1_Write1ByteRegister@address:
  6872  0028                     Write_PCF@dato:	
  6873                           ; 1 bytes @ 0x8
  6874                           
  6875  0028                     pad@i:	
  6876                           ; 1 bytes @ 0x8
  6877                           
  6878  0028                     ___aodiv@dividend:	
  6879                           ; 2 bytes @ 0x8
  6880                           
  6881  0028                     ___aomod@dividend:	
  6882                           ; 8 bytes @ 0x8
  6883                           
  6884                           
  6885                           ; 8 bytes @ 0x8
  6886  0028                     	ds	1
  6887  0029                     ?_Send_D7_D4:
  6888  0029                     Send_D7_D4@nibble:	
  6889                           ; 1 bytes @ 0x9
  6890                           
  6891                           
  6892                           ; 1 bytes @ 0x9
  6893  0029                     	ds	1
  6894  002A                     ??_Send_D7_D4:
  6895  002A                     pad@w:	
  6896                           ; 1 bytes @ 0xA
  6897                           
  6898                           
  6899                           ; 2 bytes @ 0xA
  6900  002A                     	ds	1
  6901  002B                     Send_D7_D4@address:
  6902                           
  6903                           ; 1 bytes @ 0xB
  6904  002B                     	ds	1
  6905  002C                     Send_D7_D4@datos:
  6906  002C                     pad@fp:	
  6907                           ; 1 bytes @ 0xC
  6908                           
  6909                           
  6910                           ; 1 bytes @ 0xC
  6911  002C                     	ds	1
  6912  002D                     ?_lcd_send_byte:
  6913  002D                     lcd_send_byte@n:	
  6914                           ; 1 bytes @ 0xD
  6915                           
  6916                           
  6917                           ; 1 bytes @ 0xD
  6918  002D                     	ds	1
  6919  002E                     ??_lcd_send_byte:
  6920                           
  6921                           ; 1 bytes @ 0xE
  6922  002E                     	ds	2
  6923  0030                     ?_dtoa:
  6924  0030                     lcd_send_byte@address:	
  6925                           ; 2 bytes @ 0x10
  6926                           
  6927  0030                     dtoa@d:	
  6928                           ; 1 bytes @ 0x10
  6929                           
  6930                           
  6931                           ; 8 bytes @ 0x10
  6932  0030                     	ds	1
  6933  0031                     ??_lcd_init:
  6934  0031                     ?_lcd_gotoxy:	
  6935                           ; 1 bytes @ 0x11
  6936                           
  6937  0031                     ??_lcd_clear:	
  6938                           ; 1 bytes @ 0x11
  6939                           
  6940  0031                     ?_lcd_setCustomChar:	
  6941                           ; 1 bytes @ 0x11
  6942                           
  6943  0031                     lcd_gotoxy@y:	
  6944                           ; 1 bytes @ 0x11
  6945                           
  6946  0031                     lcd_setCustomChar@dato:	
  6947                           ; 1 bytes @ 0x11
  6948                           
  6949                           
  6950                           ; 1 bytes @ 0x11
  6951  0031                     	ds	1
  6952  0032                     ??_lcd_gotoxy:
  6953  0032                     ??_lcd_setCustomChar:	
  6954                           ; 1 bytes @ 0x12
  6955                           
  6956  0032                     lcd_init@i:	
  6957                           ; 1 bytes @ 0x12
  6958                           
  6959                           
  6960                           ; 1 bytes @ 0x12
  6961  0032                     	ds	2
  6962  0034                     lcd_gotoxy@x:
  6963  0034                     lcd_setCustomChar@dir:	
  6964                           ; 1 bytes @ 0x14
  6965                           
  6966                           
  6967                           ; 1 bytes @ 0x14
  6968  0034                     	ds	1
  6969  0035                     lcd_gotoxy@address:
  6970  0035                     lcd_setCustomChar@i:	
  6971                           ; 1 bytes @ 0x15
  6972                           
  6973                           
  6974                           ; 1 bytes @ 0x15
  6975  0035                     	ds	1
  6976  0036                     ??_lcd_BigFont_init:
  6977  0036                     ?_lcd_puts:	
  6978                           ; 1 bytes @ 0x16
  6979                           
  6980  0036                     ??_lcd_putc:	
  6981                           ; 1 bytes @ 0x16
  6982                           
  6983  0036                     ?_lcd_BigFont_writeBigChar:	
  6984                           ; 1 bytes @ 0x16
  6985                           
  6986  0036                     lcd_BigFont_writeBigChar@x:	
  6987                           ; 1 bytes @ 0x16
  6988                           
  6989  0036                     lcd_puts@dato:	
  6990                           ; 1 bytes @ 0x16
  6991                           
  6992                           
  6993                           ; 2 bytes @ 0x16
  6994  0036                     	ds	1
  6995  0037                     lcd_BigFont_writeBigChar@y:
  6996                           
  6997                           ; 1 bytes @ 0x17
  6998  0037                     	ds	1
  6999  0038                     ??_lcd_puts:
  7000  0038                     ??_lcd_BigFont_writeBigChar:	
  7001                           ; 1 bytes @ 0x18
  7002                           
  7003  0038                     ??_dtoa:	
  7004                           ; 1 bytes @ 0x18
  7005                           
  7006  0038                     lcd_putc@c:	
  7007                           ; 1 bytes @ 0x18
  7008                           
  7009                           
  7010                           ; 1 bytes @ 0x18
  7011  0038                     	ds	3
  7012  003B                     _dtoa$2111:
  7013                           
  7014                           ; 2 bytes @ 0x1B
  7015  003B                     	ds	2
  7016  003D                     dtoa@fp:
  7017                           
  7018                           ; 1 bytes @ 0x1D
  7019  003D                     	ds	1
  7020  003E                     dtoa@p:
  7021                           
  7022                           ; 2 bytes @ 0x1E
  7023  003E                     	ds	1
  7024  003F                     lcd_BigFont_writeBigChar@ch:
  7025                           
  7026                           ; 1 bytes @ 0x1F
  7027  003F                     	ds	1
  7028  0040                     ?_lcd_BigFont_writeBigString:
  7029  0040                     lcd_BigFont_writeBigString@str:	
  7030                           ; 1 bytes @ 0x20
  7031                           
  7032  0040                     dtoa@w:	
  7033                           ; 2 bytes @ 0x20
  7034                           
  7035                           
  7036                           ; 2 bytes @ 0x20
  7037  0040                     	ds	2
  7038  0042                     lcd_BigFont_writeBigString@x:
  7039  0042                     dtoa@s:	
  7040                           ; 1 bytes @ 0x22
  7041                           
  7042                           
  7043                           ; 2 bytes @ 0x22
  7044  0042                     	ds	1
  7045  0043                     lcd_BigFont_writeBigString@y:
  7046                           
  7047                           ; 1 bytes @ 0x23
  7048  0043                     	ds	1
  7049  0044                     ??_lcd_BigFont_writeBigString:
  7050  0044                     dtoa@n:	
  7051                           ; 1 bytes @ 0x24
  7052                           
  7053                           
  7054                           ; 8 bytes @ 0x24
  7055  0044                     	ds	3
  7056  0047                     lcd_BigFont_writeBigString@c:
  7057                           
  7058                           ; 1 bytes @ 0x27
  7059  0047                     	ds	5
  7060  004C                     dtoa@i:
  7061                           
  7062                           ; 2 bytes @ 0x2C
  7063  004C                     	ds	2
  7064  004E                     ?_vfpfcnvrt:
  7065  004E                     vfpfcnvrt@fmt:	
  7066                           ; 2 bytes @ 0x2E
  7067                           
  7068                           
  7069                           ; 1 bytes @ 0x2E
  7070  004E                     	ds	1
  7071  004F                     vfpfcnvrt@ap:
  7072                           
  7073                           ; 1 bytes @ 0x2F
  7074  004F                     	ds	1
  7075  0050                     ??_vfpfcnvrt:
  7076                           
  7077                           ; 1 bytes @ 0x30
  7078  0050                     	ds	5
  7079  0055                     vfpfcnvrt@ll:
  7080                           
  7081                           ; 8 bytes @ 0x35
  7082  0055                     	ds	8
  7083  005D                     vfpfcnvrt@c:
  7084                           
  7085                           ; 1 bytes @ 0x3D
  7086  005D                     	ds	1
  7087  005E                     vfpfcnvrt@fp:
  7088                           
  7089                           ; 1 bytes @ 0x3E
  7090  005E                     	ds	1
  7091  005F                     ?_vfprintf:
  7092  005F                     vfprintf@fmt:	
  7093                           ; 2 bytes @ 0x3F
  7094                           
  7095                           
  7096                           ; 2 bytes @ 0x3F
  7097  005F                     	ds	2
  7098  0061                     vfprintf@ap:
  7099                           
  7100                           ; 1 bytes @ 0x41
  7101  0061                     	ds	1
  7102  0062                     ??_vfprintf:
  7103                           
  7104                           ; 1 bytes @ 0x42
  7105  0062                     	ds	2
  7106  0064                     vfprintf@fp:
  7107                           
  7108                           ; 1 bytes @ 0x44
  7109  0064                     	ds	1
  7110  0065                     vfprintf@cfmt:
  7111                           
  7112                           ; 2 bytes @ 0x45
  7113  0065                     	ds	2
  7114  0067                     ?_sprintf:
  7115  0067                     sprintf@fmt:	
  7116                           ; 2 bytes @ 0x47
  7117                           
  7118                           
  7119                           ; 2 bytes @ 0x47
  7120  0067                     	ds	6
  7121  006D                     ??_sprintf:
  7122                           
  7123                           ; 1 bytes @ 0x4D
  7124  006D                     	ds	1
  7125  006E                     ??_main:
  7126                           
  7127                           ; 1 bytes @ 0x4E
  7128  006E                     	ds	2
  7129                           
  7130                           	psect	maintext
  7131  020B                     __pmaintext:	
  7132 ;;
  7133 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  7134 ;;
  7135 ;; *************** function _main *****************
  7136 ;; Defined at:
  7137 ;;		line 53 in file "main.c"
  7138 ;; Parameters:    Size  Location     Type
  7139 ;;		None
  7140 ;; Auto vars:     Size  Location     Type
  7141 ;;		None
  7142 ;; Return value:  Size  Location     Type
  7143 ;;                  1    wreg      void 
  7144 ;; Registers used:
  7145 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7146 ;; Tracked objects:
  7147 ;;		On entry : B1F/0
  7148 ;;		On exit  : 0/0
  7149 ;;		Unchanged: 0/0
  7150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7153 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7154 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7155 ;;Total ram usage:        2 bytes
  7156 ;; Hardware stack levels required when called: 15
  7157 ;; This function calls:
  7158 ;;		_SYSTEM_Initialize
  7159 ;;		_lcd_BigFont_init
  7160 ;;		_lcd_BigFont_writeBigString
  7161 ;;		_lcd_clear
  7162 ;;		_lcd_gotoxy
  7163 ;;		_lcd_init
  7164 ;;		_lcd_putc
  7165 ;;		_lcd_puts
  7166 ;;		_sprintf
  7167 ;; This function is called by:
  7168 ;;		Startup code after reset
  7169 ;; This function uses a non-reentrant model
  7170 ;;
  7171                           
  7172  020B                     _main:	
  7173                           ;psect for function _main
  7174                           
  7175  020B                     l4570:	
  7176                           ;incstack = 0
  7177                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7178                           
  7179                           
  7180                           ;main.c: 56:     SYSTEM_Initialize();
  7181  020B  318A  228F  3182   	fcall	_SYSTEM_Initialize
  7182  020E                     l4572:
  7183                           
  7184                           ;main.c: 57:     lcd_init();
  7185  020E  3181  2182  3182   	fcall	_lcd_init
  7186  0211                     l4574:
  7187                           
  7188                           ;main.c: 58:     lcd_BigFont_init();
  7189  0211  3180  2004  3182   	fcall	_lcd_BigFont_init
  7190  0214                     l4576:
  7191                           
  7192                           ;main.c: 73:     lcd_puts("\fBIG_FONT LIB");
  7193  0214  3060               	movlw	low (STR_1| (0+32768))
  7194  0215  0020               	movlb	0	; select bank0
  7195  0216  00B6               	movwf	lcd_puts@dato
  7196  0217  3090               	movlw	high (STR_1| (0+32768))
  7197  0218  00B7               	movwf	lcd_puts@dato+1
  7198  0219  318F  27A6  3182   	fcall	_lcd_puts
  7199  021C                     l4578:
  7200                           
  7201                           ;main.c: 75:     lcd_BigFont_writeBigString("15:11",1,2);
  7202  021C  3000               	movlw	low (STR_2| (0+32768))
  7203  021D  0020               	movlb	0	; select bank0
  7204  021E  00C0               	movwf	lcd_BigFont_writeBigString@str
  7205  021F  3098               	movlw	high (STR_2| (0+32768))
  7206  0220  00C1               	movwf	lcd_BigFont_writeBigString@str+1
  7207  0221  01C2               	clrf	lcd_BigFont_writeBigString@x
  7208  0222  0AC2               	incf	lcd_BigFont_writeBigString@x,f
  7209  0223  3002               	movlw	2
  7210  0224  00EE               	movwf	??_main
  7211  0225  086E               	movf	??_main,w
  7212  0226  00C3               	movwf	lcd_BigFont_writeBigString@y
  7213  0227  318B  23CF  3182   	fcall	_lcd_BigFont_writeBigString
  7214  022A                     l4580:
  7215                           
  7216                           ;main.c: 76:     lcd_gotoxy(15,2);
  7217  022A  3002               	movlw	2
  7218  022B  0020               	movlb	0	; select bank0
  7219  022C  00EE               	movwf	??_main
  7220  022D  086E               	movf	??_main,w
  7221  022E  00B1               	movwf	lcd_gotoxy@y
  7222  022F  300F               	movlw	15
  7223  0230  318D  25D6  3182   	fcall	_lcd_gotoxy
  7224  0233                     l4582:
  7225                           
  7226                           ;main.c: 77:     lcd_puts("hrs");
  7227  0233  300C               	movlw	low (STR_3| (0+32768))
  7228  0234  0020               	movlb	0	; select bank0
  7229  0235  00B6               	movwf	lcd_puts@dato
  7230  0236  3098               	movlw	high (STR_3| (0+32768))
  7231  0237  00B7               	movwf	lcd_puts@dato+1
  7232  0238  318F  27A6  3182   	fcall	_lcd_puts
  7233  023B                     l4584:
  7234                           
  7235                           ;main.c: 80:     _delay((unsigned long)((5000)*(8000000/4000.0)));
  7236  023B  3033               	movlw	51
  7237  023C  0020               	movlb	0	; select bank0
  7238  023D  00EF               	movwf	??_main+1
  7239  023E  30BB               	movlw	187
  7240  023F  00EE               	movwf	??_main
  7241  0240  30DF               	movlw	223
  7242  0241                     u2547:
  7243  0241  0B89               	decfsz	9,f
  7244  0242  2A41               	goto	u2547
  7245  0243  0BEE               	decfsz	??_main,f
  7246  0244  2A41               	goto	u2547
  7247  0245  0BEF               	decfsz	??_main+1,f
  7248  0246  2A41               	goto	u2547
  7249  0247  3200               	nop2
  7250  0248                     l4586:
  7251                           
  7252                           ;main.c: 81:     lcd_putc('\f');
  7253  0248  300C               	movlw	12
  7254  0249  318E  261A  3182   	fcall	_lcd_putc
  7255  024C                     l4588:
  7256                           
  7257                           ;main.c: 84:     {;main.c: 85:         lcd_clear();
  7258  024C  318A  227E  3182   	fcall	_lcd_clear
  7259  024F                     l4590:
  7260                           
  7261                           ;main.c: 87:         sprintf(buffer,"%i %c",contador++, letra++);
  7262  024F  3006               	movlw	low (STR_4| (0+32768))
  7263  0250  0020               	movlb	0	; select bank0
  7264  0251  00E7               	movwf	sprintf@fmt
  7265  0252  3098               	movlw	high (STR_4| (0+32768))
  7266  0253  00E8               	movwf	sprintf@fmt+1
  7267  0254  0021               	movlb	1	; select bank1
  7268  0255  0848               	movf	(_contador+1)^(0+128),w
  7269  0256  0020               	movlb	0	; select bank0
  7270  0257  00EA               	movwf	?_sprintf+3
  7271  0258  0021               	movlb	1	; select bank1
  7272  0259  0847               	movf	_contador^(0+128),w
  7273  025A  0020               	movlb	0	; select bank0
  7274  025B  00E9               	movwf	?_sprintf+2
  7275  025C  0021               	movlb	1	; select bank1
  7276  025D  086B               	movf	(_letra+1)^(0+128),w
  7277  025E  0020               	movlb	0	; select bank0
  7278  025F  00EC               	movwf	?_sprintf+5
  7279  0260  0021               	movlb	1	; select bank1
  7280  0261  086A               	movf	_letra^(0+128),w
  7281  0262  0020               	movlb	0	; select bank0
  7282  0263  00EB               	movwf	?_sprintf+4
  7283  0264  3040               	movlw	(low (_buffer| (0+256)))& (0+255)
  7284  0265  318C  2420  3182   	fcall	_sprintf
  7285  0268                     l4592:
  7286  0268  3001               	movlw	1
  7287  0269  0021               	movlb	1	; select bank1
  7288  026A  07EA               	addwf	_letra^(0+128),f
  7289  026B  3000               	movlw	0
  7290  026C  3DEB               	addwfc	(_letra+1)^(0+128),f
  7291  026D                     l4594:
  7292  026D  3001               	movlw	1
  7293  026E  07C7               	addwf	_contador^(0+128),f
  7294  026F  3000               	movlw	0
  7295  0270  3DC8               	addwfc	(_contador+1)^(0+128),f
  7296  0271                     l4596:
  7297                           
  7298                           ;main.c: 88:         if(letra > 90){
  7299  0271  086B               	movf	(_letra+1)^(0+128),w
  7300  0272  3A80               	xorlw	128
  7301  0273  0020               	movlb	0	; select bank0
  7302  0274  00EE               	movwf	??_main
  7303  0275  3080               	movlw	128
  7304  0276  026E               	subwf	??_main,w
  7305  0277  1D03               	skipz
  7306  0278  2A7C               	goto	u2515
  7307  0279  305B               	movlw	91
  7308  027A  0021               	movlb	1	; select bank1
  7309  027B  026A               	subwf	_letra^(0+128),w
  7310  027C                     u2515:
  7311  027C  1C03               	skipc
  7312  027D  2A7F               	goto	u2511
  7313  027E  2A80               	goto	u2510
  7314  027F                     u2511:
  7315  027F  2A85               	goto	l4600
  7316  0280                     u2510:
  7317  0280                     l4598:
  7318                           
  7319                           ;main.c: 89:             letra = 65;
  7320  0280  3041               	movlw	65
  7321  0281  0021               	movlb	1	; select bank1
  7322  0282  00EA               	movwf	_letra^(0+128)
  7323  0283  3000               	movlw	0
  7324  0284  00EB               	movwf	(_letra^(0+128)+1)
  7325  0285                     l4600:
  7326                           
  7327                           ;main.c: 91:         lcd_BigFont_writeBigString(buffer,0,0);
  7328  0285  3040               	movlw	low _buffer
  7329  0286  0020               	movlb	0	; select bank0
  7330  0287  00C0               	movwf	lcd_BigFont_writeBigString@str
  7331  0288  3001               	movlw	high _buffer
  7332  0289  00C1               	movwf	lcd_BigFont_writeBigString@str+1
  7333  028A  01C2               	clrf	lcd_BigFont_writeBigString@x
  7334  028B  01C3               	clrf	lcd_BigFont_writeBigString@y
  7335  028C  318B  23CF  3182   	fcall	_lcd_BigFont_writeBigString
  7336  028F                     l4602:
  7337                           
  7338                           ;main.c: 94:         _delay((unsigned long)((300)*(8000000/4000.0)));
  7339  028F  3004               	movlw	4
  7340  0290  0020               	movlb	0	; select bank0
  7341  0291  00EF               	movwf	??_main+1
  7342  0292  300C               	movlw	12
  7343  0293  00EE               	movwf	??_main
  7344  0294  3033               	movlw	51
  7345  0295                     u2557:
  7346  0295  0B89               	decfsz	9,f
  7347  0296  2A95               	goto	u2557
  7348  0297  0BEE               	decfsz	??_main,f
  7349  0298  2A95               	goto	u2557
  7350  0299  0BEF               	decfsz	??_main+1,f
  7351  029A  2A95               	goto	u2557
  7352  029B  3200               	nop2
  7353  029C  2A4C               	goto	l4588
  7354  029D  3180  2802         	ljmp	start
  7355  029F                     __end_of_main:
  7356                           
  7357                           	psect	text1
  7358  0C20                     __ptext1:	
  7359 ;; *************** function _sprintf *****************
  7360 ;; Defined at:
  7361 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  7362 ;; Parameters:    Size  Location     Type
  7363 ;;  s               1    wreg     PTR unsigned char 
  7364 ;;		 -> buffer(18), 
  7365 ;;  fmt             2   71[BANK0 ] PTR const unsigned char 
  7366 ;;		 -> STR_4(6), 
  7367 ;; Auto vars:     Size  Location     Type
  7368 ;;  s               1    1[BANK1 ] PTR unsigned char 
  7369 ;;		 -> buffer(18), 
  7370 ;;  f              10    2[BANK1 ] struct _IO_FILE
  7371 ;;  ret             2    0        int 
  7372 ;;  ap              1    0[BANK1 ] PTR void [1]
  7373 ;;		 -> ?_sprintf(2), 
  7374 ;; Return value:  Size  Location     Type
  7375 ;;                  2   71[BANK0 ] int 
  7376 ;; Registers used:
  7377 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7378 ;; Tracked objects:
  7379 ;;		On entry : 0/0
  7380 ;;		On exit  : 0/0
  7381 ;;		Unchanged: 0/0
  7382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7383 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7384 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  7385 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7386 ;;      Totals:         0       7      12       0       0       0       0       0       0       0       0       0       
      +0       0
  7387 ;;Total ram usage:       19 bytes
  7388 ;; Hardware stack levels used: 1
  7389 ;; Hardware stack levels required when called: 8
  7390 ;; This function calls:
  7391 ;;		_vfprintf
  7392 ;; This function is called by:
  7393 ;;		_main
  7394 ;; This function uses a non-reentrant model
  7395 ;;
  7396                           
  7397  0C20                     _sprintf:	
  7398                           ;psect for function _sprintf
  7399                           
  7400                           
  7401                           ;incstack = 0
  7402                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7403                           ;sprintf@s stored from wreg
  7404  0C20  0021               	movlb	1	; select bank1
  7405  0C21  00D9               	movwf	sprintf@s^(0+128)
  7406  0C22                     l4428:
  7407  0C22  3069               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  7408  0C23  0020               	movlb	0	; select bank0
  7409  0C24  00ED               	movwf	??_sprintf
  7410  0C25  086D               	movf	??_sprintf,w
  7411  0C26  0021               	movlb	1	; select bank1
  7412  0C27  00D8               	movwf	sprintf@ap^(0+128)
  7413  0C28  0859               	movf	sprintf@s^(0+128),w
  7414  0C29  0020               	movlb	0	; select bank0
  7415  0C2A  00ED               	movwf	??_sprintf
  7416  0C2B  086D               	movf	??_sprintf,w
  7417  0C2C  0021               	movlb	1	; select bank1
  7418  0C2D  00DA               	movwf	sprintf@f^(0+128)
  7419  0C2E                     l4430:
  7420  0C2E  01DC               	clrf	(sprintf@f^(0+128)+2)
  7421  0C2F  01DD               	clrf	((sprintf@f+1)^(0+128)+2)
  7422  0C30                     l4432:
  7423  0C30  01E2               	clrf	(sprintf@f^(0+128)+8)
  7424  0C31  01E3               	clrf	((sprintf@f+1)^(0+128)+8)
  7425  0C32                     l4434:
  7426  0C32  0020               	movlb	0	; select bank0
  7427  0C33  0868               	movf	sprintf@fmt+1,w
  7428  0C34  00E0               	movwf	vfprintf@fmt+1
  7429  0C35  0867               	movf	sprintf@fmt,w
  7430  0C36  00DF               	movwf	vfprintf@fmt
  7431  0C37  30D8               	movlw	(low (sprintf@ap| 0))& (0+255)
  7432  0C38  00ED               	movwf	??_sprintf
  7433  0C39  086D               	movf	??_sprintf,w
  7434  0C3A  00E1               	movwf	vfprintf@ap
  7435  0C3B  30DA               	movlw	(low (sprintf@f| 0))& (0+255)
  7436  0C3C  318D  2502  318C   	fcall	_vfprintf
  7437  0C3F                     l4436:
  7438  0C3F  0021               	movlb	1	; select bank1
  7439  0C40  085C               	movf	(sprintf@f^(0+128)+2),w
  7440  0C41  0759               	addwf	sprintf@s^(0+128),w
  7441  0C42  0020               	movlb	0	; select bank0
  7442  0C43  00ED               	movwf	??_sprintf
  7443  0C44  086D               	movf	??_sprintf,w
  7444  0C45  0086               	movwf	6
  7445  0C46  3001               	movlw	1	; select bank2/3
  7446  0C47  0087               	movwf	7
  7447  0C48  0181               	clrf	1
  7448  0C49                     l1612:
  7449  0C49  0008               	return
  7450  0C4A                     __end_of_sprintf:
  7451                           
  7452                           	psect	text2
  7453  0D02                     __ptext2:	
  7454 ;; *************** function _vfprintf *****************
  7455 ;; Defined at:
  7456 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  7457 ;; Parameters:    Size  Location     Type
  7458 ;;  fp              1    wreg     PTR struct _IO_FILE
  7459 ;;		 -> sprintf@f(10), 
  7460 ;;  fmt             2   63[BANK0 ] PTR const unsigned char 
  7461 ;;		 -> STR_4(6), 
  7462 ;;  ap              1   65[BANK0 ] PTR PTR void 
  7463 ;;		 -> sprintf@ap(1), 
  7464 ;; Auto vars:     Size  Location     Type
  7465 ;;  fp              1   68[BANK0 ] PTR struct _IO_FILE
  7466 ;;		 -> sprintf@f(10), 
  7467 ;;  cfmt            2   69[BANK0 ] PTR unsigned char 
  7468 ;;		 -> STR_4(6), 
  7469 ;; Return value:  Size  Location     Type
  7470 ;;                  2   63[BANK0 ] int 
  7471 ;; Registers used:
  7472 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7473 ;; Tracked objects:
  7474 ;;		On entry : 0/0
  7475 ;;		On exit  : 0/0
  7476 ;;		Unchanged: 0/0
  7477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7478 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7479 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7480 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7481 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7482 ;;Total ram usage:        8 bytes
  7483 ;; Hardware stack levels used: 1
  7484 ;; Hardware stack levels required when called: 7
  7485 ;; This function calls:
  7486 ;;		_vfpfcnvrt
  7487 ;; This function is called by:
  7488 ;;		_sprintf
  7489 ;; This function uses a non-reentrant model
  7490 ;;
  7491                           
  7492  0D02                     _vfprintf:	
  7493                           ;psect for function _vfprintf
  7494                           
  7495                           
  7496                           ;incstack = 0
  7497                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7498                           ;vfprintf@fp stored from wreg
  7499  0D02  0020               	movlb	0	; select bank0
  7500  0D03  00E4               	movwf	vfprintf@fp
  7501  0D04                     l4264:
  7502                           
  7503                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  7504  0D04  0860               	movf	vfprintf@fmt+1,w
  7505  0D05  00E6               	movwf	vfprintf@cfmt+1
  7506  0D06  085F               	movf	vfprintf@fmt,w
  7507  0D07  00E5               	movwf	vfprintf@cfmt
  7508  0D08                     l4266:
  7509                           
  7510                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  7511  0D08  0021               	movlb	1	; select bank1
  7512  0D09  01BD               	clrf	_nout^(0+128)
  7513  0D0A  01BE               	clrf	(_nout+1)^(0+128)
  7514                           
  7515                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  7516  0D0B  2D20               	goto	l4270
  7517  0D0C                     l4268:
  7518                           
  7519                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  7520  0D0C  3065               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  7521  0D0D  00E2               	movwf	??_vfprintf
  7522  0D0E  0862               	movf	??_vfprintf,w
  7523  0D0F  00CE               	movwf	vfpfcnvrt@fmt
  7524  0D10  0861               	movf	vfprintf@ap,w
  7525  0D11  00E3               	movwf	??_vfprintf+1
  7526  0D12  0863               	movf	??_vfprintf+1,w
  7527  0D13  00CF               	movwf	vfpfcnvrt@ap
  7528  0D14  0864               	movf	vfprintf@fp,w
  7529  0D15  3185  2566  318D   	fcall	_vfpfcnvrt
  7530  0D18  0020               	movlb	0	; select bank0
  7531  0D19  084E               	movf	?_vfpfcnvrt,w
  7532  0D1A  0021               	movlb	1	; select bank1
  7533  0D1B  07BD               	addwf	_nout^(0+128),f
  7534  0D1C  0020               	movlb	0	; select bank0
  7535  0D1D  084F               	movf	?_vfpfcnvrt+1,w
  7536  0D1E  0021               	movlb	1	; select bank1
  7537  0D1F  3DBE               	addwfc	(_nout+1)^(0+128),f
  7538  0D20                     l4270:
  7539                           
  7540                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  7541  0D20  0020               	movlb	0	; select bank0
  7542  0D21  0865               	movf	vfprintf@cfmt,w
  7543  0D22  0084               	movwf	4
  7544  0D23  0866               	movf	vfprintf@cfmt+1,w
  7545  0D24  0085               	movwf	5
  7546  0D25  0012               	moviw fsr0++
  7547  0D26  1D03               	btfss	3,2
  7548  0D27  2D29               	goto	u2301
  7549  0D28  2D2A               	goto	u2300
  7550  0D29                     u2301:
  7551  0D29  2D0C               	goto	l4268
  7552  0D2A                     u2300:
  7553  0D2A                     l4272:
  7554                           
  7555                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  7556  0D2A  0021               	movlb	1	; select bank1
  7557  0D2B  083E               	movf	(_nout+1)^(0+128),w
  7558  0D2C  0020               	movlb	0	; select bank0
  7559  0D2D  00E0               	movwf	?_vfprintf+1
  7560  0D2E  0021               	movlb	1	; select bank1
  7561  0D2F  083D               	movf	_nout^(0+128),w
  7562  0D30  0020               	movlb	0	; select bank0
  7563  0D31  00DF               	movwf	?_vfprintf
  7564  0D32                     l1701:
  7565  0D32  0008               	return
  7566  0D33                     __end_of_vfprintf:
  7567                           
  7568                           	psect	text3
  7569  0566                     __ptext3:	
  7570 ;; *************** function _vfpfcnvrt *****************
  7571 ;; Defined at:
  7572 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  7573 ;; Parameters:    Size  Location     Type
  7574 ;;  fp              1    wreg     PTR struct _IO_FILE
  7575 ;;		 -> sprintf@f(10), 
  7576 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  7577 ;;		 -> vfprintf@cfmt(2), 
  7578 ;;  ap              1   47[BANK0 ] PTR PTR void 
  7579 ;;		 -> sprintf@ap(1), 
  7580 ;; Auto vars:     Size  Location     Type
  7581 ;;  fp              1   62[BANK0 ] PTR struct _IO_FILE
  7582 ;;		 -> sprintf@f(10), 
  7583 ;;  ll              8   53[BANK0 ] long long 
  7584 ;;  llu             8    0        unsigned long long 
  7585 ;;  f               4    0        unsigned long long 
  7586 ;;  ct              3    0        unsigned char [3]
  7587 ;;  vp              2    0        PTR void 
  7588 ;;  i               2    0        int 
  7589 ;;  done            2    0        int 
  7590 ;;  cp              2    0        PTR unsigned char 
  7591 ;;  c               1   61[BANK0 ] unsigned char 
  7592 ;; Return value:  Size  Location     Type
  7593 ;;                  2   46[BANK0 ] int 
  7594 ;; Registers used:
  7595 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7596 ;; Tracked objects:
  7597 ;;		On entry : 0/0
  7598 ;;		On exit  : 0/0
  7599 ;;		Unchanged: 0/0
  7600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7601 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7602 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7603 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7604 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7605 ;;Total ram usage:       17 bytes
  7606 ;; Hardware stack levels used: 1
  7607 ;; Hardware stack levels required when called: 6
  7608 ;; This function calls:
  7609 ;;		_ctoa
  7610 ;;		_dtoa
  7611 ;;		_fputc
  7612 ;; This function is called by:
  7613 ;;		_vfprintf
  7614 ;; This function uses a non-reentrant model
  7615 ;;
  7616                           
  7617  0566                     _vfpfcnvrt:	
  7618                           ;psect for function _vfpfcnvrt
  7619                           
  7620                           
  7621                           ;incstack = 0
  7622                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7623                           ;vfpfcnvrt@fp stored from wreg
  7624  0566  0020               	movlb	0	; select bank0
  7625  0567  00DE               	movwf	vfpfcnvrt@fp
  7626  0568                     l4060:
  7627                           
  7628                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  7629  0568  084E               	movf	vfpfcnvrt@fmt,w
  7630  0569  0086               	movwf	6
  7631  056A  0187               	clrf	7
  7632  056B  3F40               	moviw [0]fsr1
  7633  056C  00D0               	movwf	??_vfpfcnvrt
  7634  056D  3F41               	moviw [1]fsr1
  7635  056E  00D1               	movwf	??_vfpfcnvrt+1
  7636  056F  0850               	movf	??_vfpfcnvrt,w
  7637  0570  0084               	movwf	4
  7638  0571  0851               	movf	??_vfpfcnvrt+1,w
  7639  0572  0085               	movwf	5
  7640  0573  0012               	moviw fsr0++
  7641  0574  3A25               	xorlw	37
  7642  0575  1D03               	btfss	3,2
  7643  0576  2D78               	goto	u2151
  7644  0577  2D79               	goto	u2150
  7645  0578                     u2151:
  7646  0578  2E50               	goto	l4106
  7647  0579                     u2150:
  7648  0579                     l4062:
  7649                           
  7650                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  7651  0579  084E               	movf	vfpfcnvrt@fmt,w
  7652  057A  0086               	movwf	6
  7653  057B  0187               	clrf	7
  7654  057C  3001               	movlw	1
  7655  057D  0781               	addwf	1,f
  7656  057E  3141               	addfsr 1,1
  7657  057F  1803               	skipnc
  7658  0580  0A81               	incf	1,f
  7659  0581                     l4064:
  7660                           
  7661                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  7662  0581  0021               	movlb	1	; select bank1
  7663  0582  01BF               	clrf	_width^(0+128)
  7664  0583  01C0               	clrf	(_width+1)^(0+128)
  7665  0584  01C3               	clrf	_flags^(0+128)
  7666  0585  01C4               	clrf	(_flags+1)^(0+128)
  7667  0586                     l4066:
  7668                           
  7669                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  7670  0586  30FF               	movlw	255
  7671  0587  00C1               	movwf	_prec^(0+128)
  7672  0588  30FF               	movlw	255
  7673  0589  00C2               	movwf	(_prec^(0+128)+1)
  7674  058A                     l4068:
  7675                           
  7676                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  7677  058A  0020               	movlb	0	; select bank0
  7678  058B  084E               	movf	vfpfcnvrt@fmt,w
  7679  058C  0086               	movwf	6
  7680  058D  0187               	clrf	7
  7681  058E  3F40               	moviw [0]fsr1
  7682  058F  00D0               	movwf	??_vfpfcnvrt
  7683  0590  3F41               	moviw [1]fsr1
  7684  0591  00D1               	movwf	??_vfpfcnvrt+1
  7685  0592  0850               	movf	??_vfpfcnvrt,w
  7686  0593  0084               	movwf	4
  7687  0594  0851               	movf	??_vfpfcnvrt+1,w
  7688  0595  0085               	movwf	5
  7689  0596  0012               	moviw fsr0++
  7690  0597  3A63               	xorlw	99
  7691  0598  1D03               	btfss	3,2
  7692  0599  2D9B               	goto	u2161
  7693  059A  2D9C               	goto	u2160
  7694  059B                     u2161:
  7695  059B  2DBE               	goto	l4078
  7696  059C                     u2160:
  7697  059C                     l4070:
  7698                           
  7699                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  7700  059C  084E               	movf	vfpfcnvrt@fmt,w
  7701  059D  0086               	movwf	6
  7702  059E  0187               	clrf	7
  7703  059F  3001               	movlw	1
  7704  05A0  0781               	addwf	1,f
  7705  05A1  3141               	addfsr 1,1
  7706  05A2  1803               	skipnc
  7707  05A3  0A81               	incf	1,f
  7708  05A4                     l4072:
  7709                           
  7710                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7711  05A4  084F               	movf	vfpfcnvrt@ap,w
  7712  05A5  0086               	movwf	6
  7713  05A6  0187               	clrf	7
  7714  05A7  0801               	movf	1,w
  7715  05A8  0084               	movwf	4
  7716  05A9  0185               	clrf	5
  7717  05AA  3002               	movlw	2
  7718  05AB  0781               	addwf	1,f
  7719  05AC  0800               	movf	0,w
  7720  05AD  00D0               	movwf	??_vfpfcnvrt
  7721  05AE  0850               	movf	??_vfpfcnvrt,w
  7722  05AF  00DD               	movwf	vfpfcnvrt@c
  7723  05B0                     l4074:
  7724                           
  7725                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  7726  05B0  085D               	movf	vfpfcnvrt@c,w
  7727  05B1  00D0               	movwf	??_vfpfcnvrt
  7728  05B2  0850               	movf	??_vfpfcnvrt,w
  7729  05B3  00FA               	movwf	ctoa@c
  7730  05B4  085E               	movf	vfpfcnvrt@fp,w
  7731  05B5  3181  210E  3185   	fcall	_ctoa
  7732  05B8  087B               	movf	?_ctoa+1,w
  7733  05B9  0020               	movlb	0	; select bank0
  7734  05BA  00CF               	movwf	?_vfpfcnvrt+1
  7735  05BB  087A               	movf	?_ctoa,w
  7736  05BC  00CE               	movwf	?_vfpfcnvrt
  7737  05BD  2E73               	goto	l1691
  7738  05BE                     l4078:
  7739                           
  7740                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  7741  05BE  084E               	movf	vfpfcnvrt@fmt,w
  7742  05BF  0086               	movwf	6
  7743  05C0  0187               	clrf	7
  7744  05C1  3F40               	moviw [0]fsr1
  7745  05C2  00D0               	movwf	??_vfpfcnvrt
  7746  05C3  3F41               	moviw [1]fsr1
  7747  05C4  00D1               	movwf	??_vfpfcnvrt+1
  7748  05C5  0850               	movf	??_vfpfcnvrt,w
  7749  05C6  0084               	movwf	4
  7750  05C7  0851               	movf	??_vfpfcnvrt+1,w
  7751  05C8  0085               	movwf	5
  7752  05C9  0012               	moviw fsr0++
  7753  05CA  3A64               	xorlw	100
  7754  05CB  1903               	btfsc	3,2
  7755  05CC  2DCE               	goto	u2171
  7756  05CD  2DCF               	goto	u2170
  7757  05CE                     u2171:
  7758  05CE  2DE0               	goto	l4082
  7759  05CF                     u2170:
  7760  05CF                     l4080:
  7761  05CF  084E               	movf	vfpfcnvrt@fmt,w
  7762  05D0  0086               	movwf	6
  7763  05D1  0187               	clrf	7
  7764  05D2  3F40               	moviw [0]fsr1
  7765  05D3  00D0               	movwf	??_vfpfcnvrt
  7766  05D4  3F41               	moviw [1]fsr1
  7767  05D5  00D1               	movwf	??_vfpfcnvrt+1
  7768  05D6  0850               	movf	??_vfpfcnvrt,w
  7769  05D7  0084               	movwf	4
  7770  05D8  0851               	movf	??_vfpfcnvrt+1,w
  7771  05D9  0085               	movwf	5
  7772  05DA  0012               	moviw fsr0++
  7773  05DB  3A69               	xorlw	105
  7774  05DC  1D03               	btfss	3,2
  7775  05DD  2DDF               	goto	u2181
  7776  05DE  2DE0               	goto	u2180
  7777  05DF                     u2181:
  7778  05DF  2E1B               	goto	l4090
  7779  05E0                     u2180:
  7780  05E0                     l4082:
  7781                           
  7782                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  7783  05E0  084E               	movf	vfpfcnvrt@fmt,w
  7784  05E1  0086               	movwf	6
  7785  05E2  0187               	clrf	7
  7786  05E3  3001               	movlw	1
  7787  05E4  0781               	addwf	1,f
  7788  05E5  3141               	addfsr 1,1
  7789  05E6  1803               	skipnc
  7790  05E7  0A81               	incf	1,f
  7791  05E8                     l4084:
  7792                           
  7793                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  7794  05E8  084F               	movf	vfpfcnvrt@ap,w
  7795  05E9  0086               	movwf	6
  7796  05EA  0187               	clrf	7
  7797  05EB  0801               	movf	1,w
  7798  05EC  0084               	movwf	4
  7799  05ED  0185               	clrf	5
  7800  05EE  3002               	movlw	2
  7801  05EF  0781               	addwf	1,f
  7802  05F0  3F00               	moviw [0]fsr0
  7803  05F1  00D0               	movwf	??_vfpfcnvrt
  7804  05F2  3F01               	moviw [1]fsr0
  7805  05F3  00D1               	movwf	??_vfpfcnvrt+1
  7806  05F4  0850               	movf	??_vfpfcnvrt,w
  7807  05F5  00D5               	movwf	vfpfcnvrt@ll
  7808  05F6  0851               	movf	??_vfpfcnvrt+1,w
  7809  05F7  00D6               	movwf	vfpfcnvrt@ll+1
  7810  05F8  0D89               	rlf	9,f
  7811  05F9  3B89               	subwfb	9,f
  7812  05FA  0989               	comf	9,f
  7813  05FB  00D7               	movwf	vfpfcnvrt@ll+2
  7814  05FC  00D8               	movwf	vfpfcnvrt@ll+3
  7815  05FD  00D9               	movwf	vfpfcnvrt@ll+4
  7816  05FE  00DA               	movwf	vfpfcnvrt@ll+5
  7817  05FF  00DB               	movwf	vfpfcnvrt@ll+6
  7818  0600  00DC               	movwf	vfpfcnvrt@ll+7
  7819  0601                     l4086:
  7820                           
  7821                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  7822  0601  0855               	movf	vfpfcnvrt@ll,w
  7823  0602  00B0               	movwf	dtoa@d
  7824  0603  0856               	movf	vfpfcnvrt@ll+1,w
  7825  0604  00B1               	movwf	dtoa@d+1
  7826  0605  0857               	movf	vfpfcnvrt@ll+2,w
  7827  0606  00B2               	movwf	dtoa@d+2
  7828  0607  0858               	movf	vfpfcnvrt@ll+3,w
  7829  0608  00B3               	movwf	dtoa@d+3
  7830  0609  0859               	movf	vfpfcnvrt@ll+4,w
  7831  060A  00B4               	movwf	dtoa@d+4
  7832  060B  085A               	movf	vfpfcnvrt@ll+5,w
  7833  060C  00B5               	movwf	dtoa@d+5
  7834  060D  085B               	movf	vfpfcnvrt@ll+6,w
  7835  060E  00B6               	movwf	dtoa@d+6
  7836  060F  085C               	movf	vfpfcnvrt@ll+7,w
  7837  0610  00B7               	movwf	dtoa@d+7
  7838  0611  085E               	movf	vfpfcnvrt@fp,w
  7839  0612  3186  2674  3185   	fcall	_dtoa
  7840  0615  0020               	movlb	0	; select bank0
  7841  0616  0831               	movf	?_dtoa+1,w
  7842  0617  00CF               	movwf	?_vfpfcnvrt+1
  7843  0618  0830               	movf	?_dtoa,w
  7844  0619  00CE               	movwf	?_vfpfcnvrt
  7845  061A  2E73               	goto	l1691
  7846  061B                     l4090:
  7847                           
  7848                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  7849  061B  084E               	movf	vfpfcnvrt@fmt,w
  7850  061C  0086               	movwf	6
  7851  061D  0187               	clrf	7
  7852  061E  3F40               	moviw [0]fsr1
  7853  061F  00D0               	movwf	??_vfpfcnvrt
  7854  0620  3F41               	moviw [1]fsr1
  7855  0621  00D1               	movwf	??_vfpfcnvrt+1
  7856  0622  0850               	movf	??_vfpfcnvrt,w
  7857  0623  0084               	movwf	4
  7858  0624  0851               	movf	??_vfpfcnvrt+1,w
  7859  0625  0085               	movwf	5
  7860  0626  0012               	moviw fsr0++
  7861  0627  3A25               	xorlw	37
  7862  0628  1D03               	btfss	3,2
  7863  0629  2E2B               	goto	u2191
  7864  062A  2E2C               	goto	u2190
  7865  062B                     u2191:
  7866  062B  2E45               	goto	l4100
  7867  062C                     u2190:
  7868  062C                     l4092:
  7869                           
  7870                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  7871  062C  084E               	movf	vfpfcnvrt@fmt,w
  7872  062D  0086               	movwf	6
  7873  062E  0187               	clrf	7
  7874  062F  3001               	movlw	1
  7875  0630  0781               	addwf	1,f
  7876  0631  3141               	addfsr 1,1
  7877  0632  1803               	skipnc
  7878  0633  0A81               	incf	1,f
  7879  0634                     l4094:
  7880                           
  7881                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  7882  0634  3025               	movlw	37
  7883  0635  00F2               	movwf	fputc@c
  7884  0636  3000               	movlw	0
  7885  0637  00F3               	movwf	fputc@c+1
  7886  0638  085E               	movf	vfpfcnvrt@fp,w
  7887  0639  00D0               	movwf	??_vfpfcnvrt
  7888  063A  0850               	movf	??_vfpfcnvrt,w
  7889  063B  00F4               	movwf	fputc@fp
  7890  063C  318E  26A5  3185   	fcall	_fputc
  7891  063F                     l4096:
  7892                           
  7893                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  7894  063F  3001               	movlw	1
  7895  0640  0020               	movlb	0	; select bank0
  7896  0641  00CE               	movwf	?_vfpfcnvrt
  7897  0642  3000               	movlw	0
  7898  0643  00CF               	movwf	?_vfpfcnvrt+1
  7899  0644  2E73               	goto	l1691
  7900  0645                     l4100:
  7901                           
  7902                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  7903  0645  084E               	movf	vfpfcnvrt@fmt,w
  7904  0646  0086               	movwf	6
  7905  0647  0187               	clrf	7
  7906  0648  3001               	movlw	1
  7907  0649  0781               	addwf	1,f
  7908  064A  3141               	addfsr 1,1
  7909  064B  1803               	skipnc
  7910  064C  0A81               	incf	1,f
  7911  064D                     l4102:
  7912                           
  7913                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  7914  064D  01CE               	clrf	?_vfpfcnvrt
  7915  064E  01CF               	clrf	?_vfpfcnvrt+1
  7916  064F  2E73               	goto	l1691
  7917  0650                     l4106:
  7918                           
  7919                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  7920  0650  084E               	movf	vfpfcnvrt@fmt,w
  7921  0651  0086               	movwf	6
  7922  0652  0187               	clrf	7
  7923  0653  3F40               	moviw [0]fsr1
  7924  0654  00D0               	movwf	??_vfpfcnvrt
  7925  0655  3F41               	moviw [1]fsr1
  7926  0656  00D1               	movwf	??_vfpfcnvrt+1
  7927  0657  0850               	movf	??_vfpfcnvrt,w
  7928  0658  0084               	movwf	4
  7929  0659  0851               	movf	??_vfpfcnvrt+1,w
  7930  065A  0085               	movwf	5
  7931  065B  0800               	movf	0,w	;code access
  7932  065C  00D2               	movwf	??_vfpfcnvrt+2
  7933  065D  01D3               	clrf	??_vfpfcnvrt+3
  7934  065E  0852               	movf	??_vfpfcnvrt+2,w
  7935  065F  00F2               	movwf	fputc@c
  7936  0660  0853               	movf	??_vfpfcnvrt+3,w
  7937  0661  00F3               	movwf	fputc@c+1
  7938  0662  085E               	movf	vfpfcnvrt@fp,w
  7939  0663  00D4               	movwf	??_vfpfcnvrt+4
  7940  0664  0854               	movf	??_vfpfcnvrt+4,w
  7941  0665  00F4               	movwf	fputc@fp
  7942  0666  318E  26A5  3185   	fcall	_fputc
  7943  0669                     l4108:
  7944                           
  7945                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  7946  0669  0020               	movlb	0	; select bank0
  7947  066A  084E               	movf	vfpfcnvrt@fmt,w
  7948  066B  0086               	movwf	6
  7949  066C  0187               	clrf	7
  7950  066D  3001               	movlw	1
  7951  066E  0781               	addwf	1,f
  7952  066F  3141               	addfsr 1,1
  7953  0670  1803               	skipnc
  7954  0671  0A81               	incf	1,f
  7955  0672  2E3F               	goto	l4096
  7956  0673                     l1691:
  7957  0673  0008               	return
  7958  0674                     __end_of_vfpfcnvrt:
  7959                           
  7960                           	psect	text4
  7961  0674                     __ptext4:	
  7962 ;; *************** function _dtoa *****************
  7963 ;; Defined at:
  7964 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  7965 ;; Parameters:    Size  Location     Type
  7966 ;;  fp              1    wreg     PTR struct _IO_FILE
  7967 ;;		 -> sprintf@f(10), 
  7968 ;;  d               8   16[BANK0 ] long long 
  7969 ;; Auto vars:     Size  Location     Type
  7970 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  7971 ;;		 -> sprintf@f(10), 
  7972 ;;  n               8   36[BANK0 ] long long 
  7973 ;;  i               2   44[BANK0 ] int 
  7974 ;;  s               2   34[BANK0 ] int 
  7975 ;;  w               2   32[BANK0 ] int 
  7976 ;;  p               2   30[BANK0 ] int 
  7977 ;; Return value:  Size  Location     Type
  7978 ;;                  2   16[BANK0 ] int 
  7979 ;; Registers used:
  7980 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7981 ;; Tracked objects:
  7982 ;;		On entry : 0/0
  7983 ;;		On exit  : 0/0
  7984 ;;		Unchanged: 0/0
  7985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7986 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7987 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7988 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7989 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7990 ;;Total ram usage:       30 bytes
  7991 ;; Hardware stack levels used: 1
  7992 ;; Hardware stack levels required when called: 5
  7993 ;; This function calls:
  7994 ;;		___aodiv
  7995 ;;		___aomod
  7996 ;;		_abs
  7997 ;;		_pad
  7998 ;; This function is called by:
  7999 ;;		_vfpfcnvrt
  8000 ;; This function uses a non-reentrant model
  8001 ;;
  8002                           
  8003  0674                     _dtoa:	
  8004                           ;psect for function _dtoa
  8005                           
  8006                           
  8007                           ;incstack = 0
  8008                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8009                           ;dtoa@fp stored from wreg
  8010  0674  0020               	movlb	0	; select bank0
  8011  0675  00BD               	movwf	dtoa@fp
  8012  0676                     l3922:
  8013                           
  8014                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  8015  0676  0830               	movf	dtoa@d,w
  8016  0677  00C4               	movwf	dtoa@n
  8017  0678  0831               	movf	dtoa@d+1,w
  8018  0679  00C5               	movwf	dtoa@n+1
  8019  067A  0832               	movf	dtoa@d+2,w
  8020  067B  00C6               	movwf	dtoa@n+2
  8021  067C  0833               	movf	dtoa@d+3,w
  8022  067D  00C7               	movwf	dtoa@n+3
  8023  067E  0834               	movf	dtoa@d+4,w
  8024  067F  00C8               	movwf	dtoa@n+4
  8025  0680  0835               	movf	dtoa@d+5,w
  8026  0681  00C9               	movwf	dtoa@n+5
  8027  0682  0836               	movf	dtoa@d+6,w
  8028  0683  00CA               	movwf	dtoa@n+6
  8029  0684  0837               	movf	dtoa@d+7,w
  8030  0685  00CB               	movwf	dtoa@n+7
  8031  0686                     l3924:
  8032                           
  8033                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  8034  0686  3044               	movlw	low dtoa@n
  8035  0687  0086               	movwf	6
  8036  0688  3000               	movlw	high dtoa@n
  8037  0689  0087               	movwf	7
  8038  068A  3F47               	moviw [7]fsr1
  8039  068B  00B8               	movwf	??_dtoa
  8040  068C  1BB8               	btfsc	??_dtoa,7
  8041  068D  2E8F               	goto	u1891
  8042  068E  2E91               	goto	u1890
  8043  068F                     u1891:
  8044  068F  3001               	movlw	1
  8045  0690  2E92               	goto	u1900
  8046  0691                     u1890:
  8047  0691  3000               	movlw	0
  8048  0692                     u1900:
  8049  0692  0020               	movlb	0	; select bank0
  8050  0693  00B9               	movwf	??_dtoa+1
  8051  0694  01BA               	clrf	??_dtoa+2
  8052  0695  0839               	movf	??_dtoa+1,w
  8053  0696  00C2               	movwf	dtoa@s
  8054  0697  083A               	movf	??_dtoa+2,w
  8055  0698  00C3               	movwf	dtoa@s+1
  8056  0699                     l3926:
  8057                           
  8058                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  8059  0699  0842               	movf	dtoa@s,w
  8060  069A  0443               	iorwf	dtoa@s+1,w
  8061  069B  1903               	btfsc	3,2
  8062  069C  2E9E               	goto	u1911
  8063  069D  2E9F               	goto	u1910
  8064  069E                     u1911:
  8065  069E  2EBD               	goto	l1663
  8066  069F                     u1910:
  8067  069F                     l3928:
  8068                           
  8069                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  8070  069F  09C4               	comf	dtoa@n,f
  8071  06A0  09C5               	comf	dtoa@n+1,f
  8072  06A1  09C6               	comf	dtoa@n+2,f
  8073  06A2  09C7               	comf	dtoa@n+3,f
  8074  06A3  09C8               	comf	dtoa@n+4,f
  8075  06A4  09C9               	comf	dtoa@n+5,f
  8076  06A5  09CA               	comf	dtoa@n+6,f
  8077  06A6  09CB               	comf	dtoa@n+7,f
  8078  06A7  0AC4               	incf	dtoa@n,f
  8079  06A8  1D03               	skipz
  8080  06A9  2EBD               	goto	u192lld
  8081  06AA  0AC5               	incf	dtoa@n+1,f
  8082  06AB  1D03               	skipz
  8083  06AC  2EBD               	goto	u192lld
  8084  06AD  0AC6               	incf	dtoa@n+2,f
  8085  06AE  1D03               	skipz
  8086  06AF  2EBD               	goto	u192lld
  8087  06B0  0AC7               	incf	dtoa@n+3,f
  8088  06B1  1D03               	skipz
  8089  06B2  2EBD               	goto	u192lld
  8090  06B3  0AC8               	incf	dtoa@n+4,f
  8091  06B4  1D03               	skipz
  8092  06B5  2EBD               	goto	u192lld
  8093  06B6  0AC9               	incf	dtoa@n+5,f
  8094  06B7  1D03               	skipz
  8095  06B8  2EBD               	goto	u192lld
  8096  06B9  0ACA               	incf	dtoa@n+6,f
  8097  06BA  1D03               	skipz
  8098  06BB  2EBD               	goto	u192lld
  8099  06BC  0ACB               	incf	dtoa@n+7,f
  8100  06BD                     u192lld:
  8101  06BD                     l1663:	
  8102                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 297:     }
  8103                           
  8104                           
  8105                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  8106  06BD  0021               	movlb	1	; select bank1
  8107  06BE  1BC2               	btfsc	(_prec+1)^(0+128),7
  8108  06BF  2EC1               	goto	u1931
  8109  06C0  2EC2               	goto	u1930
  8110  06C1                     u1931:
  8111  06C1  2EC6               	goto	l1664
  8112  06C2                     u1930:
  8113  06C2                     l3930:
  8114                           
  8115                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  8116  06C2  30FD               	movlw	253
  8117  06C3  05C3               	andwf	_flags^(0+128),f
  8118  06C4  30FF               	movlw	255
  8119  06C5  05C4               	andwf	(_flags+1)^(0+128),f
  8120  06C6                     l1664:	
  8121                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 302:     }
  8122                           
  8123                           
  8124                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  8125  06C6  0842               	movf	(_prec+1)^(0+128),w
  8126  06C7  3A80               	xorlw	128
  8127  06C8  0020               	movlb	0	; select bank0
  8128  06C9  00B8               	movwf	??_dtoa
  8129  06CA  3080               	movlw	128
  8130  06CB  0238               	subwf	??_dtoa,w
  8131  06CC  1D03               	skipz
  8132  06CD  2ED1               	goto	u1945
  8133  06CE  3001               	movlw	1
  8134  06CF  0021               	movlb	1	; select bank1
  8135  06D0  0241               	subwf	_prec^(0+128),w
  8136  06D1                     u1945:
  8137  06D1  1803               	skipnc
  8138  06D2  2ED4               	goto	u1941
  8139  06D3  2ED5               	goto	u1940
  8140  06D4                     u1941:
  8141  06D4  2EDB               	goto	l3934
  8142  06D5                     u1940:
  8143  06D5                     l3932:
  8144  06D5  3001               	movlw	1
  8145  06D6  0020               	movlb	0	; select bank0
  8146  06D7  00BE               	movwf	dtoa@p
  8147  06D8  3000               	movlw	0
  8148  06D9  00BF               	movwf	dtoa@p+1
  8149  06DA  2EE3               	goto	l1668
  8150  06DB                     l3934:
  8151  06DB  0021               	movlb	1	; select bank1
  8152  06DC  0842               	movf	(_prec+1)^(0+128),w
  8153  06DD  0020               	movlb	0	; select bank0
  8154  06DE  00BF               	movwf	dtoa@p+1
  8155  06DF  0021               	movlb	1	; select bank1
  8156  06E0  0841               	movf	_prec^(0+128),w
  8157  06E1  0020               	movlb	0	; select bank0
  8158  06E2  00BE               	movwf	dtoa@p
  8159  06E3                     l1668:
  8160                           
  8161                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  8162  06E3  0021               	movlb	1	; select bank1
  8163  06E4  0840               	movf	(_width+1)^(0+128),w
  8164  06E5  0020               	movlb	0	; select bank0
  8165  06E6  00C1               	movwf	dtoa@w+1
  8166  06E7  0021               	movlb	1	; select bank1
  8167  06E8  083F               	movf	_width^(0+128),w
  8168  06E9  0020               	movlb	0	; select bank0
  8169  06EA  00C0               	movwf	dtoa@w
  8170  06EB                     l3936:
  8171                           
  8172                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  8173  06EB  0842               	movf	dtoa@s,w
  8174  06EC  0443               	iorwf	dtoa@s+1,w
  8175  06ED  1D03               	btfss	3,2
  8176  06EE  2EF0               	goto	u1951
  8177  06EF  2EF1               	goto	u1950
  8178  06F0                     u1951:
  8179  06F0  2EF6               	goto	l3940
  8180  06F1                     u1950:
  8181  06F1                     l3938:
  8182  06F1  0021               	movlb	1	; select bank1
  8183  06F2  1D43               	btfss	_flags^(0+128),2
  8184  06F3  2EF5               	goto	u1961
  8185  06F4  2EF6               	goto	u1960
  8186  06F5                     u1961:
  8187  06F5  2EFB               	goto	l1669
  8188  06F6                     u1960:
  8189  06F6                     l3940:
  8190                           
  8191                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 306:         --w;
  8192  06F6  30FF               	movlw	255
  8193  06F7  0020               	movlb	0	; select bank0
  8194  06F8  07C0               	addwf	dtoa@w,f
  8195  06F9  30FF               	movlw	255
  8196  06FA  3DC1               	addwfc	dtoa@w+1,f
  8197  06FB                     l1669:	
  8198                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 307:     }
  8199                           
  8200                           
  8201                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  8202  06FB  301F               	movlw	31
  8203  06FC  0020               	movlb	0	; select bank0
  8204  06FD  00CC               	movwf	dtoa@i
  8205  06FE  3000               	movlw	0
  8206  06FF  00CD               	movwf	dtoa@i+1
  8207  0700                     l3942:
  8208                           
  8209                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  8210  0700  0022               	movlb	2	; select bank2
  8211  0701  01BF               	clrf	(_dbuf^(0+256)+31)
  8212                           
  8213                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8214  0702  2F6C               	goto	l1672
  8215  0703                     l3944:
  8216                           
  8217                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 313:         --i;
  8218  0703  30FF               	movlw	255
  8219  0704  0020               	movlb	0	; select bank0
  8220  0705  07CC               	addwf	dtoa@i,f
  8221  0706  30FF               	movlw	255
  8222  0707  3DCD               	addwfc	dtoa@i+1,f
  8223  0708                     l3946:
  8224                           
  8225                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  8226  0708  300A               	movlw	10
  8227  0709  00A0               	movwf	___aomod@divisor
  8228  070A  01A1               	clrf	___aomod@divisor+1
  8229  070B  01A2               	clrf	___aomod@divisor+2
  8230  070C  01A3               	clrf	___aomod@divisor+3
  8231  070D  01A4               	clrf	___aomod@divisor+4
  8232  070E  01A5               	clrf	___aomod@divisor+5
  8233  070F  01A6               	clrf	___aomod@divisor+6
  8234  0710  01A7               	clrf	___aomod@divisor+7
  8235  0711  0844               	movf	dtoa@n,w
  8236  0712  00A8               	movwf	___aomod@dividend
  8237  0713  0845               	movf	dtoa@n+1,w
  8238  0714  00A9               	movwf	___aomod@dividend+1
  8239  0715  0846               	movf	dtoa@n+2,w
  8240  0716  00AA               	movwf	___aomod@dividend+2
  8241  0717  0847               	movf	dtoa@n+3,w
  8242  0718  00AB               	movwf	___aomod@dividend+3
  8243  0719  0848               	movf	dtoa@n+4,w
  8244  071A  00AC               	movwf	___aomod@dividend+4
  8245  071B  0849               	movf	dtoa@n+5,w
  8246  071C  00AD               	movwf	___aomod@dividend+5
  8247  071D  084A               	movf	dtoa@n+6,w
  8248  071E  00AE               	movwf	___aomod@dividend+6
  8249  071F  084B               	movf	dtoa@n+7,w
  8250  0720  00AF               	movwf	___aomod@dividend+7
  8251  0721  3183  237B  3186   	fcall	___aomod
  8252  0724  0020               	movlb	0	; select bank0
  8253  0725  0821               	movf	?___aomod+1,w
  8254  0726  00F4               	movwf	abs@a+1
  8255  0727  0820               	movf	?___aomod,w
  8256  0728  00F3               	movwf	abs@a
  8257  0729  318A  22D2  3186   	fcall	_abs
  8258  072C  0873               	movf	?_abs,w
  8259  072D  3E30               	addlw	48
  8260  072E  0020               	movlb	0	; select bank0
  8261  072F  00B8               	movwf	??_dtoa
  8262  0730  084C               	movf	dtoa@i,w
  8263  0731  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8264  0732  0086               	movwf	6
  8265  0733  3001               	movlw	1	; select bank2/3
  8266  0734  0087               	movwf	7
  8267  0735  0838               	movf	??_dtoa,w
  8268  0736  0081               	movwf	1
  8269  0737                     l3948:
  8270                           
  8271                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 315:         --p;
  8272  0737  30FF               	movlw	255
  8273  0738  07BE               	addwf	dtoa@p,f
  8274  0739  30FF               	movlw	255
  8275  073A  3DBF               	addwfc	dtoa@p+1,f
  8276  073B                     l3950:
  8277                           
  8278                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 316:         --w;
  8279  073B  30FF               	movlw	255
  8280  073C  07C0               	addwf	dtoa@w,f
  8281  073D  30FF               	movlw	255
  8282  073E  3DC1               	addwfc	dtoa@w+1,f
  8283  073F                     l3952:
  8284                           
  8285                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  8286  073F  300A               	movlw	10
  8287  0740  00A0               	movwf	___aodiv@divisor
  8288  0741  01A1               	clrf	___aodiv@divisor+1
  8289  0742  01A2               	clrf	___aodiv@divisor+2
  8290  0743  01A3               	clrf	___aodiv@divisor+3
  8291  0744  01A4               	clrf	___aodiv@divisor+4
  8292  0745  01A5               	clrf	___aodiv@divisor+5
  8293  0746  01A6               	clrf	___aodiv@divisor+6
  8294  0747  01A7               	clrf	___aodiv@divisor+7
  8295  0748  0844               	movf	dtoa@n,w
  8296  0749  00A8               	movwf	___aodiv@dividend
  8297  074A  0845               	movf	dtoa@n+1,w
  8298  074B  00A9               	movwf	___aodiv@dividend+1
  8299  074C  0846               	movf	dtoa@n+2,w
  8300  074D  00AA               	movwf	___aodiv@dividend+2
  8301  074E  0847               	movf	dtoa@n+3,w
  8302  074F  00AB               	movwf	___aodiv@dividend+3
  8303  0750  0848               	movf	dtoa@n+4,w
  8304  0751  00AC               	movwf	___aodiv@dividend+4
  8305  0752  0849               	movf	dtoa@n+5,w
  8306  0753  00AD               	movwf	___aodiv@dividend+5
  8307  0754  084A               	movf	dtoa@n+6,w
  8308  0755  00AE               	movwf	___aodiv@dividend+6
  8309  0756  084B               	movf	dtoa@n+7,w
  8310  0757  00AF               	movwf	___aodiv@dividend+7
  8311  0758  3184  2465  3186   	fcall	___aodiv
  8312  075B  0020               	movlb	0	; select bank0
  8313  075C  0820               	movf	?___aodiv,w
  8314  075D  00C4               	movwf	dtoa@n
  8315  075E  0821               	movf	?___aodiv+1,w
  8316  075F  00C5               	movwf	dtoa@n+1
  8317  0760  0822               	movf	?___aodiv+2,w
  8318  0761  00C6               	movwf	dtoa@n+2
  8319  0762  0823               	movf	?___aodiv+3,w
  8320  0763  00C7               	movwf	dtoa@n+3
  8321  0764  0824               	movf	?___aodiv+4,w
  8322  0765  00C8               	movwf	dtoa@n+4
  8323  0766  0825               	movf	?___aodiv+5,w
  8324  0767  00C9               	movwf	dtoa@n+5
  8325  0768  0826               	movf	?___aodiv+6,w
  8326  0769  00CA               	movwf	dtoa@n+6
  8327  076A  0827               	movf	?___aodiv+7,w
  8328  076B  00CB               	movwf	dtoa@n+7
  8329  076C                     l1672:	
  8330                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 318:     }
  8331                           
  8332                           
  8333                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8334  076C  0020               	movlb	0	; select bank0
  8335  076D  084D               	movf	dtoa@i+1,w
  8336  076E  3A80               	xorlw	128
  8337  076F  00B8               	movwf	??_dtoa
  8338  0770  3080               	movlw	128
  8339  0771  0238               	subwf	??_dtoa,w
  8340  0772  1D03               	skipz
  8341  0773  2F76               	goto	u1975
  8342  0774  3001               	movlw	1
  8343  0775  024C               	subwf	dtoa@i,w
  8344  0776                     u1975:
  8345  0776  1C03               	skipc
  8346  0777  2F79               	goto	u1971
  8347  0778  2F7A               	goto	u1970
  8348  0779                     u1971:
  8349  0779  2FA7               	goto	l3962
  8350  077A                     u1970:
  8351  077A                     l3954:
  8352  077A  0020               	movlb	0	; select bank0
  8353  077B  0844               	movf	dtoa@n,w
  8354  077C  0445               	iorwf	dtoa@n+1,w
  8355  077D  0446               	iorwf	dtoa@n+2,w
  8356  077E  0447               	iorwf	dtoa@n+3,w
  8357  077F  0448               	iorwf	dtoa@n+4,w
  8358  0780  0449               	iorwf	dtoa@n+5,w
  8359  0781  044A               	iorwf	dtoa@n+6,w
  8360  0782  044B               	iorwf	dtoa@n+7,w
  8361  0783  1D03               	skipz
  8362  0784  2F86               	goto	u1981
  8363  0785  2F87               	goto	u1980
  8364  0786                     u1981:
  8365  0786  2F03               	goto	l3944
  8366  0787                     u1980:
  8367  0787                     l3956:
  8368  0787  083F               	movf	dtoa@p+1,w
  8369  0788  3A80               	xorlw	128
  8370  0789  00B8               	movwf	??_dtoa
  8371  078A  3080               	movlw	128
  8372  078B  0238               	subwf	??_dtoa,w
  8373  078C  1D03               	skipz
  8374  078D  2F90               	goto	u1995
  8375  078E  3001               	movlw	1
  8376  078F  023E               	subwf	dtoa@p,w
  8377  0790                     u1995:
  8378  0790  1803               	skipnc
  8379  0791  2F93               	goto	u1991
  8380  0792  2F94               	goto	u1990
  8381  0793                     u1991:
  8382  0793  2F03               	goto	l3944
  8383  0794                     u1990:
  8384  0794                     l3958:
  8385  0794  0020               	movlb	0	; select bank0
  8386  0795  0841               	movf	dtoa@w+1,w
  8387  0796  3A80               	xorlw	128
  8388  0797  00B8               	movwf	??_dtoa
  8389  0798  3080               	movlw	128
  8390  0799  0238               	subwf	??_dtoa,w
  8391  079A  1D03               	skipz
  8392  079B  2F9E               	goto	u2005
  8393  079C  3001               	movlw	1
  8394  079D  0240               	subwf	dtoa@w,w
  8395  079E                     u2005:
  8396  079E  1C03               	skipc
  8397  079F  2FA1               	goto	u2001
  8398  07A0  2FA2               	goto	u2000
  8399  07A1                     u2001:
  8400  07A1  2FA7               	goto	l3962
  8401  07A2                     u2000:
  8402  07A2                     l3960:
  8403  07A2  0021               	movlb	1	; select bank1
  8404  07A3  18C3               	btfsc	_flags^(0+128),1
  8405  07A4  2FA6               	goto	u2011
  8406  07A5  2FA7               	goto	u2010
  8407  07A6                     u2011:
  8408  07A6  2F03               	goto	l3944
  8409  07A7                     u2010:
  8410  07A7                     l3962:
  8411                           
  8412                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  8413  07A7  0020               	movlb	0	; select bank0
  8414  07A8  0842               	movf	dtoa@s,w
  8415  07A9  0443               	iorwf	dtoa@s+1,w
  8416  07AA  1D03               	btfss	3,2
  8417  07AB  2FAD               	goto	u2021
  8418  07AC  2FAE               	goto	u2020
  8419  07AD                     u2021:
  8420  07AD  2FB3               	goto	l3966
  8421  07AE                     u2020:
  8422  07AE                     l3964:
  8423  07AE  0021               	movlb	1	; select bank1
  8424  07AF  1D43               	btfss	_flags^(0+128),2
  8425  07B0  2FB2               	goto	u2031
  8426  07B1  2FB3               	goto	u2030
  8427  07B2                     u2031:
  8428  07B2  2FD0               	goto	l3976
  8429  07B3                     u2030:
  8430  07B3                     l3966:
  8431                           
  8432                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 322:         --i;
  8433  07B3  30FF               	movlw	255
  8434  07B4  0020               	movlb	0	; select bank0
  8435  07B5  07CC               	addwf	dtoa@i,f
  8436  07B6  30FF               	movlw	255
  8437  07B7  3DCD               	addwfc	dtoa@i+1,f
  8438  07B8                     l3968:
  8439                           
  8440                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  8441  07B8  0842               	movf	dtoa@s,w
  8442  07B9  0443               	iorwf	dtoa@s+1,w
  8443  07BA  1D03               	btfss	3,2
  8444  07BB  2FBD               	goto	u2041
  8445  07BC  2FBE               	goto	u2040
  8446  07BD                     u2041:
  8447  07BD  2FC3               	goto	l3972
  8448  07BE                     u2040:
  8449  07BE                     l3970:
  8450  07BE  302B               	movlw	43
  8451  07BF  00BB               	movwf	_dtoa$2111
  8452  07C0  3000               	movlw	0
  8453  07C1  00BC               	movwf	_dtoa$2111+1
  8454  07C2  2FC7               	goto	l3974
  8455  07C3                     l3972:
  8456  07C3  302D               	movlw	45
  8457  07C4  00BB               	movwf	_dtoa$2111
  8458  07C5  3000               	movlw	0
  8459  07C6  00BC               	movwf	_dtoa$2111+1
  8460  07C7                     l3974:
  8461  07C7  083B               	movf	_dtoa$2111,w
  8462  07C8  00B8               	movwf	??_dtoa
  8463  07C9  084C               	movf	dtoa@i,w
  8464  07CA  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8465  07CB  0086               	movwf	6
  8466  07CC  3001               	movlw	1	; select bank2/3
  8467  07CD  0087               	movwf	7
  8468  07CE  0838               	movf	??_dtoa,w
  8469  07CF  0081               	movwf	1
  8470  07D0                     l3976:
  8471                           
  8472                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  8473  07D0  0020               	movlb	0	; select bank0
  8474  07D1  084C               	movf	dtoa@i,w
  8475  07D2  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8476  07D3  00B8               	movwf	??_dtoa
  8477  07D4  0838               	movf	??_dtoa,w
  8478  07D5  00A4               	movwf	pad@buf
  8479  07D6  0841               	movf	dtoa@w+1,w
  8480  07D7  00A6               	movwf	pad@p+1
  8481  07D8  0840               	movf	dtoa@w,w
  8482  07D9  00A5               	movwf	pad@p
  8483  07DA  083D               	movf	dtoa@fp,w
  8484  07DB  318F  274D  3186   	fcall	_pad
  8485  07DE  0020               	movlb	0	; select bank0
  8486  07DF  0825               	movf	?_pad+1,w
  8487  07E0  00B1               	movwf	?_dtoa+1
  8488  07E1  0824               	movf	?_pad,w
  8489  07E2  00B0               	movwf	?_dtoa
  8490  07E3                     l1686:
  8491  07E3  0008               	return
  8492  07E4                     __end_of_dtoa:
  8493                           
  8494                           	psect	text5
  8495  0F4D                     __ptext5:	
  8496 ;; *************** function _pad *****************
  8497 ;; Defined at:
  8498 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  8499 ;; Parameters:    Size  Location     Type
  8500 ;;  fp              1    wreg     PTR struct _IO_FILE
  8501 ;;		 -> sprintf@f(10), 
  8502 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  8503 ;;		 -> dbuf(32), 
  8504 ;;  p               2    5[BANK0 ] int 
  8505 ;; Auto vars:     Size  Location     Type
  8506 ;;  fp              1   12[BANK0 ] PTR struct _IO_FILE
  8507 ;;		 -> sprintf@f(10), 
  8508 ;;  w               2   10[BANK0 ] int 
  8509 ;;  i               2    8[BANK0 ] int 
  8510 ;; Return value:  Size  Location     Type
  8511 ;;                  2    4[BANK0 ] int 
  8512 ;; Registers used:
  8513 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8514 ;; Tracked objects:
  8515 ;;		On entry : 0/0
  8516 ;;		On exit  : 0/0
  8517 ;;		Unchanged: 0/0
  8518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8519 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8520 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8521 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8522 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8523 ;;Total ram usage:        9 bytes
  8524 ;; Hardware stack levels used: 1
  8525 ;; Hardware stack levels required when called: 4
  8526 ;; This function calls:
  8527 ;;		_fputc
  8528 ;;		_fputs
  8529 ;;		_strlen
  8530 ;; This function is called by:
  8531 ;;		_dtoa
  8532 ;; This function uses a non-reentrant model
  8533 ;;
  8534                           
  8535  0F4D                     _pad:	
  8536                           ;psect for function _pad
  8537                           
  8538                           
  8539                           ;incstack = 0
  8540                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8541                           ;pad@fp stored from wreg
  8542  0F4D  0020               	movlb	0	; select bank0
  8543  0F4E  00AC               	movwf	pad@fp
  8544  0F4F                     l3866:
  8545                           
  8546                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  8547  0F4F  0021               	movlb	1	; select bank1
  8548  0F50  1C43               	btfss	_flags^(0+128),0
  8549  0F51  2F53               	goto	u1781
  8550  0F52  2F54               	goto	u1780
  8551  0F53                     u1781:
  8552  0F53  2F5D               	goto	l3870
  8553  0F54                     u1780:
  8554  0F54                     l3868:
  8555                           
  8556                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  8557  0F54  0020               	movlb	0	; select bank0
  8558  0F55  082C               	movf	pad@fp,w
  8559  0F56  00A7               	movwf	??_pad
  8560  0F57  0827               	movf	??_pad,w
  8561  0F58  00FA               	movwf	fputs@fp
  8562  0F59  0824               	movf	pad@buf,w
  8563  0F5A  318B  23F7  318F   	fcall	_fputs
  8564  0F5D                     l3870:
  8565                           
  8566                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  8567  0F5D  0020               	movlb	0	; select bank0
  8568  0F5E  1BA6               	btfsc	pad@p+1,7
  8569  0F5F  2F61               	goto	u1791
  8570  0F60  2F62               	goto	u1790
  8571  0F61                     u1791:
  8572  0F61  2F67               	goto	l3874
  8573  0F62                     u1790:
  8574  0F62                     l3872:
  8575  0F62  0826               	movf	pad@p+1,w
  8576  0F63  00AB               	movwf	pad@w+1
  8577  0F64  0825               	movf	pad@p,w
  8578  0F65  00AA               	movwf	pad@w
  8579  0F66  2F69               	goto	l1639
  8580  0F67                     l3874:
  8581  0F67  01AA               	clrf	pad@w
  8582  0F68  01AB               	clrf	pad@w+1
  8583  0F69                     l1639:
  8584                           
  8585                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  8586  0F69  01A8               	clrf	pad@i
  8587  0F6A  01A9               	clrf	pad@i+1
  8588                           
  8589                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8590  0F6B  2F7D               	goto	l3880
  8591  0F6C                     l3876:
  8592                           
  8593                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  8594  0F6C  3020               	movlw	32
  8595  0F6D  00F2               	movwf	fputc@c
  8596  0F6E  3000               	movlw	0
  8597  0F6F  00F3               	movwf	fputc@c+1
  8598  0F70  0020               	movlb	0	; select bank0
  8599  0F71  082C               	movf	pad@fp,w
  8600  0F72  00A7               	movwf	??_pad
  8601  0F73  0827               	movf	??_pad,w
  8602  0F74  00F4               	movwf	fputc@fp
  8603  0F75  318E  26A5  318F   	fcall	_fputc
  8604  0F78                     l3878:
  8605                           
  8606                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  8607  0F78  3001               	movlw	1
  8608  0F79  0020               	movlb	0	; select bank0
  8609  0F7A  07A8               	addwf	pad@i,f
  8610  0F7B  3000               	movlw	0
  8611  0F7C  3DA9               	addwfc	pad@i+1,f
  8612  0F7D                     l3880:
  8613                           
  8614                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8615  0F7D  0829               	movf	pad@i+1,w
  8616  0F7E  3A80               	xorlw	128
  8617  0F7F  00A7               	movwf	??_pad
  8618  0F80  082B               	movf	pad@w+1,w
  8619  0F81  3A80               	xorlw	128
  8620  0F82  0227               	subwf	??_pad,w
  8621  0F83  1D03               	skipz
  8622  0F84  2F87               	goto	u1805
  8623  0F85  082A               	movf	pad@w,w
  8624  0F86  0228               	subwf	pad@i,w
  8625  0F87                     u1805:
  8626  0F87  1C03               	skipc
  8627  0F88  2F8A               	goto	u1801
  8628  0F89  2F8B               	goto	u1800
  8629  0F8A                     u1801:
  8630  0F8A  2F6C               	goto	l3876
  8631  0F8B                     u1800:
  8632  0F8B                     l1642:
  8633                           
  8634                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  8635  0F8B  0021               	movlb	1	; select bank1
  8636  0F8C  1843               	btfsc	_flags^(0+128),0
  8637  0F8D  2F8F               	goto	u1811
  8638  0F8E  2F90               	goto	u1810
  8639  0F8F                     u1811:
  8640  0F8F  2F99               	goto	l3884
  8641  0F90                     u1810:
  8642  0F90                     l3882:
  8643                           
  8644                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  8645  0F90  0020               	movlb	0	; select bank0
  8646  0F91  082C               	movf	pad@fp,w
  8647  0F92  00A7               	movwf	??_pad
  8648  0F93  0827               	movf	??_pad,w
  8649  0F94  00FA               	movwf	fputs@fp
  8650  0F95  0824               	movf	pad@buf,w
  8651  0F96  318B  23F7  318F   	fcall	_fputs
  8652  0F99                     l3884:
  8653                           
  8654                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  8655  0F99  0020               	movlb	0	; select bank0
  8656  0F9A  0824               	movf	pad@buf,w
  8657  0F9B  318A  22EC  318F   	fcall	_strlen
  8658  0F9E  0020               	movlb	0	; select bank0
  8659  0F9F  082A               	movf	pad@w,w
  8660  0FA0  0770               	addwf	?_strlen,w
  8661  0FA1  00A4               	movwf	?_pad
  8662  0FA2  082B               	movf	pad@w+1,w
  8663  0FA3  3D71               	addwfc	?_strlen+1,w
  8664  0FA4  00A5               	movwf	?_pad+1
  8665  0FA5                     l1644:
  8666  0FA5  0008               	return
  8667  0FA6                     __end_of_pad:
  8668                           
  8669                           	psect	text6
  8670  0AEC                     __ptext6:	
  8671 ;; *************** function _strlen *****************
  8672 ;; Defined at:
  8673 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  8674 ;; Parameters:    Size  Location     Type
  8675 ;;  s               1    wreg     PTR const unsigned char 
  8676 ;;		 -> dbuf(32), 
  8677 ;; Auto vars:     Size  Location     Type
  8678 ;;  s               1    4[COMMON] PTR const unsigned char 
  8679 ;;		 -> dbuf(32), 
  8680 ;;  a               1    3[COMMON] PTR const unsigned char 
  8681 ;;		 -> dbuf(32), 
  8682 ;; Return value:  Size  Location     Type
  8683 ;;                  2    0[COMMON] unsigned int 
  8684 ;; Registers used:
  8685 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8686 ;; Tracked objects:
  8687 ;;		On entry : 0/0
  8688 ;;		On exit  : 0/0
  8689 ;;		Unchanged: 0/0
  8690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8691 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8692 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8693 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8694 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8695 ;;Total ram usage:        5 bytes
  8696 ;; Hardware stack levels used: 1
  8697 ;; This function calls:
  8698 ;;		Nothing
  8699 ;; This function is called by:
  8700 ;;		_pad
  8701 ;; This function uses a non-reentrant model
  8702 ;;
  8703                           
  8704  0AEC                     _strlen:	
  8705                           ;psect for function _strlen
  8706                           
  8707                           
  8708                           ;incstack = 0
  8709                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  8710                           ;strlen@s stored from wreg
  8711  0AEC  00F4               	movwf	strlen@s
  8712  0AED                     l3752:
  8713  0AED  0874               	movf	strlen@s,w
  8714  0AEE  00F2               	movwf	??_strlen
  8715  0AEF  0872               	movf	??_strlen,w
  8716  0AF0  00F3               	movwf	strlen@a
  8717  0AF1  2AF6               	goto	l3756
  8718  0AF2                     l3754:
  8719  0AF2  3001               	movlw	1
  8720  0AF3  00F2               	movwf	??_strlen
  8721  0AF4  0872               	movf	??_strlen,w
  8722  0AF5  07F4               	addwf	strlen@s,f
  8723  0AF6                     l3756:
  8724  0AF6  0874               	movf	strlen@s,w
  8725  0AF7  0086               	movwf	6
  8726  0AF8  3001               	movlw	1	; select bank2/3
  8727  0AF9  0087               	movwf	7
  8728  0AFA  0801               	movf	1,w
  8729  0AFB  1D03               	btfss	3,2
  8730  0AFC  2AFE               	goto	u1511
  8731  0AFD  2AFF               	goto	u1510
  8732  0AFE                     u1511:
  8733  0AFE  2AF2               	goto	l3754
  8734  0AFF                     u1510:
  8735  0AFF                     l3758:
  8736  0AFF  0873               	movf	strlen@a,w
  8737  0B00  0274               	subwf	strlen@s,w
  8738  0B01  00F0               	movwf	?_strlen
  8739  0B02  01F1               	clrf	?_strlen+1
  8740  0B03  1BF0               	btfsc	?_strlen,7
  8741  0B04  03F1               	decf	?_strlen+1,f
  8742  0B05                     l1734:
  8743  0B05  0008               	return
  8744  0B06                     __end_of_strlen:
  8745                           
  8746                           	psect	text7
  8747  0BF7                     __ptext7:	
  8748 ;; *************** function _fputs *****************
  8749 ;; Defined at:
  8750 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  8751 ;; Parameters:    Size  Location     Type
  8752 ;;  s               1    wreg     PTR const unsigned char 
  8753 ;;		 -> dbuf(32), 
  8754 ;;  fp              1   10[COMMON] PTR struct _IO_FILE
  8755 ;;		 -> sprintf@f(10), 
  8756 ;; Auto vars:     Size  Location     Type
  8757 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  8758 ;;		 -> dbuf(32), 
  8759 ;;  i               2    1[BANK0 ] int 
  8760 ;;  c               1    0[BANK0 ] unsigned char 
  8761 ;; Return value:  Size  Location     Type
  8762 ;;                  2   10[COMMON] int 
  8763 ;; Registers used:
  8764 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8765 ;; Tracked objects:
  8766 ;;		On entry : 0/0
  8767 ;;		On exit  : 0/0
  8768 ;;		Unchanged: 0/0
  8769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8770 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8771 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8772 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8773 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8774 ;;Total ram usage:        8 bytes
  8775 ;; Hardware stack levels used: 1
  8776 ;; Hardware stack levels required when called: 3
  8777 ;; This function calls:
  8778 ;;		_fputc
  8779 ;; This function is called by:
  8780 ;;		_pad
  8781 ;; This function uses a non-reentrant model
  8782 ;;
  8783                           
  8784  0BF7                     _fputs:	
  8785                           ;psect for function _fputs
  8786                           
  8787                           
  8788                           ;incstack = 0
  8789                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8790                           ;fputs@s stored from wreg
  8791  0BF7  0020               	movlb	0	; select bank0
  8792  0BF8  00A3               	movwf	fputs@s
  8793  0BF9                     l3744:
  8794  0BF9  01A1               	clrf	fputs@i
  8795  0BFA  01A2               	clrf	fputs@i+1
  8796  0BFB  2C0F               	goto	l3750
  8797  0BFC                     l3746:
  8798  0BFC  0820               	movf	fputs@c,w
  8799  0BFD  00FB               	movwf	??_fputs
  8800  0BFE  01FC               	clrf	??_fputs+1
  8801  0BFF  087B               	movf	??_fputs,w
  8802  0C00  00F2               	movwf	fputc@c
  8803  0C01  087C               	movf	??_fputs+1,w
  8804  0C02  00F3               	movwf	fputc@c+1
  8805  0C03  087A               	movf	fputs@fp,w
  8806  0C04  00FD               	movwf	??_fputs+2
  8807  0C05  087D               	movf	??_fputs+2,w
  8808  0C06  00F4               	movwf	fputc@fp
  8809  0C07  318E  26A5  318B   	fcall	_fputc
  8810  0C0A                     l3748:
  8811  0C0A  3001               	movlw	1
  8812  0C0B  0020               	movlb	0	; select bank0
  8813  0C0C  07A1               	addwf	fputs@i,f
  8814  0C0D  3000               	movlw	0
  8815  0C0E  3DA2               	addwfc	fputs@i+1,f
  8816  0C0F                     l3750:
  8817  0C0F  0821               	movf	fputs@i,w
  8818  0C10  0723               	addwf	fputs@s,w
  8819  0C11  00FB               	movwf	??_fputs
  8820  0C12  087B               	movf	??_fputs,w
  8821  0C13  0086               	movwf	6
  8822  0C14  3001               	movlw	1	; select bank2/3
  8823  0C15  0087               	movwf	7
  8824  0C16  0801               	movf	1,w
  8825  0C17  00FC               	movwf	??_fputs+1
  8826  0C18  087C               	movf	??_fputs+1,w
  8827  0C19  00A0               	movwf	fputs@c
  8828  0C1A  0820               	movf	fputs@c,w
  8829  0C1B  1D03               	btfss	3,2
  8830  0C1C  2C1E               	goto	u1501
  8831  0C1D  2C1F               	goto	u1500
  8832  0C1E                     u1501:
  8833  0C1E  2BFC               	goto	l3746
  8834  0C1F                     u1500:
  8835  0C1F                     l1728:
  8836  0C1F  0008               	return
  8837  0C20                     __end_of_fputs:
  8838                           
  8839                           	psect	text8
  8840  0AD2                     __ptext8:	
  8841 ;; *************** function _abs *****************
  8842 ;; Defined at:
  8843 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\abs.c"
  8844 ;; Parameters:    Size  Location     Type
  8845 ;;  a               2    3[COMMON] int 
  8846 ;; Auto vars:     Size  Location     Type
  8847 ;;		None
  8848 ;; Return value:  Size  Location     Type
  8849 ;;                  2    3[COMMON] int 
  8850 ;; Registers used:
  8851 ;;		wreg, status,2, status,0
  8852 ;; Tracked objects:
  8853 ;;		On entry : 0/0
  8854 ;;		On exit  : 0/0
  8855 ;;		Unchanged: 0/0
  8856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8857 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8859 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8860 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8861 ;;Total ram usage:        4 bytes
  8862 ;; Hardware stack levels used: 1
  8863 ;; This function calls:
  8864 ;;		Nothing
  8865 ;; This function is called by:
  8866 ;;		_dtoa
  8867 ;; This function uses a non-reentrant model
  8868 ;;
  8869                           
  8870  0AD2                     _abs:	
  8871                           ;psect for function _abs
  8872                           
  8873  0AD2                     l3888:	
  8874                           ;incstack = 0
  8875                           ; Regs used in _abs: [wreg+status,2+status,0]
  8876                           
  8877  0AD2  0874               	movf	abs@a+1,w
  8878  0AD3  3A80               	xorlw	128
  8879  0AD4  00F5               	movwf	??_abs
  8880  0AD5  3080               	movlw	128
  8881  0AD6  0275               	subwf	??_abs,w
  8882  0AD7  1D03               	skipz
  8883  0AD8  2ADB               	goto	u1825
  8884  0AD9  3001               	movlw	1
  8885  0ADA  0273               	subwf	abs@a,w
  8886  0ADB                     u1825:
  8887  0ADB  1803               	skipnc
  8888  0ADC  2ADE               	goto	u1821
  8889  0ADD  2ADF               	goto	u1820
  8890  0ADE                     u1821:
  8891  0ADE  2AEB               	goto	l1705
  8892  0ADF                     u1820:
  8893  0ADF                     l3890:
  8894  0ADF  0973               	comf	abs@a,w
  8895  0AE0  00F5               	movwf	??_abs
  8896  0AE1  0974               	comf	abs@a+1,w
  8897  0AE2  00F6               	movwf	??_abs+1
  8898  0AE3  0AF5               	incf	??_abs,f
  8899  0AE4  1903               	skipnz
  8900  0AE5  0AF6               	incf	??_abs+1,f
  8901  0AE6  0875               	movf	??_abs,w
  8902  0AE7  00F3               	movwf	?_abs
  8903  0AE8  0876               	movf	??_abs+1,w
  8904  0AE9  00F4               	movwf	?_abs+1
  8905  0AEA  2AEB               	goto	l1708
  8906  0AEB                     l1705:
  8907  0AEB                     l1708:
  8908  0AEB  0008               	return
  8909  0AEC                     __end_of_abs:
  8910                           
  8911                           	psect	text9
  8912  037B                     __ptext9:	
  8913 ;; *************** function ___aomod *****************
  8914 ;; Defined at:
  8915 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aomod.c"
  8916 ;; Parameters:    Size  Location     Type
  8917 ;;  divisor         8    0[BANK0 ] long long 
  8918 ;;  dividend        8    8[BANK0 ] long long 
  8919 ;; Auto vars:     Size  Location     Type
  8920 ;;  sign            1    2[COMMON] unsigned char 
  8921 ;;  counter         1    1[COMMON] unsigned char 
  8922 ;; Return value:  Size  Location     Type
  8923 ;;                  8    0[BANK0 ] long long 
  8924 ;; Registers used:
  8925 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8926 ;; Tracked objects:
  8927 ;;		On entry : 0/0
  8928 ;;		On exit  : 0/0
  8929 ;;		Unchanged: 0/0
  8930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8931 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8932 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8933 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8934 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8935 ;;Total ram usage:       19 bytes
  8936 ;; Hardware stack levels used: 1
  8937 ;; This function calls:
  8938 ;;		Nothing
  8939 ;; This function is called by:
  8940 ;;		_dtoa
  8941 ;; This function uses a non-reentrant model
  8942 ;;
  8943                           
  8944  037B                     ___aomod:	
  8945                           ;psect for function ___aomod
  8946                           
  8947  037B                     l3836:	
  8948                           ;incstack = 0
  8949                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  8950                           
  8951  037B  01F2               	clrf	___aomod@sign
  8952  037C                     l3838:
  8953  037C  3028               	movlw	low ___aomod@dividend
  8954  037D  0086               	movwf	6
  8955  037E  3000               	movlw	high ___aomod@dividend
  8956  037F  0087               	movwf	7
  8957  0380  3F47               	moviw [7]fsr1
  8958  0381  00F0               	movwf	??___aomod
  8959  0382  1FF0               	btfss	??___aomod,7
  8960  0383  2B85               	goto	u1681
  8961  0384  2B86               	goto	u1680
  8962  0385                     u1681:
  8963  0385  2BA7               	goto	l3842
  8964  0386                     u1680:
  8965  0386                     l3840:
  8966  0386  0020               	movlb	0	; select bank0
  8967  0387  09A8               	comf	___aomod@dividend,f
  8968  0388  09A9               	comf	___aomod@dividend+1,f
  8969  0389  09AA               	comf	___aomod@dividend+2,f
  8970  038A  09AB               	comf	___aomod@dividend+3,f
  8971  038B  09AC               	comf	___aomod@dividend+4,f
  8972  038C  09AD               	comf	___aomod@dividend+5,f
  8973  038D  09AE               	comf	___aomod@dividend+6,f
  8974  038E  09AF               	comf	___aomod@dividend+7,f
  8975  038F  0AA8               	incf	___aomod@dividend,f
  8976  0390  1D03               	skipz
  8977  0391  2BA5               	goto	u169lld
  8978  0392  0AA9               	incf	___aomod@dividend+1,f
  8979  0393  1D03               	skipz
  8980  0394  2BA5               	goto	u169lld
  8981  0395  0AAA               	incf	___aomod@dividend+2,f
  8982  0396  1D03               	skipz
  8983  0397  2BA5               	goto	u169lld
  8984  0398  0AAB               	incf	___aomod@dividend+3,f
  8985  0399  1D03               	skipz
  8986  039A  2BA5               	goto	u169lld
  8987  039B  0AAC               	incf	___aomod@dividend+4,f
  8988  039C  1D03               	skipz
  8989  039D  2BA5               	goto	u169lld
  8990  039E  0AAD               	incf	___aomod@dividend+5,f
  8991  039F  1D03               	skipz
  8992  03A0  2BA5               	goto	u169lld
  8993  03A1  0AAE               	incf	___aomod@dividend+6,f
  8994  03A2  1D03               	skipz
  8995  03A3  2BA5               	goto	u169lld
  8996  03A4  0AAF               	incf	___aomod@dividend+7,f
  8997  03A5                     u169lld:
  8998  03A5  01F2               	clrf	___aomod@sign
  8999  03A6  0AF2               	incf	___aomod@sign,f
  9000  03A7                     l3842:
  9001  03A7  3020               	movlw	low ___aomod@divisor
  9002  03A8  0086               	movwf	6
  9003  03A9  3000               	movlw	high ___aomod@divisor
  9004  03AA  0087               	movwf	7
  9005  03AB  3F47               	moviw [7]fsr1
  9006  03AC  00F0               	movwf	??___aomod
  9007  03AD  1FF0               	btfss	??___aomod,7
  9008  03AE  2BB0               	goto	u1701
  9009  03AF  2BB1               	goto	u1700
  9010  03B0                     u1701:
  9011  03B0  2BD0               	goto	l3846
  9012  03B1                     u1700:
  9013  03B1                     l3844:
  9014  03B1  0020               	movlb	0	; select bank0
  9015  03B2  09A0               	comf	___aomod@divisor,f
  9016  03B3  09A1               	comf	___aomod@divisor+1,f
  9017  03B4  09A2               	comf	___aomod@divisor+2,f
  9018  03B5  09A3               	comf	___aomod@divisor+3,f
  9019  03B6  09A4               	comf	___aomod@divisor+4,f
  9020  03B7  09A5               	comf	___aomod@divisor+5,f
  9021  03B8  09A6               	comf	___aomod@divisor+6,f
  9022  03B9  09A7               	comf	___aomod@divisor+7,f
  9023  03BA  0AA0               	incf	___aomod@divisor,f
  9024  03BB  1D03               	skipz
  9025  03BC  2BD0               	goto	u171lld
  9026  03BD  0AA1               	incf	___aomod@divisor+1,f
  9027  03BE  1D03               	skipz
  9028  03BF  2BD0               	goto	u171lld
  9029  03C0  0AA2               	incf	___aomod@divisor+2,f
  9030  03C1  1D03               	skipz
  9031  03C2  2BD0               	goto	u171lld
  9032  03C3  0AA3               	incf	___aomod@divisor+3,f
  9033  03C4  1D03               	skipz
  9034  03C5  2BD0               	goto	u171lld
  9035  03C6  0AA4               	incf	___aomod@divisor+4,f
  9036  03C7  1D03               	skipz
  9037  03C8  2BD0               	goto	u171lld
  9038  03C9  0AA5               	incf	___aomod@divisor+5,f
  9039  03CA  1D03               	skipz
  9040  03CB  2BD0               	goto	u171lld
  9041  03CC  0AA6               	incf	___aomod@divisor+6,f
  9042  03CD  1D03               	skipz
  9043  03CE  2BD0               	goto	u171lld
  9044  03CF  0AA7               	incf	___aomod@divisor+7,f
  9045  03D0                     u171lld:
  9046  03D0                     l3846:
  9047  03D0  0020               	movlb	0	; select bank0
  9048  03D1  0820               	movf	___aomod@divisor,w
  9049  03D2  0421               	iorwf	___aomod@divisor+1,w
  9050  03D3  0422               	iorwf	___aomod@divisor+2,w
  9051  03D4  0423               	iorwf	___aomod@divisor+3,w
  9052  03D5  0424               	iorwf	___aomod@divisor+4,w
  9053  03D6  0425               	iorwf	___aomod@divisor+5,w
  9054  03D7  0426               	iorwf	___aomod@divisor+6,w
  9055  03D8  0427               	iorwf	___aomod@divisor+7,w
  9056  03D9  1903               	skipnz
  9057  03DA  2BDC               	goto	u1721
  9058  03DB  2BDD               	goto	u1720
  9059  03DC                     u1721:
  9060  03DC  2C30               	goto	l3862
  9061  03DD                     u1720:
  9062  03DD                     l3848:
  9063  03DD  01F1               	clrf	___aomod@counter
  9064  03DE  0AF1               	incf	___aomod@counter,f
  9065  03DF  2BEC               	goto	l3854
  9066  03E0                     l3850:
  9067  03E0  35A0               	lslf	___aomod@divisor,f
  9068  03E1  0DA1               	rlf	___aomod@divisor+1,f
  9069  03E2  0DA2               	rlf	___aomod@divisor+2,f
  9070  03E3  0DA3               	rlf	___aomod@divisor+3,f
  9071  03E4  0DA4               	rlf	___aomod@divisor+4,f
  9072  03E5  0DA5               	rlf	___aomod@divisor+5,f
  9073  03E6  0DA6               	rlf	___aomod@divisor+6,f
  9074  03E7  0DA7               	rlf	___aomod@divisor+7,f
  9075  03E8                     l3852:
  9076  03E8  3001               	movlw	1
  9077  03E9  00F0               	movwf	??___aomod
  9078  03EA  0870               	movf	??___aomod,w
  9079  03EB  07F1               	addwf	___aomod@counter,f
  9080  03EC                     l3854:
  9081  03EC  1FA7               	btfss	___aomod@divisor+7,7
  9082  03ED  2BEF               	goto	u1731
  9083  03EE  2BF0               	goto	u1730
  9084  03EF                     u1731:
  9085  03EF  2BE0               	goto	l3850
  9086  03F0                     u1730:
  9087  03F0                     l3856:
  9088  03F0  0827               	movf	___aomod@divisor+7,w
  9089  03F1  022F               	subwf	___aomod@dividend+7,w
  9090  03F2  1D03               	skipz
  9091  03F3  2C0E               	goto	u1745
  9092  03F4  0826               	movf	___aomod@divisor+6,w
  9093  03F5  022E               	subwf	___aomod@dividend+6,w
  9094  03F6  1D03               	skipz
  9095  03F7  2C0E               	goto	u1745
  9096  03F8  0825               	movf	___aomod@divisor+5,w
  9097  03F9  022D               	subwf	___aomod@dividend+5,w
  9098  03FA  1D03               	skipz
  9099  03FB  2C0E               	goto	u1745
  9100  03FC  0824               	movf	___aomod@divisor+4,w
  9101  03FD  022C               	subwf	___aomod@dividend+4,w
  9102  03FE  1D03               	skipz
  9103  03FF  2C0E               	goto	u1745
  9104  0400  0823               	movf	___aomod@divisor+3,w
  9105  0401  022B               	subwf	___aomod@dividend+3,w
  9106  0402  1D03               	skipz
  9107  0403  2C0E               	goto	u1745
  9108  0404  0822               	movf	___aomod@divisor+2,w
  9109  0405  022A               	subwf	___aomod@dividend+2,w
  9110  0406  1D03               	skipz
  9111  0407  2C0E               	goto	u1745
  9112  0408  0821               	movf	___aomod@divisor+1,w
  9113  0409  0229               	subwf	___aomod@dividend+1,w
  9114  040A  1D03               	skipz
  9115  040B  2C0E               	goto	u1745
  9116  040C  0820               	movf	___aomod@divisor,w
  9117  040D  0228               	subwf	___aomod@dividend,w
  9118  040E                     u1745:
  9119  040E  1C03               	skipc
  9120  040F  2C11               	goto	u1741
  9121  0410  2C12               	goto	u1740
  9122  0411                     u1741:
  9123  0411  2C22               	goto	l3860
  9124  0412                     u1740:
  9125  0412                     l3858:
  9126  0412  0820               	movf	___aomod@divisor,w
  9127  0413  02A8               	subwf	___aomod@dividend,f
  9128  0414  0821               	movf	___aomod@divisor+1,w
  9129  0415  3BA9               	subwfb	___aomod@dividend+1,f
  9130  0416  0822               	movf	___aomod@divisor+2,w
  9131  0417  3BAA               	subwfb	___aomod@dividend+2,f
  9132  0418  0823               	movf	___aomod@divisor+3,w
  9133  0419  3BAB               	subwfb	___aomod@dividend+3,f
  9134  041A  0824               	movf	___aomod@divisor+4,w
  9135  041B  3BAC               	subwfb	___aomod@dividend+4,f
  9136  041C  0825               	movf	___aomod@divisor+5,w
  9137  041D  3BAD               	subwfb	___aomod@dividend+5,f
  9138  041E  0826               	movf	___aomod@divisor+6,w
  9139  041F  3BAE               	subwfb	___aomod@dividend+6,f
  9140  0420  0827               	movf	___aomod@divisor+7,w
  9141  0421  3BAF               	subwfb	___aomod@dividend+7,f
  9142  0422                     l3860:
  9143  0422  36A7               	lsrf	___aomod@divisor+7,f
  9144  0423  0CA6               	rrf	___aomod@divisor+6,f
  9145  0424  0CA5               	rrf	___aomod@divisor+5,f
  9146  0425  0CA4               	rrf	___aomod@divisor+4,f
  9147  0426  0CA3               	rrf	___aomod@divisor+3,f
  9148  0427  0CA2               	rrf	___aomod@divisor+2,f
  9149  0428  0CA1               	rrf	___aomod@divisor+1,f
  9150  0429  0CA0               	rrf	___aomod@divisor,f
  9151  042A  3001               	movlw	1
  9152  042B  02F1               	subwf	___aomod@counter,f
  9153  042C  1D03               	btfss	3,2
  9154  042D  2C2F               	goto	u1751
  9155  042E  2C30               	goto	u1750
  9156  042F                     u1751:
  9157  042F  2BF0               	goto	l3856
  9158  0430                     u1750:
  9159  0430                     l3862:
  9160  0430  0872               	movf	___aomod@sign,w
  9161  0431  1903               	btfsc	3,2
  9162  0432  2C34               	goto	u1761
  9163  0433  2C35               	goto	u1760
  9164  0434                     u1761:
  9165  0434  2C53               	goto	l1262
  9166  0435                     u1760:
  9167  0435                     l3864:
  9168  0435  09A8               	comf	___aomod@dividend,f
  9169  0436  09A9               	comf	___aomod@dividend+1,f
  9170  0437  09AA               	comf	___aomod@dividend+2,f
  9171  0438  09AB               	comf	___aomod@dividend+3,f
  9172  0439  09AC               	comf	___aomod@dividend+4,f
  9173  043A  09AD               	comf	___aomod@dividend+5,f
  9174  043B  09AE               	comf	___aomod@dividend+6,f
  9175  043C  09AF               	comf	___aomod@dividend+7,f
  9176  043D  0AA8               	incf	___aomod@dividend,f
  9177  043E  1D03               	skipz
  9178  043F  2C53               	goto	u177lld
  9179  0440  0AA9               	incf	___aomod@dividend+1,f
  9180  0441  1D03               	skipz
  9181  0442  2C53               	goto	u177lld
  9182  0443  0AAA               	incf	___aomod@dividend+2,f
  9183  0444  1D03               	skipz
  9184  0445  2C53               	goto	u177lld
  9185  0446  0AAB               	incf	___aomod@dividend+3,f
  9186  0447  1D03               	skipz
  9187  0448  2C53               	goto	u177lld
  9188  0449  0AAC               	incf	___aomod@dividend+4,f
  9189  044A  1D03               	skipz
  9190  044B  2C53               	goto	u177lld
  9191  044C  0AAD               	incf	___aomod@dividend+5,f
  9192  044D  1D03               	skipz
  9193  044E  2C53               	goto	u177lld
  9194  044F  0AAE               	incf	___aomod@dividend+6,f
  9195  0450  1D03               	skipz
  9196  0451  2C53               	goto	u177lld
  9197  0452  0AAF               	incf	___aomod@dividend+7,f
  9198  0453                     u177lld:
  9199  0453                     l1262:
  9200  0453  0020               	movlb	0	; select bank0
  9201  0454  0828               	movf	___aomod@dividend,w
  9202  0455  00A0               	movwf	?___aomod
  9203  0456  0829               	movf	___aomod@dividend+1,w
  9204  0457  00A1               	movwf	?___aomod+1
  9205  0458  082A               	movf	___aomod@dividend+2,w
  9206  0459  00A2               	movwf	?___aomod+2
  9207  045A  082B               	movf	___aomod@dividend+3,w
  9208  045B  00A3               	movwf	?___aomod+3
  9209  045C  082C               	movf	___aomod@dividend+4,w
  9210  045D  00A4               	movwf	?___aomod+4
  9211  045E  082D               	movf	___aomod@dividend+5,w
  9212  045F  00A5               	movwf	?___aomod+5
  9213  0460  082E               	movf	___aomod@dividend+6,w
  9214  0461  00A6               	movwf	?___aomod+6
  9215  0462  082F               	movf	___aomod@dividend+7,w
  9216  0463  00A7               	movwf	?___aomod+7
  9217  0464                     l1263:
  9218  0464  0008               	return
  9219  0465                     __end_of___aomod:
  9220                           
  9221                           	psect	text10
  9222  0465                     __ptext10:	
  9223 ;; *************** function ___aodiv *****************
  9224 ;; Defined at:
  9225 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aodiv.c"
  9226 ;; Parameters:    Size  Location     Type
  9227 ;;  divisor         8    0[BANK0 ] long long 
  9228 ;;  dividend        8    8[BANK0 ] long long 
  9229 ;; Auto vars:     Size  Location     Type
  9230 ;;  quotient        8    3[COMMON] long long 
  9231 ;;  sign            1    2[COMMON] unsigned char 
  9232 ;;  counter         1    1[COMMON] unsigned char 
  9233 ;; Return value:  Size  Location     Type
  9234 ;;                  8    0[BANK0 ] long long 
  9235 ;; Registers used:
  9236 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9237 ;; Tracked objects:
  9238 ;;		On entry : 0/0
  9239 ;;		On exit  : 0/0
  9240 ;;		Unchanged: 0/0
  9241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9242 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9243 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9244 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9245 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9246 ;;Total ram usage:       27 bytes
  9247 ;; Hardware stack levels used: 1
  9248 ;; This function calls:
  9249 ;;		Nothing
  9250 ;; This function is called by:
  9251 ;;		_dtoa
  9252 ;; This function uses a non-reentrant model
  9253 ;;
  9254                           
  9255  0465                     ___aodiv:	
  9256                           ;psect for function ___aodiv
  9257                           
  9258  0465                     l3798:	
  9259                           ;incstack = 0
  9260                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  9261                           
  9262  0465  01F2               	clrf	___aodiv@sign
  9263  0466                     l3800:
  9264  0466  3020               	movlw	low ___aodiv@divisor
  9265  0467  0086               	movwf	6
  9266  0468  3000               	movlw	high ___aodiv@divisor
  9267  0469  0087               	movwf	7
  9268  046A  3F47               	moviw [7]fsr1
  9269  046B  00F0               	movwf	??___aodiv
  9270  046C  1FF0               	btfss	??___aodiv,7
  9271  046D  2C6F               	goto	u1571
  9272  046E  2C70               	goto	u1570
  9273  046F                     u1571:
  9274  046F  2C91               	goto	l3804
  9275  0470                     u1570:
  9276  0470                     l3802:
  9277  0470  0020               	movlb	0	; select bank0
  9278  0471  09A0               	comf	___aodiv@divisor,f
  9279  0472  09A1               	comf	___aodiv@divisor+1,f
  9280  0473  09A2               	comf	___aodiv@divisor+2,f
  9281  0474  09A3               	comf	___aodiv@divisor+3,f
  9282  0475  09A4               	comf	___aodiv@divisor+4,f
  9283  0476  09A5               	comf	___aodiv@divisor+5,f
  9284  0477  09A6               	comf	___aodiv@divisor+6,f
  9285  0478  09A7               	comf	___aodiv@divisor+7,f
  9286  0479  0AA0               	incf	___aodiv@divisor,f
  9287  047A  1D03               	skipz
  9288  047B  2C8F               	goto	u158lld
  9289  047C  0AA1               	incf	___aodiv@divisor+1,f
  9290  047D  1D03               	skipz
  9291  047E  2C8F               	goto	u158lld
  9292  047F  0AA2               	incf	___aodiv@divisor+2,f
  9293  0480  1D03               	skipz
  9294  0481  2C8F               	goto	u158lld
  9295  0482  0AA3               	incf	___aodiv@divisor+3,f
  9296  0483  1D03               	skipz
  9297  0484  2C8F               	goto	u158lld
  9298  0485  0AA4               	incf	___aodiv@divisor+4,f
  9299  0486  1D03               	skipz
  9300  0487  2C8F               	goto	u158lld
  9301  0488  0AA5               	incf	___aodiv@divisor+5,f
  9302  0489  1D03               	skipz
  9303  048A  2C8F               	goto	u158lld
  9304  048B  0AA6               	incf	___aodiv@divisor+6,f
  9305  048C  1D03               	skipz
  9306  048D  2C8F               	goto	u158lld
  9307  048E  0AA7               	incf	___aodiv@divisor+7,f
  9308  048F                     u158lld:
  9309  048F  01F2               	clrf	___aodiv@sign
  9310  0490  0AF2               	incf	___aodiv@sign,f
  9311  0491                     l3804:
  9312  0491  3028               	movlw	low ___aodiv@dividend
  9313  0492  0086               	movwf	6
  9314  0493  3000               	movlw	high ___aodiv@dividend
  9315  0494  0087               	movwf	7
  9316  0495  3F47               	moviw [7]fsr1
  9317  0496  00F0               	movwf	??___aodiv
  9318  0497  1FF0               	btfss	??___aodiv,7
  9319  0498  2C9A               	goto	u1591
  9320  0499  2C9B               	goto	u1590
  9321  049A                     u1591:
  9322  049A  2CBE               	goto	l3810
  9323  049B                     u1590:
  9324  049B                     l3806:
  9325  049B  0020               	movlb	0	; select bank0
  9326  049C  09A8               	comf	___aodiv@dividend,f
  9327  049D  09A9               	comf	___aodiv@dividend+1,f
  9328  049E  09AA               	comf	___aodiv@dividend+2,f
  9329  049F  09AB               	comf	___aodiv@dividend+3,f
  9330  04A0  09AC               	comf	___aodiv@dividend+4,f
  9331  04A1  09AD               	comf	___aodiv@dividend+5,f
  9332  04A2  09AE               	comf	___aodiv@dividend+6,f
  9333  04A3  09AF               	comf	___aodiv@dividend+7,f
  9334  04A4  0AA8               	incf	___aodiv@dividend,f
  9335  04A5  1D03               	skipz
  9336  04A6  2CBA               	goto	u160lld
  9337  04A7  0AA9               	incf	___aodiv@dividend+1,f
  9338  04A8  1D03               	skipz
  9339  04A9  2CBA               	goto	u160lld
  9340  04AA  0AAA               	incf	___aodiv@dividend+2,f
  9341  04AB  1D03               	skipz
  9342  04AC  2CBA               	goto	u160lld
  9343  04AD  0AAB               	incf	___aodiv@dividend+3,f
  9344  04AE  1D03               	skipz
  9345  04AF  2CBA               	goto	u160lld
  9346  04B0  0AAC               	incf	___aodiv@dividend+4,f
  9347  04B1  1D03               	skipz
  9348  04B2  2CBA               	goto	u160lld
  9349  04B3  0AAD               	incf	___aodiv@dividend+5,f
  9350  04B4  1D03               	skipz
  9351  04B5  2CBA               	goto	u160lld
  9352  04B6  0AAE               	incf	___aodiv@dividend+6,f
  9353  04B7  1D03               	skipz
  9354  04B8  2CBA               	goto	u160lld
  9355  04B9  0AAF               	incf	___aodiv@dividend+7,f
  9356  04BA                     u160lld:
  9357  04BA                     l3808:
  9358  04BA  3001               	movlw	1
  9359  04BB  00F0               	movwf	??___aodiv
  9360  04BC  0870               	movf	??___aodiv,w
  9361  04BD  06F2               	xorwf	___aodiv@sign,f
  9362  04BE                     l3810:
  9363  04BE  3073               	movlw	low ___aodiv@quotient
  9364  04BF  0086               	movwf	6
  9365  04C0  3000               	movlw	high ___aodiv@quotient
  9366  04C1  0087               	movwf	7
  9367  04C2  3008               	movlw	8
  9368  04C3  00F0               	movwf	??___aodiv
  9369  04C4  3000               	movlw	0
  9370  04C5                     u1610:
  9371  04C5  001E               	movwi fsr1++
  9372  04C6  0BF0               	decfsz	??___aodiv,f
  9373  04C7  2CC5               	goto	u1610
  9374  04C8                     l3812:
  9375  04C8  0020               	movlb	0	; select bank0
  9376  04C9  0820               	movf	___aodiv@divisor,w
  9377  04CA  0421               	iorwf	___aodiv@divisor+1,w
  9378  04CB  0422               	iorwf	___aodiv@divisor+2,w
  9379  04CC  0423               	iorwf	___aodiv@divisor+3,w
  9380  04CD  0424               	iorwf	___aodiv@divisor+4,w
  9381  04CE  0425               	iorwf	___aodiv@divisor+5,w
  9382  04CF  0426               	iorwf	___aodiv@divisor+6,w
  9383  04D0  0427               	iorwf	___aodiv@divisor+7,w
  9384  04D1  1903               	skipnz
  9385  04D2  2CD4               	goto	u1621
  9386  04D3  2CD5               	goto	u1620
  9387  04D4                     u1621:
  9388  04D4  2D31               	goto	l3832
  9389  04D5                     u1620:
  9390  04D5                     l3814:
  9391  04D5  01F1               	clrf	___aodiv@counter
  9392  04D6  0AF1               	incf	___aodiv@counter,f
  9393  04D7  2CE4               	goto	l3820
  9394  04D8                     l3816:
  9395  04D8  35A0               	lslf	___aodiv@divisor,f
  9396  04D9  0DA1               	rlf	___aodiv@divisor+1,f
  9397  04DA  0DA2               	rlf	___aodiv@divisor+2,f
  9398  04DB  0DA3               	rlf	___aodiv@divisor+3,f
  9399  04DC  0DA4               	rlf	___aodiv@divisor+4,f
  9400  04DD  0DA5               	rlf	___aodiv@divisor+5,f
  9401  04DE  0DA6               	rlf	___aodiv@divisor+6,f
  9402  04DF  0DA7               	rlf	___aodiv@divisor+7,f
  9403  04E0                     l3818:
  9404  04E0  3001               	movlw	1
  9405  04E1  00F0               	movwf	??___aodiv
  9406  04E2  0870               	movf	??___aodiv,w
  9407  04E3  07F1               	addwf	___aodiv@counter,f
  9408  04E4                     l3820:
  9409  04E4  1FA7               	btfss	___aodiv@divisor+7,7
  9410  04E5  2CE7               	goto	u1631
  9411  04E6  2CE8               	goto	u1630
  9412  04E7                     u1631:
  9413  04E7  2CD8               	goto	l3816
  9414  04E8                     u1630:
  9415  04E8                     l3822:
  9416  04E8  35F3               	lslf	___aodiv@quotient,f
  9417  04E9  0DF4               	rlf	___aodiv@quotient+1,f
  9418  04EA  0DF5               	rlf	___aodiv@quotient+2,f
  9419  04EB  0DF6               	rlf	___aodiv@quotient+3,f
  9420  04EC  0DF7               	rlf	___aodiv@quotient+4,f
  9421  04ED  0DF8               	rlf	___aodiv@quotient+5,f
  9422  04EE  0DF9               	rlf	___aodiv@quotient+6,f
  9423  04EF  0DFA               	rlf	___aodiv@quotient+7,f
  9424  04F0                     l3824:
  9425  04F0  0827               	movf	___aodiv@divisor+7,w
  9426  04F1  022F               	subwf	___aodiv@dividend+7,w
  9427  04F2  1D03               	skipz
  9428  04F3  2D0E               	goto	u1645
  9429  04F4  0826               	movf	___aodiv@divisor+6,w
  9430  04F5  022E               	subwf	___aodiv@dividend+6,w
  9431  04F6  1D03               	skipz
  9432  04F7  2D0E               	goto	u1645
  9433  04F8  0825               	movf	___aodiv@divisor+5,w
  9434  04F9  022D               	subwf	___aodiv@dividend+5,w
  9435  04FA  1D03               	skipz
  9436  04FB  2D0E               	goto	u1645
  9437  04FC  0824               	movf	___aodiv@divisor+4,w
  9438  04FD  022C               	subwf	___aodiv@dividend+4,w
  9439  04FE  1D03               	skipz
  9440  04FF  2D0E               	goto	u1645
  9441  0500  0823               	movf	___aodiv@divisor+3,w
  9442  0501  022B               	subwf	___aodiv@dividend+3,w
  9443  0502  1D03               	skipz
  9444  0503  2D0E               	goto	u1645
  9445  0504  0822               	movf	___aodiv@divisor+2,w
  9446  0505  022A               	subwf	___aodiv@dividend+2,w
  9447  0506  1D03               	skipz
  9448  0507  2D0E               	goto	u1645
  9449  0508  0821               	movf	___aodiv@divisor+1,w
  9450  0509  0229               	subwf	___aodiv@dividend+1,w
  9451  050A  1D03               	skipz
  9452  050B  2D0E               	goto	u1645
  9453  050C  0820               	movf	___aodiv@divisor,w
  9454  050D  0228               	subwf	___aodiv@dividend,w
  9455  050E                     u1645:
  9456  050E  1C03               	skipc
  9457  050F  2D11               	goto	u1641
  9458  0510  2D12               	goto	u1640
  9459  0511                     u1641:
  9460  0511  2D23               	goto	l3830
  9461  0512                     u1640:
  9462  0512                     l3826:
  9463  0512  0820               	movf	___aodiv@divisor,w
  9464  0513  02A8               	subwf	___aodiv@dividend,f
  9465  0514  0821               	movf	___aodiv@divisor+1,w
  9466  0515  3BA9               	subwfb	___aodiv@dividend+1,f
  9467  0516  0822               	movf	___aodiv@divisor+2,w
  9468  0517  3BAA               	subwfb	___aodiv@dividend+2,f
  9469  0518  0823               	movf	___aodiv@divisor+3,w
  9470  0519  3BAB               	subwfb	___aodiv@dividend+3,f
  9471  051A  0824               	movf	___aodiv@divisor+4,w
  9472  051B  3BAC               	subwfb	___aodiv@dividend+4,f
  9473  051C  0825               	movf	___aodiv@divisor+5,w
  9474  051D  3BAD               	subwfb	___aodiv@dividend+5,f
  9475  051E  0826               	movf	___aodiv@divisor+6,w
  9476  051F  3BAE               	subwfb	___aodiv@dividend+6,f
  9477  0520  0827               	movf	___aodiv@divisor+7,w
  9478  0521  3BAF               	subwfb	___aodiv@dividend+7,f
  9479  0522                     l3828:
  9480  0522  1473               	bsf	___aodiv@quotient,0
  9481  0523                     l3830:
  9482  0523  36A7               	lsrf	___aodiv@divisor+7,f
  9483  0524  0CA6               	rrf	___aodiv@divisor+6,f
  9484  0525  0CA5               	rrf	___aodiv@divisor+5,f
  9485  0526  0CA4               	rrf	___aodiv@divisor+4,f
  9486  0527  0CA3               	rrf	___aodiv@divisor+3,f
  9487  0528  0CA2               	rrf	___aodiv@divisor+2,f
  9488  0529  0CA1               	rrf	___aodiv@divisor+1,f
  9489  052A  0CA0               	rrf	___aodiv@divisor,f
  9490  052B  3001               	movlw	1
  9491  052C  02F1               	subwf	___aodiv@counter,f
  9492  052D  1D03               	btfss	3,2
  9493  052E  2D30               	goto	u1651
  9494  052F  2D31               	goto	u1650
  9495  0530                     u1651:
  9496  0530  2CE8               	goto	l3822
  9497  0531                     u1650:
  9498  0531                     l3832:
  9499  0531  0872               	movf	___aodiv@sign,w
  9500  0532  1903               	btfsc	3,2
  9501  0533  2D35               	goto	u1661
  9502  0534  2D36               	goto	u1660
  9503  0535                     u1661:
  9504  0535  2D54               	goto	l1249
  9505  0536                     u1660:
  9506  0536                     l3834:
  9507  0536  09F3               	comf	___aodiv@quotient,f
  9508  0537  09F4               	comf	___aodiv@quotient+1,f
  9509  0538  09F5               	comf	___aodiv@quotient+2,f
  9510  0539  09F6               	comf	___aodiv@quotient+3,f
  9511  053A  09F7               	comf	___aodiv@quotient+4,f
  9512  053B  09F8               	comf	___aodiv@quotient+5,f
  9513  053C  09F9               	comf	___aodiv@quotient+6,f
  9514  053D  09FA               	comf	___aodiv@quotient+7,f
  9515  053E  0AF3               	incf	___aodiv@quotient,f
  9516  053F  1D03               	skipz
  9517  0540  2D54               	goto	u167lld
  9518  0541  0AF4               	incf	___aodiv@quotient+1,f
  9519  0542  1D03               	skipz
  9520  0543  2D54               	goto	u167lld
  9521  0544  0AF5               	incf	___aodiv@quotient+2,f
  9522  0545  1D03               	skipz
  9523  0546  2D54               	goto	u167lld
  9524  0547  0AF6               	incf	___aodiv@quotient+3,f
  9525  0548  1D03               	skipz
  9526  0549  2D54               	goto	u167lld
  9527  054A  0AF7               	incf	___aodiv@quotient+4,f
  9528  054B  1D03               	skipz
  9529  054C  2D54               	goto	u167lld
  9530  054D  0AF8               	incf	___aodiv@quotient+5,f
  9531  054E  1D03               	skipz
  9532  054F  2D54               	goto	u167lld
  9533  0550  0AF9               	incf	___aodiv@quotient+6,f
  9534  0551  1D03               	skipz
  9535  0552  2D54               	goto	u167lld
  9536  0553  0AFA               	incf	___aodiv@quotient+7,f
  9537  0554                     u167lld:
  9538  0554                     l1249:
  9539  0554  0873               	movf	___aodiv@quotient,w
  9540  0555  0020               	movlb	0	; select bank0
  9541  0556  00A0               	movwf	?___aodiv
  9542  0557  0874               	movf	___aodiv@quotient+1,w
  9543  0558  00A1               	movwf	?___aodiv+1
  9544  0559  0875               	movf	___aodiv@quotient+2,w
  9545  055A  00A2               	movwf	?___aodiv+2
  9546  055B  0876               	movf	___aodiv@quotient+3,w
  9547  055C  00A3               	movwf	?___aodiv+3
  9548  055D  0877               	movf	___aodiv@quotient+4,w
  9549  055E  00A4               	movwf	?___aodiv+4
  9550  055F  0878               	movf	___aodiv@quotient+5,w
  9551  0560  00A5               	movwf	?___aodiv+5
  9552  0561  0879               	movf	___aodiv@quotient+6,w
  9553  0562  00A6               	movwf	?___aodiv+6
  9554  0563  087A               	movf	___aodiv@quotient+7,w
  9555  0564  00A7               	movwf	?___aodiv+7
  9556  0565                     l1250:
  9557  0565  0008               	return
  9558  0566                     __end_of___aodiv:
  9559                           
  9560                           	psect	text11
  9561  010E                     __ptext11:	
  9562 ;; *************** function _ctoa *****************
  9563 ;; Defined at:
  9564 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  9565 ;; Parameters:    Size  Location     Type
  9566 ;;  fp              1    wreg     PTR struct _IO_FILE
  9567 ;;		 -> sprintf@f(10), 
  9568 ;;  c               1   10[COMMON] unsigned char 
  9569 ;; Auto vars:     Size  Location     Type
  9570 ;;  fp              1    7[BANK0 ] PTR struct _IO_FILE
  9571 ;;		 -> sprintf@f(10), 
  9572 ;;  w               2    5[BANK0 ] int 
  9573 ;;  l               2    3[BANK0 ] int 
  9574 ;; Return value:  Size  Location     Type
  9575 ;;                  2   10[COMMON] int 
  9576 ;; Registers used:
  9577 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9578 ;; Tracked objects:
  9579 ;;		On entry : 0/0
  9580 ;;		On exit  : 0/0
  9581 ;;		Unchanged: 0/0
  9582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9583 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9584 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9585 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9586 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9587 ;;Total ram usage:       10 bytes
  9588 ;; Hardware stack levels used: 1
  9589 ;; Hardware stack levels required when called: 3
  9590 ;; This function calls:
  9591 ;;		_fputc
  9592 ;; This function is called by:
  9593 ;;		_vfpfcnvrt
  9594 ;; This function uses a non-reentrant model
  9595 ;;
  9596                           
  9597  010E                     _ctoa:	
  9598                           ;psect for function _ctoa
  9599                           
  9600                           
  9601                           ;incstack = 0
  9602                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9603                           ;ctoa@fp stored from wreg
  9604  010E  0020               	movlb	0	; select bank0
  9605  010F  00A7               	movwf	ctoa@fp
  9606  0110                     l3894:
  9607                           
  9608                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  9609  0110  0021               	movlb	1	; select bank1
  9610  0111  083F               	movf	_width^(0+128),w
  9611  0112  0440               	iorwf	(_width+1)^(0+128),w
  9612  0113  1D03               	btfss	3,2
  9613  0114  2916               	goto	u1841
  9614  0115  2917               	goto	u1840
  9615  0116                     u1841:
  9616  0116  291F               	goto	l3898
  9617  0117                     u1840:
  9618  0117                     l3896:
  9619  0117  0840               	movf	(_width+1)^(0+128),w
  9620  0118  0020               	movlb	0	; select bank0
  9621  0119  00A6               	movwf	ctoa@w+1
  9622  011A  0021               	movlb	1	; select bank1
  9623  011B  083F               	movf	_width^(0+128),w
  9624  011C  0020               	movlb	0	; select bank0
  9625  011D  00A5               	movwf	ctoa@w
  9626  011E  2928               	goto	l3900
  9627  011F                     l3898:
  9628  011F  083F               	movf	_width^(0+128),w
  9629  0120  3EFF               	addlw	255
  9630  0121  0020               	movlb	0	; select bank0
  9631  0122  00A5               	movwf	ctoa@w
  9632  0123  30FF               	movlw	255
  9633  0124  0021               	movlb	1	; select bank1
  9634  0125  3D40               	addwfc	(_width+1)^(0+128),w
  9635  0126  0020               	movlb	0	; select bank0
  9636  0127  00A6               	movwf	ctoa@w+1
  9637  0128                     l3900:
  9638                           
  9639                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  9640  0128  0021               	movlb	1	; select bank1
  9641  0129  1C43               	btfss	_flags^(0+128),0
  9642  012A  292C               	goto	u1851
  9643  012B  292D               	goto	u1850
  9644  012C                     u1851:
  9645  012C  293C               	goto	l3904
  9646  012D                     u1850:
  9647  012D                     l3902:
  9648                           
  9649                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  9650  012D  087A               	movf	ctoa@c,w
  9651  012E  0020               	movlb	0	; select bank0
  9652  012F  00A0               	movwf	??_ctoa
  9653  0130  01A1               	clrf	??_ctoa+1
  9654  0131  0820               	movf	??_ctoa,w
  9655  0132  00F2               	movwf	fputc@c
  9656  0133  0821               	movf	??_ctoa+1,w
  9657  0134  00F3               	movwf	fputc@c+1
  9658  0135  0827               	movf	ctoa@fp,w
  9659  0136  00A2               	movwf	??_ctoa+2
  9660  0137  0822               	movf	??_ctoa+2,w
  9661  0138  00F4               	movwf	fputc@fp
  9662  0139  318E  26A5  3181   	fcall	_fputc
  9663  013C                     l3904:
  9664                           
  9665                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  9666  013C  0020               	movlb	0	; select bank0
  9667  013D  1BA6               	btfsc	ctoa@w+1,7
  9668  013E  2940               	goto	u1861
  9669  013F  2941               	goto	u1860
  9670  0140                     u1861:
  9671  0140  2942               	goto	l3908
  9672  0141                     u1860:
  9673  0141  2944               	goto	l1655
  9674  0142                     l3908:
  9675  0142  01A5               	clrf	ctoa@w
  9676  0143  01A6               	clrf	ctoa@w+1
  9677  0144                     l1655:
  9678                           
  9679                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  9680  0144  01A3               	clrf	ctoa@l
  9681  0145  01A4               	clrf	ctoa@l+1
  9682                           
  9683                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  9684  0146  2958               	goto	l3914
  9685  0147                     l3910:
  9686                           
  9687                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  9688  0147  3020               	movlw	32
  9689  0148  00F2               	movwf	fputc@c
  9690  0149  3000               	movlw	0
  9691  014A  00F3               	movwf	fputc@c+1
  9692  014B  0020               	movlb	0	; select bank0
  9693  014C  0827               	movf	ctoa@fp,w
  9694  014D  00A0               	movwf	??_ctoa
  9695  014E  0820               	movf	??_ctoa,w
  9696  014F  00F4               	movwf	fputc@fp
  9697  0150  318E  26A5  3181   	fcall	_fputc
  9698  0153                     l3912:
  9699                           
  9700                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 275:         ++l;
  9701  0153  3001               	movlw	1
  9702  0154  0020               	movlb	0	; select bank0
  9703  0155  07A3               	addwf	ctoa@l,f
  9704  0156  3000               	movlw	0
  9705  0157  3DA4               	addwfc	ctoa@l+1,f
  9706  0158                     l3914:
  9707                           
  9708                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  9709  0158  0824               	movf	ctoa@l+1,w
  9710  0159  3A80               	xorlw	128
  9711  015A  00A0               	movwf	??_ctoa
  9712  015B  0826               	movf	ctoa@w+1,w
  9713  015C  3A80               	xorlw	128
  9714  015D  0220               	subwf	??_ctoa,w
  9715  015E  1D03               	skipz
  9716  015F  2962               	goto	u1875
  9717  0160  0825               	movf	ctoa@w,w
  9718  0161  0223               	subwf	ctoa@l,w
  9719  0162                     u1875:
  9720  0162  1C03               	skipc
  9721  0163  2965               	goto	u1871
  9722  0164  2966               	goto	u1870
  9723  0165                     u1871:
  9724  0165  2947               	goto	l3910
  9725  0166                     u1870:
  9726  0166                     l1658:
  9727                           
  9728                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  9729  0166  0021               	movlb	1	; select bank1
  9730  0167  1843               	btfsc	_flags^(0+128),0
  9731  0168  296A               	goto	u1881
  9732  0169  296B               	goto	u1880
  9733  016A                     u1881:
  9734  016A  297A               	goto	l3918
  9735  016B                     u1880:
  9736  016B                     l3916:
  9737                           
  9738                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  9739  016B  087A               	movf	ctoa@c,w
  9740  016C  0020               	movlb	0	; select bank0
  9741  016D  00A0               	movwf	??_ctoa
  9742  016E  01A1               	clrf	??_ctoa+1
  9743  016F  0820               	movf	??_ctoa,w
  9744  0170  00F2               	movwf	fputc@c
  9745  0171  0821               	movf	??_ctoa+1,w
  9746  0172  00F3               	movwf	fputc@c+1
  9747  0173  0827               	movf	ctoa@fp,w
  9748  0174  00A2               	movwf	??_ctoa+2
  9749  0175  0822               	movf	??_ctoa+2,w
  9750  0176  00F4               	movwf	fputc@fp
  9751  0177  318E  26A5  3181   	fcall	_fputc
  9752  017A                     l3918:
  9753                           
  9754                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  9755  017A  0020               	movlb	0	; select bank0
  9756  017B  0823               	movf	ctoa@l,w
  9757  017C  3E01               	addlw	1
  9758  017D  00FA               	movwf	?_ctoa
  9759  017E  3000               	movlw	0
  9760  017F  3D24               	addwfc	ctoa@l+1,w
  9761  0180  00FB               	movwf	?_ctoa+1
  9762  0181                     l1660:
  9763  0181  0008               	return
  9764  0182                     __end_of_ctoa:
  9765                           
  9766                           	psect	text12
  9767  0EA5                     __ptext12:	
  9768 ;; *************** function _fputc *****************
  9769 ;; Defined at:
  9770 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  9771 ;; Parameters:    Size  Location     Type
  9772 ;;  c               2    2[COMMON] int 
  9773 ;;  fp              1    4[COMMON] PTR struct _IO_FILE
  9774 ;;		 -> sprintf@f(10), 
  9775 ;; Auto vars:     Size  Location     Type
  9776 ;;		None
  9777 ;; Return value:  Size  Location     Type
  9778 ;;                  2    2[COMMON] int 
  9779 ;; Registers used:
  9780 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9781 ;; Tracked objects:
  9782 ;;		On entry : 0/0
  9783 ;;		On exit  : 0/0
  9784 ;;		Unchanged: 0/0
  9785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9786 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9788 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9789 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9790 ;;Total ram usage:        8 bytes
  9791 ;; Hardware stack levels used: 1
  9792 ;; Hardware stack levels required when called: 2
  9793 ;; This function calls:
  9794 ;;		_putch
  9795 ;; This function is called by:
  9796 ;;		_pad
  9797 ;;		_ctoa
  9798 ;;		_vfpfcnvrt
  9799 ;;		_fputs
  9800 ;; This function uses a non-reentrant model
  9801 ;;
  9802                           
  9803  0EA5                     _fputc:	
  9804                           ;psect for function _fputc
  9805                           
  9806  0EA5                     l3726:	
  9807                           ;incstack = 0
  9808                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9809                           
  9810  0EA5  0874               	movf	fputc@fp,w
  9811  0EA6  1903               	btfsc	3,2
  9812  0EA7  2EA9               	goto	u1461
  9813  0EA8  2EAA               	goto	u1460
  9814  0EA9                     u1461:
  9815  0EA9  2EAF               	goto	l3730
  9816  0EAA                     u1460:
  9817  0EAA                     l3728:
  9818  0EAA  0874               	movf	fputc@fp,w
  9819  0EAB  1D03               	btfss	3,2
  9820  0EAC  2EAE               	goto	u1471
  9821  0EAD  2EAF               	goto	u1470
  9822  0EAE                     u1471:
  9823  0EAE  2EB4               	goto	l3732
  9824  0EAF                     u1470:
  9825  0EAF                     l3730:
  9826  0EAF  0872               	movf	fputc@c,w
  9827  0EB0  3197  279F  318E   	fcall	_putch
  9828  0EB3  2EF7               	goto	l1720
  9829  0EB4                     l3732:
  9830  0EB4  0874               	movf	fputc@fp,w
  9831  0EB5  3E08               	addlw	8
  9832  0EB6  0086               	movwf	6
  9833  0EB7  0187               	clrf	7
  9834  0EB8  0016               	moviw fsr1++
  9835  0EB9  0401               	iorwf	1,w
  9836  0EBA  1903               	btfsc	3,2
  9837  0EBB  2EBD               	goto	u1481
  9838  0EBC  2EBE               	goto	u1480
  9839  0EBD                     u1481:
  9840  0EBD  2EDC               	goto	l3736
  9841  0EBE                     u1480:
  9842  0EBE                     l3734:
  9843  0EBE  0874               	movf	fputc@fp,w
  9844  0EBF  3E08               	addlw	8
  9845  0EC0  0086               	movwf	6
  9846  0EC1  0187               	clrf	7
  9847  0EC2  3F40               	moviw [0]fsr1
  9848  0EC3  00F5               	movwf	??_fputc
  9849  0EC4  3F41               	moviw [1]fsr1
  9850  0EC5  00F6               	movwf	??_fputc+1
  9851  0EC6  0874               	movf	fputc@fp,w
  9852  0EC7  3E02               	addlw	2
  9853  0EC8  0086               	movwf	6
  9854  0EC9  0187               	clrf	7
  9855  0ECA  3F40               	moviw [0]fsr1
  9856  0ECB  00F7               	movwf	??_fputc+2
  9857  0ECC  3F41               	moviw [1]fsr1
  9858  0ECD  00F8               	movwf	??_fputc+3
  9859  0ECE  0878               	movf	??_fputc+3,w
  9860  0ECF  3A80               	xorlw	128
  9861  0ED0  00F9               	movwf	??_fputc+4
  9862  0ED1  0876               	movf	??_fputc+1,w
  9863  0ED2  3A80               	xorlw	128
  9864  0ED3  0279               	subwf	??_fputc+4,w
  9865  0ED4  1D03               	skipz
  9866  0ED5  2ED8               	goto	u1495
  9867  0ED6  0875               	movf	??_fputc,w
  9868  0ED7  0277               	subwf	??_fputc+2,w
  9869  0ED8                     u1495:
  9870  0ED8  1803               	skipnc
  9871  0ED9  2EDB               	goto	u1491
  9872  0EDA  2EDC               	goto	u1490
  9873  0EDB                     u1491:
  9874  0EDB  2EF7               	goto	l1720
  9875  0EDC                     u1490:
  9876  0EDC                     l3736:
  9877  0EDC  0872               	movf	fputc@c,w
  9878  0EDD  00F5               	movwf	??_fputc
  9879  0EDE  0874               	movf	fputc@fp,w
  9880  0EDF  0086               	movwf	6
  9881  0EE0  0187               	clrf	7
  9882  0EE1  0874               	movf	fputc@fp,w
  9883  0EE2  3E02               	addlw	2
  9884  0EE3  0084               	movwf	4
  9885  0EE4  0185               	clrf	5
  9886  0EE5  0800               	movf	0,w
  9887  0EE6  0701               	addwf	1,w
  9888  0EE7  00F6               	movwf	??_fputc+1
  9889  0EE8  0876               	movf	??_fputc+1,w
  9890  0EE9  0086               	movwf	6
  9891  0EEA  3001               	movlw	1	; select bank2/3
  9892  0EEB  0087               	movwf	7
  9893  0EEC  0875               	movf	??_fputc,w
  9894  0EED  0081               	movwf	1
  9895  0EEE                     l3738:
  9896  0EEE  0874               	movf	fputc@fp,w
  9897  0EEF  3E02               	addlw	2
  9898  0EF0  0086               	movwf	6
  9899  0EF1  0187               	clrf	7
  9900  0EF2  3001               	movlw	1
  9901  0EF3  0781               	addwf	1,f
  9902  0EF4  3141               	addfsr 1,1
  9903  0EF5  1803               	skipnc
  9904  0EF6  0A81               	incf	1,f
  9905  0EF7                     l1720:
  9906  0EF7  0008               	return
  9907  0EF8                     __end_of_fputc:
  9908                           
  9909                           	psect	text13
  9910  179F                     __ptext13:	
  9911 ;; *************** function _putch *****************
  9912 ;; Defined at:
  9913 ;;		line 146 in file "mcc_generated_files/eusart.c"
  9914 ;; Parameters:    Size  Location     Type
  9915 ;;  txData          1    wreg     unsigned char 
  9916 ;; Auto vars:     Size  Location     Type
  9917 ;;  txData          1    1[COMMON] unsigned char 
  9918 ;; Return value:  Size  Location     Type
  9919 ;;                  1    wreg      void 
  9920 ;; Registers used:
  9921 ;;		wreg, status,2, status,0, pclath, cstack
  9922 ;; Tracked objects:
  9923 ;;		On entry : 0/0
  9924 ;;		On exit  : 0/0
  9925 ;;		Unchanged: 0/0
  9926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9928 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9930 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9931 ;;Total ram usage:        1 bytes
  9932 ;; Hardware stack levels used: 1
  9933 ;; Hardware stack levels required when called: 1
  9934 ;; This function calls:
  9935 ;;		_EUSART_Write
  9936 ;; This function is called by:
  9937 ;;		_fputc
  9938 ;; This function uses a non-reentrant model
  9939 ;;
  9940                           
  9941  179F                     _putch:	
  9942                           ;psect for function _putch
  9943                           
  9944                           
  9945                           ;incstack = 0
  9946                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  9947                           ;putch@txData stored from wreg
  9948  179F  00F1               	movwf	putch@txData
  9949  17A0                     l3712:
  9950                           
  9951                           ;mcc_generated_files/eusart.c: 146: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 147: {;mcc_generated_files/eusart.c: 148:     EUSART_Write(txData);
  9952  17A0  0871               	movf	putch@txData,w
  9953  17A1  3197  27DD  3197   	fcall	_EUSART_Write
  9954  17A4                     l712:
  9955  17A4  0008               	return
  9956  17A5                     __end_of_putch:
  9957                           
  9958                           	psect	text14
  9959  17DD                     __ptext14:	
  9960 ;; *************** function _EUSART_Write *****************
  9961 ;; Defined at:
  9962 ;;		line 132 in file "mcc_generated_files/eusart.c"
  9963 ;; Parameters:    Size  Location     Type
  9964 ;;  txData          1    wreg     unsigned char 
  9965 ;; Auto vars:     Size  Location     Type
  9966 ;;  txData          1    0[COMMON] unsigned char 
  9967 ;; Return value:  Size  Location     Type
  9968 ;;                  1    wreg      void 
  9969 ;; Registers used:
  9970 ;;		wreg
  9971 ;; Tracked objects:
  9972 ;;		On entry : 0/0
  9973 ;;		On exit  : 0/0
  9974 ;;		Unchanged: 0/0
  9975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9977 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9979 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9980 ;;Total ram usage:        1 bytes
  9981 ;; Hardware stack levels used: 1
  9982 ;; This function calls:
  9983 ;;		Nothing
  9984 ;; This function is called by:
  9985 ;;		_putch
  9986 ;; This function uses a non-reentrant model
  9987 ;;
  9988                           
  9989  17DD                     _EUSART_Write:	
  9990                           ;psect for function _EUSART_Write
  9991                           
  9992                           
  9993                           ;incstack = 0
  9994                           ; Regs used in _EUSART_Write: [wreg]
  9995                           ;EUSART_Write@txData stored from wreg
  9996  17DD  00F0               	movwf	EUSART_Write@txData
  9997  17DE                     l3652:
  9998  17DE                     l703:	
  9999                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
 10000                           
 10001                           
 10002                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR3bits.TXIF)
 10003  17DE  002E               	movlb	14	; select bank14
 10004  17DF  1E0F               	btfss	15,4	;volatile
 10005  17E0  2FE2               	goto	u1411
 10006  17E1  2FE3               	goto	u1410
 10007  17E2                     u1411:
 10008  17E2  2FDE               	goto	l703
 10009  17E3                     u1410:
 10010  17E3                     l3654:
 10011                           
 10012                           ;mcc_generated_files/eusart.c: 138:     TX1REG = txData;
 10013  17E3  0870               	movf	EUSART_Write@txData,w
 10014  17E4  0022               	movlb	2	; select bank2
 10015  17E5  009A               	movwf	26	;volatile
 10016  17E6                     l706:
 10017  17E6  0008               	return
 10018  17E7                     __end_of_EUSART_Write:
 10019                           
 10020                           	psect	text15
 10021  0FA6                     __ptext15:	
 10022 ;; *************** function _lcd_puts *****************
 10023 ;; Defined at:
 10024 ;;		line 171 in file "LCD_i2c.c"
 10025 ;; Parameters:    Size  Location     Type
 10026 ;;  dato            2   22[BANK0 ] PTR unsigned char 
 10027 ;;		 -> STR_3(4), STR_1(14), 
 10028 ;; Auto vars:     Size  Location     Type
 10029 ;;		None
 10030 ;; Return value:  Size  Location     Type
 10031 ;;                  1    wreg      void 
 10032 ;; Registers used:
 10033 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10034 ;; Tracked objects:
 10035 ;;		On entry : 0/0
 10036 ;;		On exit  : 0/0
 10037 ;;		Unchanged: 0/0
 10038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10039 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10041 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10042 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10043 ;;Total ram usage:        4 bytes
 10044 ;; Hardware stack levels used: 1
 10045 ;; Hardware stack levels required when called: 13
 10046 ;; This function calls:
 10047 ;;		_lcd_gotoxy
 10048 ;;		_lcd_send_byte
 10049 ;; This function is called by:
 10050 ;;		_main
 10051 ;; This function uses a non-reentrant model
 10052 ;;
 10053                           
 10054  0FA6                     _lcd_puts:	
 10055                           ;psect for function _lcd_puts
 10056                           
 10057  0FA6                     l4364:	
 10058                           ;incstack = 0
 10059                           ; Regs used in _lcd_puts: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10060                           
 10061                           
 10062                           ;LCD_i2c.c: 172:     while (*dato){
 10063  0FA6  2FF5               	goto	l4386
 10064  0FA7                     l4366:
 10065                           
 10066                           ;LCD_i2c.c: 175:                 lcd_send_byte(0,1);
 10067  0FA7  01AD               	clrf	lcd_send_byte@n
 10068  0FA8  0AAD               	incf	lcd_send_byte@n,f
 10069  0FA9  3000               	movlw	0
 10070  0FAA  318B  2306  318F   	fcall	_lcd_send_byte
 10071  0FAD                     l4368:
 10072                           
 10073                           ;LCD_i2c.c: 176:                 _delay((unsigned long)((2)*(8000000/4000.0)));
 10074  0FAD  3006               	movlw	6
 10075  0FAE  0020               	movlb	0	; select bank0
 10076  0FAF  00B8               	movwf	??_lcd_puts
 10077  0FB0  3030               	movlw	48
 10078  0FB1                     u2567:
 10079  0FB1  0B89               	decfsz	9,f
 10080  0FB2  2FB1               	goto	u2567
 10081  0FB3  0BB8               	decfsz	??_lcd_puts,f
 10082  0FB4  2FB1               	goto	u2567
 10083  0FB5  0000               	nop
 10084  0FB6                     l4370:
 10085                           
 10086                           ;LCD_i2c.c: 177:                 g_LcdX = 0;
 10087  0FB6  0021               	movlb	1	; select bank1
 10088  0FB7  01CA               	clrf	_g_LcdX^(0+128)
 10089  0FB8                     l4372:
 10090                           
 10091                           ;LCD_i2c.c: 178:                 g_LcdY = 0;
 10092  0FB8  01C9               	clrf	_g_LcdY^(0+128)
 10093  0FB9                     l4374:
 10094                           
 10095                           ;LCD_i2c.c: 179:                 _delay((unsigned long)((2)*(8000000/4000.0)));
 10096  0FB9  3006               	movlw	6
 10097  0FBA  0020               	movlb	0	; select bank0
 10098  0FBB  00B8               	movwf	??_lcd_puts
 10099  0FBC  3030               	movlw	48
 10100  0FBD                     u2577:
 10101  0FBD  0B89               	decfsz	9,f
 10102  0FBE  2FBD               	goto	u2577
 10103  0FBF  0BB8               	decfsz	??_lcd_puts,f
 10104  0FC0  2FBD               	goto	u2577
 10105  0FC1  0000               	nop
 10106                           
 10107                           ;LCD_i2c.c: 180:                 break;
 10108  0FC2  2FF0               	goto	l4384
 10109  0FC3                     l4376:
 10110                           
 10111                           ;LCD_i2c.c: 182:                 lcd_gotoxy(1, g_LcdY+2);
 10112  0FC3  0021               	movlb	1	; select bank1
 10113  0FC4  0849               	movf	_g_LcdY^(0+128),w
 10114  0FC5  3E02               	addlw	2
 10115  0FC6  0020               	movlb	0	; select bank0
 10116  0FC7  00B8               	movwf	??_lcd_puts
 10117  0FC8  0838               	movf	??_lcd_puts,w
 10118  0FC9  00B1               	movwf	lcd_gotoxy@y
 10119  0FCA  3001               	movlw	1
 10120  0FCB  318D  25D6  318F   	fcall	_lcd_gotoxy
 10121                           
 10122                           ;LCD_i2c.c: 183:                 break;
 10123  0FCE  2FF0               	goto	l4384
 10124  0FCF                     l4378:
 10125                           
 10126                           ;LCD_i2c.c: 185:                 lcd_send_byte(1,*dato);
 10127  0FCF  0836               	movf	lcd_puts@dato,w
 10128  0FD0  0084               	movwf	4
 10129  0FD1  0837               	movf	lcd_puts@dato+1,w
 10130  0FD2  0085               	movwf	5
 10131  0FD3  0800               	movf	0,w	;code access
 10132  0FD4  00B8               	movwf	??_lcd_puts
 10133  0FD5  0838               	movf	??_lcd_puts,w
 10134  0FD6  00AD               	movwf	lcd_send_byte@n
 10135  0FD7  3001               	movlw	1
 10136  0FD8  318B  2306  318F   	fcall	_lcd_send_byte
 10137                           
 10138                           ;LCD_i2c.c: 186:                 break;
 10139  0FDB  2FF0               	goto	l4384
 10140  0FDC                     l4382:
 10141  0FDC  0836               	movf	lcd_puts@dato,w
 10142  0FDD  0084               	movwf	4
 10143  0FDE  0837               	movf	lcd_puts@dato+1,w
 10144  0FDF  0085               	movwf	5
 10145  0FE0  0800               	movf	0,w	;code access
 10146  0FE1  00B8               	movwf	??_lcd_puts
 10147  0FE2  01B9               	clrf	??_lcd_puts+1
 10148                           
 10149                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10150                           ; Switch size 1, requested type "simple"
 10151                           ; Number of cases is 1, Range of values is 0 to 0
 10152                           ; switch strategies available:
 10153                           ; Name         Instructions Cycles
 10154                           ; simple_byte            4     3 (average)
 10155                           ; direct_byte            8     6 (fixed)
 10156                           ; jumptable            260     6 (fixed)
 10157                           ;	Chosen strategy is simple_byte
 10158  0FE3  0839               	movf	??_lcd_puts+1,w
 10159  0FE4  3A00               	xorlw	0	; case 0
 10160  0FE5  1903               	skipnz
 10161  0FE6  2FE8               	goto	l4806
 10162  0FE7  2FCF               	goto	l4378
 10163  0FE8                     l4806:
 10164                           
 10165                           ; Switch size 1, requested type "simple"
 10166                           ; Number of cases is 2, Range of values is 10 to 12
 10167                           ; switch strategies available:
 10168                           ; Name         Instructions Cycles
 10169                           ; simple_byte            7     4 (average)
 10170                           ; direct_byte           15     9 (fixed)
 10171                           ; jumptable            263     9 (fixed)
 10172                           ;	Chosen strategy is simple_byte
 10173  0FE8  0838               	movf	??_lcd_puts,w
 10174  0FE9  3A0A               	xorlw	10	; case 10
 10175  0FEA  1903               	skipnz
 10176  0FEB  2FC3               	goto	l4376
 10177  0FEC  3A06               	xorlw	6	; case 12
 10178  0FED  1903               	skipnz
 10179  0FEE  2FA7               	goto	l4366
 10180  0FEF  2FCF               	goto	l4378
 10181  0FF0                     l4384:
 10182                           
 10183                           ;LCD_i2c.c: 190:         dato++;
 10184  0FF0  3001               	movlw	1
 10185  0FF1  0020               	movlb	0	; select bank0
 10186  0FF2  07B6               	addwf	lcd_puts@dato,f
 10187  0FF3  3000               	movlw	0
 10188  0FF4  3DB7               	addwfc	lcd_puts@dato+1,f
 10189  0FF5                     l4386:
 10190                           
 10191                           ;LCD_i2c.c: 172:     while (*dato){
 10192  0FF5  0020               	movlb	0	; select bank0
 10193  0FF6  0836               	movf	lcd_puts@dato,w
 10194  0FF7  0084               	movwf	4
 10195  0FF8  0837               	movf	lcd_puts@dato+1,w
 10196  0FF9  0085               	movwf	5
 10197  0FFA  0012               	moviw fsr0++
 10198  0FFB  1D03               	btfss	3,2
 10199  0FFC  2FFE               	goto	u2361
 10200  0FFD  2FFF               	goto	u2360
 10201  0FFE                     u2361:
 10202  0FFE  2FDC               	goto	l4382
 10203  0FFF                     u2360:
 10204  0FFF                     l908:
 10205  0FFF  0008               	return
 10206  1000                     __end_of_lcd_puts:
 10207                           
 10208                           	psect	text16
 10209  0E1A                     __ptext16:	
 10210 ;; *************** function _lcd_putc *****************
 10211 ;; Defined at:
 10212 ;;		line 153 in file "LCD_i2c.c"
 10213 ;; Parameters:    Size  Location     Type
 10214 ;;  c               1    wreg     unsigned char 
 10215 ;; Auto vars:     Size  Location     Type
 10216 ;;  c               1   24[BANK0 ] unsigned char 
 10217 ;; Return value:  Size  Location     Type
 10218 ;;                  1    wreg      void 
 10219 ;; Registers used:
 10220 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10221 ;; Tracked objects:
 10222 ;;		On entry : 0/0
 10223 ;;		On exit  : 0/0
 10224 ;;		Unchanged: 0/0
 10225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10227 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10228 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10229 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10230 ;;Total ram usage:        3 bytes
 10231 ;; Hardware stack levels used: 1
 10232 ;; Hardware stack levels required when called: 13
 10233 ;; This function calls:
 10234 ;;		_lcd_gotoxy
 10235 ;;		_lcd_send_byte
 10236 ;; This function is called by:
 10237 ;;		_main
 10238 ;; This function uses a non-reentrant model
 10239 ;;
 10240                           
 10241  0E1A                     _lcd_putc:	
 10242                           ;psect for function _lcd_putc
 10243                           
 10244                           
 10245                           ;incstack = 0
 10246                           ; Regs used in _lcd_putc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10247                           ;lcd_putc@c stored from wreg
 10248  0E1A  0020               	movlb	0	; select bank0
 10249  0E1B  00B8               	movwf	lcd_putc@c
 10250  0E1C                     l4398:
 10251                           
 10252                           ;LCD_i2c.c: 154:     switch(c){
 10253  0E1C  2E4E               	goto	l4416
 10254  0E1D                     l4400:
 10255                           
 10256                           ;LCD_i2c.c: 156:             lcd_send_byte(0,1);
 10257  0E1D  01AD               	clrf	lcd_send_byte@n
 10258  0E1E  0AAD               	incf	lcd_send_byte@n,f
 10259  0E1F  3000               	movlw	0
 10260  0E20  318B  2306  318E   	fcall	_lcd_send_byte
 10261  0E23                     l4402:
 10262                           
 10263                           ;LCD_i2c.c: 157:             _delay((unsigned long)((2)*(8000000/4000.0)));
 10264  0E23  3006               	movlw	6
 10265  0E24  0020               	movlb	0	; select bank0
 10266  0E25  00B6               	movwf	??_lcd_putc
 10267  0E26  3030               	movlw	48
 10268  0E27                     u2587:
 10269  0E27  0B89               	decfsz	9,f
 10270  0E28  2E27               	goto	u2587
 10271  0E29  0BB6               	decfsz	??_lcd_putc,f
 10272  0E2A  2E27               	goto	u2587
 10273  0E2B  0000               	nop
 10274  0E2C                     l4404:
 10275                           
 10276                           ;LCD_i2c.c: 158:             g_LcdX = 0;
 10277  0E2C  0021               	movlb	1	; select bank1
 10278  0E2D  01CA               	clrf	_g_LcdX^(0+128)
 10279  0E2E                     l4406:
 10280                           
 10281                           ;LCD_i2c.c: 159:             g_LcdY = 0;
 10282  0E2E  01C9               	clrf	_g_LcdY^(0+128)
 10283  0E2F                     l4408:
 10284                           
 10285                           ;LCD_i2c.c: 160:             _delay((unsigned long)((2)*(8000000/4000.0)));
 10286  0E2F  3006               	movlw	6
 10287  0E30  0020               	movlb	0	; select bank0
 10288  0E31  00B6               	movwf	??_lcd_putc
 10289  0E32  3030               	movlw	48
 10290  0E33                     u2597:
 10291  0E33  0B89               	decfsz	9,f
 10292  0E34  2E33               	goto	u2597
 10293  0E35  0BB6               	decfsz	??_lcd_putc,f
 10294  0E36  2E33               	goto	u2597
 10295  0E37  0000               	nop
 10296                           
 10297                           ;LCD_i2c.c: 161:             break;
 10298  0E38  2E5E               	goto	l897
 10299  0E39                     l4410:
 10300                           
 10301                           ;LCD_i2c.c: 163:             lcd_gotoxy(1, g_LcdY+2);
 10302  0E39  0021               	movlb	1	; select bank1
 10303  0E3A  0849               	movf	_g_LcdY^(0+128),w
 10304  0E3B  3E02               	addlw	2
 10305  0E3C  0020               	movlb	0	; select bank0
 10306  0E3D  00B6               	movwf	??_lcd_putc
 10307  0E3E  0836               	movf	??_lcd_putc,w
 10308  0E3F  00B1               	movwf	lcd_gotoxy@y
 10309  0E40  3001               	movlw	1
 10310  0E41  318D  25D6  318E   	fcall	_lcd_gotoxy
 10311                           
 10312                           ;LCD_i2c.c: 164:             break;
 10313  0E44  2E5E               	goto	l897
 10314  0E45                     l4412:
 10315                           
 10316                           ;LCD_i2c.c: 166:             lcd_send_byte(1,c);
 10317  0E45  0838               	movf	lcd_putc@c,w
 10318  0E46  00B6               	movwf	??_lcd_putc
 10319  0E47  0836               	movf	??_lcd_putc,w
 10320  0E48  00AD               	movwf	lcd_send_byte@n
 10321  0E49  3001               	movlw	1
 10322  0E4A  318B  2306  318E   	fcall	_lcd_send_byte
 10323                           
 10324                           ;LCD_i2c.c: 167:             break;
 10325  0E4D  2E5E               	goto	l897
 10326  0E4E                     l4416:
 10327  0E4E  0838               	movf	lcd_putc@c,w
 10328  0E4F  00B6               	movwf	??_lcd_putc
 10329  0E50  01B7               	clrf	??_lcd_putc+1
 10330                           
 10331                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10332                           ; Switch size 1, requested type "simple"
 10333                           ; Number of cases is 1, Range of values is 0 to 0
 10334                           ; switch strategies available:
 10335                           ; Name         Instructions Cycles
 10336                           ; simple_byte            4     3 (average)
 10337                           ; direct_byte            8     6 (fixed)
 10338                           ; jumptable            260     6 (fixed)
 10339                           ;	Chosen strategy is simple_byte
 10340  0E51  0837               	movf	??_lcd_putc+1,w
 10341  0E52  3A00               	xorlw	0	; case 0
 10342  0E53  1903               	skipnz
 10343  0E54  2E56               	goto	l4808
 10344  0E55  2E45               	goto	l4412
 10345  0E56                     l4808:
 10346                           
 10347                           ; Switch size 1, requested type "simple"
 10348                           ; Number of cases is 2, Range of values is 10 to 12
 10349                           ; switch strategies available:
 10350                           ; Name         Instructions Cycles
 10351                           ; simple_byte            7     4 (average)
 10352                           ; direct_byte           15     9 (fixed)
 10353                           ; jumptable            263     9 (fixed)
 10354                           ;	Chosen strategy is simple_byte
 10355  0E56  0836               	movf	??_lcd_putc,w
 10356  0E57  3A0A               	xorlw	10	; case 10
 10357  0E58  1903               	skipnz
 10358  0E59  2E39               	goto	l4410
 10359  0E5A  3A06               	xorlw	6	; case 12
 10360  0E5B  1903               	skipnz
 10361  0E5C  2E1D               	goto	l4400
 10362  0E5D  2E45               	goto	l4412
 10363  0E5E                     l897:
 10364  0E5E  0008               	return
 10365  0E5F                     __end_of_lcd_putc:
 10366                           
 10367                           	psect	text17
 10368  0182                     __ptext17:	
 10369 ;; *************** function _lcd_init *****************
 10370 ;; Defined at:
 10371 ;;		line 70 in file "LCD_i2c.c"
 10372 ;; Parameters:    Size  Location     Type
 10373 ;;		None
 10374 ;; Auto vars:     Size  Location     Type
 10375 ;;  i               1   18[BANK0 ] unsigned char 
 10376 ;; Return value:  Size  Location     Type
 10377 ;;                  1    wreg      void 
 10378 ;; Registers used:
 10379 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10380 ;; Tracked objects:
 10381 ;;		On entry : 0/0
 10382 ;;		On exit  : 0/0
 10383 ;;		Unchanged: 0/0
 10384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10386 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10387 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10388 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10389 ;;Total ram usage:        2 bytes
 10390 ;; Hardware stack levels used: 1
 10391 ;; Hardware stack levels required when called: 12
 10392 ;; This function calls:
 10393 ;;		_I2C1_Write1ByteRegister
 10394 ;;		_Send_D7_D4
 10395 ;;		_lcd_send_byte
 10396 ;; This function is called by:
 10397 ;;		_main
 10398 ;; This function uses a non-reentrant model
 10399 ;;
 10400                           
 10401  0182                     _lcd_init:	
 10402                           ;psect for function _lcd_init
 10403                           
 10404  0182                     l4304:	
 10405                           ;incstack = 0
 10406                           ; Regs used in _lcd_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10407                           
 10408                           
 10409                           ;LCD_i2c.c: 71:    uint8_t i;;LCD_i2c.c: 74:         I2C1_Write1ByteRegister(32|(7),0,0)
      +                          ;
 10410  0182  0020               	movlb	0	; select bank0
 10411  0183  01A5               	clrf	I2C1_Write1ByteRegister@reg
 10412  0184  01A6               	clrf	I2C1_Write1ByteRegister@data
 10413  0185  3027               	movlw	39
 10414  0186  318D  2533  3181   	fcall	_I2C1_Write1ByteRegister
 10415  0189                     l4306:
 10416                           
 10417                           ;LCD_i2c.c: 82:    _delay((unsigned long)((35)*(8000000/4000.0)));
 10418  0189  305B               	movlw	91
 10419  018A  0020               	movlb	0	; select bank0
 10420  018B  00B1               	movwf	??_lcd_init
 10421  018C  30E7               	movlw	231
 10422  018D                     u2607:
 10423  018D  0B89               	decfsz	9,f
 10424  018E  298D               	goto	u2607
 10425  018F  0BB1               	decfsz	??_lcd_init,f
 10426  0190  298D               	goto	u2607
 10427  0191  3200               	nop2
 10428  0192                     l4308:
 10429                           
 10430                           ;LCD_i2c.c: 84:    for(i=0 ;i < 3; i++){
 10431  0192  0020               	movlb	0	; select bank0
 10432  0193  01B2               	clrf	lcd_init@i
 10433  0194                     l4314:
 10434                           
 10435                           ;LCD_i2c.c: 85:       Send_D7_D4(0,0x03);
 10436  0194  3003               	movlw	3
 10437  0195  00B1               	movwf	??_lcd_init
 10438  0196  0831               	movf	??_lcd_init,w
 10439  0197  00A9               	movwf	Send_D7_D4@nibble
 10440  0198  3000               	movlw	0
 10441  0199  3180  2054  3181   	fcall	_Send_D7_D4
 10442  019C                     l4316:
 10443                           
 10444                           ;LCD_i2c.c: 86:       _delay((unsigned long)((5)*(8000000/4000.0)));
 10445  019C  300D               	movlw	13
 10446  019D  0020               	movlb	0	; select bank0
 10447  019E  00B1               	movwf	??_lcd_init
 10448  019F  30FB               	movlw	251
 10449  01A0                     u2617:
 10450  01A0  0B89               	decfsz	9,f
 10451  01A1  29A0               	goto	u2617
 10452  01A2  0BB1               	decfsz	??_lcd_init,f
 10453  01A3  29A0               	goto	u2617
 10454  01A4  3200               	nop2
 10455  01A5                     l4318:
 10456                           
 10457                           ;LCD_i2c.c: 87:    }
 10458  01A5  3001               	movlw	1
 10459  01A6  0020               	movlb	0	; select bank0
 10460  01A7  00B1               	movwf	??_lcd_init
 10461  01A8  0831               	movf	??_lcd_init,w
 10462  01A9  07B2               	addwf	lcd_init@i,f
 10463  01AA                     l4320:
 10464  01AA  3003               	movlw	3
 10465  01AB  0232               	subwf	lcd_init@i,w
 10466  01AC  1C03               	skipc
 10467  01AD  29AF               	goto	u2331
 10468  01AE  29B0               	goto	u2330
 10469  01AF                     u2331:
 10470  01AF  2994               	goto	l4314
 10471  01B0                     u2330:
 10472  01B0                     l4322:
 10473                           
 10474                           ;LCD_i2c.c: 88:     Send_D7_D4(0,0x02);
 10475  01B0  3002               	movlw	2
 10476  01B1  00B1               	movwf	??_lcd_init
 10477  01B2  0831               	movf	??_lcd_init,w
 10478  01B3  00A9               	movwf	Send_D7_D4@nibble
 10479  01B4  3000               	movlw	0
 10480  01B5  3180  2054  3181   	fcall	_Send_D7_D4
 10481                           
 10482                           ;LCD_i2c.c: 91:     lcd_send_byte(0, 0x28);
 10483  01B8  3028               	movlw	40
 10484  01B9  0020               	movlb	0	; select bank0
 10485  01BA  00B1               	movwf	??_lcd_init
 10486  01BB  0831               	movf	??_lcd_init,w
 10487  01BC  00AD               	movwf	lcd_send_byte@n
 10488  01BD  3000               	movlw	0
 10489  01BE  318B  2306  3181   	fcall	_lcd_send_byte
 10490  01C1                     l4324:
 10491                           
 10492                           ;LCD_i2c.c: 92:     _delay((unsigned long)((5)*(8000000/4000.0)));
 10493  01C1  300D               	movlw	13
 10494  01C2  0020               	movlb	0	; select bank0
 10495  01C3  00B1               	movwf	??_lcd_init
 10496  01C4  30FB               	movlw	251
 10497  01C5                     u2627:
 10498  01C5  0B89               	decfsz	9,f
 10499  01C6  29C5               	goto	u2627
 10500  01C7  0BB1               	decfsz	??_lcd_init,f
 10501  01C8  29C5               	goto	u2627
 10502  01C9  3200               	nop2
 10503  01CA                     l4326:
 10504                           
 10505                           ;LCD_i2c.c: 93:     lcd_send_byte(0, 0x08);
 10506  01CA  3008               	movlw	8
 10507  01CB  0020               	movlb	0	; select bank0
 10508  01CC  00B1               	movwf	??_lcd_init
 10509  01CD  0831               	movf	??_lcd_init,w
 10510  01CE  00AD               	movwf	lcd_send_byte@n
 10511  01CF  3000               	movlw	0
 10512  01D0  318B  2306  3181   	fcall	_lcd_send_byte
 10513                           
 10514                           ;LCD_i2c.c: 94:     _delay((unsigned long)((5)*(8000000/4000.0)));
 10515  01D3  300D               	movlw	13
 10516  01D4  0020               	movlb	0	; select bank0
 10517  01D5  00B1               	movwf	??_lcd_init
 10518  01D6  30FB               	movlw	251
 10519  01D7                     u2637:
 10520  01D7  0B89               	decfsz	9,f
 10521  01D8  29D7               	goto	u2637
 10522  01D9  0BB1               	decfsz	??_lcd_init,f
 10523  01DA  29D7               	goto	u2637
 10524  01DB  3200               	nop2
 10525  01DC                     l4328:
 10526                           
 10527                           ;LCD_i2c.c: 95:     lcd_send_byte(0, 0x01);
 10528  01DC  0020               	movlb	0	; select bank0
 10529  01DD  01AD               	clrf	lcd_send_byte@n
 10530  01DE  0AAD               	incf	lcd_send_byte@n,f
 10531  01DF  3000               	movlw	0
 10532  01E0  318B  2306  3181   	fcall	_lcd_send_byte
 10533  01E3                     l4330:
 10534                           
 10535                           ;LCD_i2c.c: 96:     _delay((unsigned long)((5)*(8000000/4000.0)));
 10536  01E3  300D               	movlw	13
 10537  01E4  0020               	movlb	0	; select bank0
 10538  01E5  00B1               	movwf	??_lcd_init
 10539  01E6  30FB               	movlw	251
 10540  01E7                     u2647:
 10541  01E7  0B89               	decfsz	9,f
 10542  01E8  29E7               	goto	u2647
 10543  01E9  0BB1               	decfsz	??_lcd_init,f
 10544  01EA  29E7               	goto	u2647
 10545  01EB  3200               	nop2
 10546                           
 10547                           ;LCD_i2c.c: 97:     lcd_send_byte(0, 0x06);
 10548  01EC  3006               	movlw	6
 10549  01ED  0020               	movlb	0	; select bank0
 10550  01EE  00B1               	movwf	??_lcd_init
 10551  01EF  0831               	movf	??_lcd_init,w
 10552  01F0  00AD               	movwf	lcd_send_byte@n
 10553  01F1  3000               	movlw	0
 10554  01F2  318B  2306  3181   	fcall	_lcd_send_byte
 10555  01F5                     l4332:
 10556                           
 10557                           ;LCD_i2c.c: 98:     _delay((unsigned long)((5)*(8000000/4000.0)));
 10558  01F5  300D               	movlw	13
 10559  01F6  0020               	movlb	0	; select bank0
 10560  01F7  00B1               	movwf	??_lcd_init
 10561  01F8  30FB               	movlw	251
 10562  01F9                     u2657:
 10563  01F9  0B89               	decfsz	9,f
 10564  01FA  29F9               	goto	u2657
 10565  01FB  0BB1               	decfsz	??_lcd_init,f
 10566  01FC  29F9               	goto	u2657
 10567  01FD  3200               	nop2
 10568  01FE                     l4334:
 10569                           
 10570                           ;LCD_i2c.c: 99:     lcd_send_byte(0, 0x0C);
 10571  01FE  300C               	movlw	12
 10572  01FF  0020               	movlb	0	; select bank0
 10573  0200  00B1               	movwf	??_lcd_init
 10574  0201  0831               	movf	??_lcd_init,w
 10575  0202  00AD               	movwf	lcd_send_byte@n
 10576  0203  3000               	movlw	0
 10577  0204  318B  2306  3181   	fcall	_lcd_send_byte
 10578  0207                     l4336:
 10579                           
 10580                           ;LCD_i2c.c: 119:    g_LcdX = 0;
 10581  0207  0021               	movlb	1	; select bank1
 10582  0208  01CA               	clrf	_g_LcdX^(0+128)
 10583  0209                     l4338:
 10584                           
 10585                           ;LCD_i2c.c: 120:    g_LcdY = 0;
 10586  0209  01C9               	clrf	_g_LcdY^(0+128)
 10587  020A                     l879:
 10588  020A  0008               	return
 10589  020B                     __end_of_lcd_init:
 10590                           
 10591                           	psect	text18
 10592  0D33                     __ptext18:	
 10593 ;; *************** function _I2C1_Write1ByteRegister *****************
 10594 ;; Defined at:
 10595 ;;		line 91 in file "mcc_generated_files/examples/i2c1_master_example.c"
 10596 ;; Parameters:    Size  Location     Type
 10597 ;;  address         1    wreg     unsigned char 
 10598 ;;  reg             1    5[BANK0 ] unsigned char 
 10599 ;;  data            1    6[BANK0 ] unsigned char 
 10600 ;; Auto vars:     Size  Location     Type
 10601 ;;  address         1    8[BANK0 ] unsigned char 
 10602 ;; Return value:  Size  Location     Type
 10603 ;;                  1    wreg      void 
 10604 ;; Registers used:
 10605 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10606 ;; Tracked objects:
 10607 ;;		On entry : 0/0
 10608 ;;		On exit  : 0/0
 10609 ;;		Unchanged: 0/0
 10610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10611 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10612 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10613 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10614 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10615 ;;Total ram usage:        4 bytes
 10616 ;; Hardware stack levels used: 1
 10617 ;; Hardware stack levels required when called: 8
 10618 ;; This function calls:
 10619 ;;		_I2C1_Close
 10620 ;;		_I2C1_MasterWrite
 10621 ;;		_I2C1_Open
 10622 ;;		_I2C1_SetAddressNackCallback
 10623 ;;		_I2C1_SetBuffer
 10624 ;;		_I2C1_SetDataCompleteCallback
 10625 ;; This function is called by:
 10626 ;;		_lcd_init
 10627 ;; This function uses a non-reentrant model
 10628 ;;
 10629                           
 10630  0D33                     _I2C1_Write1ByteRegister:	
 10631                           ;psect for function _I2C1_Write1ByteRegister
 10632                           
 10633                           
 10634                           ;incstack = 0
 10635                           ; Regs used in _I2C1_Write1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10636                           ;I2C1_Write1ByteRegister@address stored from wreg
 10637  0D33  0020               	movlb	0	; select bank0
 10638  0D34  00A8               	movwf	I2C1_Write1ByteRegister@address
 10639  0D35                     l4114:
 10640  0D35                     l4116:	
 10641                           ;mcc_generated_files/examples/i2c1_master_example.c: 91: void I2C1_Write1ByteRegister(i2
      +                          c1_address_t address, uint8_t reg, uint8_t data);mcc_generated_files/examples/i2c1_maste
      +                          r_example.c: 92: {;mcc_generated_files/examples/i2c1_master_example.c: 93:     while(!I2
      +                          C1_Open(address));
 10642                           
 10643  0D35  0020               	movlb	0	; select bank0
 10644  0D36  0828               	movf	I2C1_Write1ByteRegister@address,w
 10645  0D37  318D  259C  318D   	fcall	_I2C1_Open
 10646  0D3A  3A00               	xorlw	0
 10647  0D3B  1903               	skipnz
 10648  0D3C  2D3E               	goto	u2201
 10649  0D3D  2D3F               	goto	u2200
 10650  0D3E                     u2201:
 10651  0D3E  2D35               	goto	l4116
 10652  0D3F                     u2200:
 10653  0D3F                     l4118:
 10654                           
 10655                           ;mcc_generated_files/examples/i2c1_master_example.c: 94:     I2C1_SetDataCompleteCallbac
      +                          k(wr1RegCompleteHandler,&data);
 10656  0D3F  306D               	movlw	low _wr1RegCompleteHandler
 10657  0D40  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 10658  0D41  300A               	movlw	high _wr1RegCompleteHandler
 10659  0D42  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 10660  0D43  3026               	movlw	(low (I2C1_Write1ByteRegister@data| 0))& (0+255)
 10661  0D44  0020               	movlb	0	; select bank0
 10662  0D45  00A7               	movwf	??_I2C1_Write1ByteRegister
 10663  0D46  0827               	movf	??_I2C1_Write1ByteRegister,w
 10664  0D47  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 10665  0D48  3197  27F3  318D   	fcall	_I2C1_SetDataCompleteCallback
 10666  0D4B                     l4120:
 10667                           
 10668                           ;mcc_generated_files/examples/i2c1_master_example.c: 95:     I2C1_SetBuffer(&reg,1);
 10669  0D4B  3001               	movlw	1
 10670  0D4C  00F0               	movwf	I2C1_SetBuffer@bufferSize
 10671  0D4D  3000               	movlw	0
 10672  0D4E  00F1               	movwf	I2C1_SetBuffer@bufferSize+1
 10673  0D4F  3025               	movlw	(low (I2C1_Write1ByteRegister@reg| 0))& (0+255)
 10674  0D50  318A  222A  318D   	fcall	_I2C1_SetBuffer
 10675  0D53                     l4122:
 10676                           
 10677                           ;mcc_generated_files/examples/i2c1_master_example.c: 96:     I2C1_SetAddressNackCallback
      +                          (((void*)0),((void*)0));
 10678  0D53  3000               	movlw	0
 10679  0D54  00F5               	movwf	I2C1_SetAddressNackCallback@cb
 10680  0D55  00F6               	movwf	I2C1_SetAddressNackCallback@cb+1
 10681  0D56  01F7               	clrf	I2C1_SetAddressNackCallback@ptr
 10682  0D57  318A  221D  318D   	fcall	_I2C1_SetAddressNackCallback
 10683  0D5A                     l4124:
 10684                           
 10685                           ;mcc_generated_files/examples/i2c1_master_example.c: 97:     I2C1_MasterWrite();
 10686  0D5A  3197  277C  318D   	fcall	_I2C1_MasterWrite
 10687  0D5D                     l4126:	
 10688                           ;mcc_generated_files/examples/i2c1_master_example.c: 98:     while(I2C1_BUSY == I2C1_Clo
      +                          se());
 10689                           
 10690  0D5D  318B  2321  318D   	fcall	_I2C1_Close
 10691  0D60  3A01               	xorlw	1
 10692  0D61  1903               	skipnz
 10693  0D62  2D64               	goto	u2211
 10694  0D63  2D65               	goto	u2210
 10695  0D64                     u2211:
 10696  0D64  2D5D               	goto	l4126
 10697  0D65                     u2210:
 10698  0D65                     l51:
 10699  0D65  0008               	return
 10700  0D66                     __end_of_I2C1_Write1ByteRegister:
 10701                           
 10702                           	psect	text19
 10703  0A7E                     __ptext19:	
 10704 ;; *************** function _lcd_clear *****************
 10705 ;; Defined at:
 10706 ;;		line 194 in file "LCD_i2c.c"
 10707 ;; Parameters:    Size  Location     Type
 10708 ;;		None
 10709 ;; Auto vars:     Size  Location     Type
 10710 ;;		None
 10711 ;; Return value:  Size  Location     Type
 10712 ;;                  1    wreg      void 
 10713 ;; Registers used:
 10714 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10715 ;; Tracked objects:
 10716 ;;		On entry : 0/0
 10717 ;;		On exit  : 0/0
 10718 ;;		Unchanged: 0/0
 10719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10722 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10723 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10724 ;;Total ram usage:        1 bytes
 10725 ;; Hardware stack levels used: 1
 10726 ;; Hardware stack levels required when called: 12
 10727 ;; This function calls:
 10728 ;;		_lcd_send_byte
 10729 ;; This function is called by:
 10730 ;;		_main
 10731 ;; This function uses a non-reentrant model
 10732 ;;
 10733                           
 10734  0A7E                     _lcd_clear:	
 10735                           ;psect for function _lcd_clear
 10736                           
 10737  0A7E                     l4424:	
 10738                           ;incstack = 0
 10739                           ; Regs used in _lcd_clear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10740                           
 10741                           
 10742                           ;LCD_i2c.c: 195:      lcd_send_byte(0,1);
 10743  0A7E  0020               	movlb	0	; select bank0
 10744  0A7F  01AD               	clrf	lcd_send_byte@n
 10745  0A80  0AAD               	incf	lcd_send_byte@n,f
 10746  0A81  3000               	movlw	0
 10747  0A82  318B  2306  318A   	fcall	_lcd_send_byte
 10748  0A85                     l4426:
 10749                           
 10750                           ;LCD_i2c.c: 196:      _delay((unsigned long)((2)*(8000000/4000.0)));
 10751  0A85  3006               	movlw	6
 10752  0A86  0020               	movlb	0	; select bank0
 10753  0A87  00B1               	movwf	??_lcd_clear
 10754  0A88  3030               	movlw	48
 10755  0A89                     u2667:
 10756  0A89  0B89               	decfsz	9,f
 10757  0A8A  2A89               	goto	u2667
 10758  0A8B  0BB1               	decfsz	??_lcd_clear,f
 10759  0A8C  2A89               	goto	u2667
 10760  0A8D  0000               	nop
 10761  0A8E                     l911:
 10762  0A8E  0008               	return
 10763  0A8F                     __end_of_lcd_clear:
 10764                           
 10765                           	psect	text20
 10766  0BCF                     __ptext20:	
 10767 ;; *************** function _lcd_BigFont_writeBigString *****************
 10768 ;; Defined at:
 10769 ;;		line 40 in file "BigFont_LCD.c"
 10770 ;; Parameters:    Size  Location     Type
 10771 ;;  str             2   32[BANK0 ] PTR unsigned char 
 10772 ;;		 -> buffer(18), STR_2(6), 
 10773 ;;  x               1   34[BANK0 ] unsigned char 
 10774 ;;  y               1   35[BANK0 ] unsigned char 
 10775 ;; Auto vars:     Size  Location     Type
 10776 ;;  c               1   39[BANK0 ] unsigned char 
 10777 ;; Return value:  Size  Location     Type
 10778 ;;                  1    wreg      void 
 10779 ;; Registers used:
 10780 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10781 ;; Tracked objects:
 10782 ;;		On entry : 0/0
 10783 ;;		On exit  : 0/0
 10784 ;;		Unchanged: 0/0
 10785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10786 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10787 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10788 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10789 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10790 ;;Total ram usage:        8 bytes
 10791 ;; Hardware stack levels used: 1
 10792 ;; Hardware stack levels required when called: 14
 10793 ;; This function calls:
 10794 ;;		_lcd_BigFont_writeBigChar
 10795 ;; This function is called by:
 10796 ;;		_main
 10797 ;; This function uses a non-reentrant model
 10798 ;;
 10799                           
 10800  0BCF                     _lcd_BigFont_writeBigString:	
 10801                           ;psect for function _lcd_BigFont_writeBigString
 10802                           
 10803  0BCF                     l4392:	
 10804                           ;incstack = 0
 10805                           ; Regs used in _lcd_BigFont_writeBigString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10806                           
 10807                           
 10808                           ;BigFont_LCD.c: 41:     char c;;BigFont_LCD.c: 42:     while ((c = *str++))
 10809  0BCF  2BE1               	goto	l4396
 10810  0BD0                     l4394:
 10811                           
 10812                           ;BigFont_LCD.c: 43:     x += lcd_BigFont_writeBigChar(c, x, y) + 1;
 10813  0BD0  0842               	movf	lcd_BigFont_writeBigString@x,w
 10814  0BD1  00C4               	movwf	??_lcd_BigFont_writeBigString
 10815  0BD2  0844               	movf	??_lcd_BigFont_writeBigString,w
 10816  0BD3  00B6               	movwf	lcd_BigFont_writeBigChar@x
 10817  0BD4  0843               	movf	lcd_BigFont_writeBigString@y,w
 10818  0BD5  00C5               	movwf	??_lcd_BigFont_writeBigString+1
 10819  0BD6  0845               	movf	??_lcd_BigFont_writeBigString+1,w
 10820  0BD7  00B7               	movwf	lcd_BigFont_writeBigChar@y
 10821  0BD8  0847               	movf	lcd_BigFont_writeBigString@c,w
 10822  0BD9  3182  229F  318B   	fcall	_lcd_BigFont_writeBigChar
 10823  0BDC  3E01               	addlw	1
 10824  0BDD  0020               	movlb	0	; select bank0
 10825  0BDE  00C6               	movwf	??_lcd_BigFont_writeBigString+2
 10826  0BDF  0846               	movf	??_lcd_BigFont_writeBigString+2,w
 10827  0BE0  07C2               	addwf	lcd_BigFont_writeBigString@x,f
 10828  0BE1                     l4396:
 10829                           
 10830                           ;BigFont_LCD.c: 42:     while ((c = *str++))
 10831  0BE1  0020               	movlb	0	; select bank0
 10832  0BE2  0841               	movf	lcd_BigFont_writeBigString@str+1,w
 10833  0BE3  00C5               	movwf	??_lcd_BigFont_writeBigString+1
 10834  0BE4  0840               	movf	lcd_BigFont_writeBigString@str,w
 10835  0BE5  00C4               	movwf	??_lcd_BigFont_writeBigString
 10836  0BE6  0AC0               	incf	lcd_BigFont_writeBigString@str,f
 10837  0BE7  1903               	skipnz
 10838  0BE8  0AC1               	incf	lcd_BigFont_writeBigString@str+1,f
 10839  0BE9  0844               	movf	??_lcd_BigFont_writeBigString,w
 10840  0BEA  0084               	movwf	4
 10841  0BEB  0845               	movf	??_lcd_BigFont_writeBigString+1,w
 10842  0BEC  0085               	movwf	5
 10843  0BED  0800               	movf	0,w	;code access
 10844  0BEE  00C6               	movwf	??_lcd_BigFont_writeBigString+2
 10845  0BEF  0846               	movf	??_lcd_BigFont_writeBigString+2,w
 10846  0BF0  00C7               	movwf	lcd_BigFont_writeBigString@c
 10847  0BF1  0847               	movf	lcd_BigFont_writeBigString@c,w
 10848  0BF2  1D03               	btfss	3,2
 10849  0BF3  2BF5               	goto	u2371
 10850  0BF4  2BF6               	goto	u2370
 10851  0BF5                     u2371:
 10852  0BF5  2BD0               	goto	l4394
 10853  0BF6                     u2370:
 10854  0BF6                     l967:
 10855  0BF6  0008               	return
 10856  0BF7                     __end_of_lcd_BigFont_writeBigString:
 10857                           
 10858                           	psect	text21
 10859  029F                     __ptext21:	
 10860 ;; *************** function _lcd_BigFont_writeBigChar *****************
 10861 ;; Defined at:
 10862 ;;		line 20 in file "BigFont_LCD.c"
 10863 ;; Parameters:    Size  Location     Type
 10864 ;;  ch              1    wreg     unsigned char 
 10865 ;;  x               1   22[BANK0 ] unsigned char 
 10866 ;;  y               1   23[BANK0 ] unsigned char 
 10867 ;; Auto vars:     Size  Location     Type
 10868 ;;  ch              1   31[BANK0 ] unsigned char 
 10869 ;; Return value:  Size  Location     Type
 10870 ;;                  1    wreg      unsigned char 
 10871 ;; Registers used:
 10872 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10873 ;; Tracked objects:
 10874 ;;		On entry : 0/0
 10875 ;;		On exit  : 0/0
 10876 ;;		Unchanged: 0/0
 10877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10878 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10879 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10880 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10881 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10882 ;;Total ram usage:       10 bytes
 10883 ;; Hardware stack levels used: 1
 10884 ;; Hardware stack levels required when called: 13
 10885 ;; This function calls:
 10886 ;;		___awdiv
 10887 ;;		_lcd_gotoxy
 10888 ;;		_lcd_send_byte
 10889 ;; This function is called by:
 10890 ;;		_lcd_BigFont_writeBigString
 10891 ;; This function uses a non-reentrant model
 10892 ;;
 10893                           
 10894  029F                     _lcd_BigFont_writeBigChar:	
 10895                           ;psect for function _lcd_BigFont_writeBigChar
 10896                           
 10897                           
 10898                           ;incstack = 0
 10899                           ; Regs used in _lcd_BigFont_writeBigChar: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10900                           ;lcd_BigFont_writeBigChar@ch stored from wreg
 10901  029F  0020               	movlb	0	; select bank0
 10902  02A0  00BF               	movwf	lcd_BigFont_writeBigChar@ch
 10903  02A1                     l4220:
 10904                           
 10905                           ;BigFont_LCD.c: 21:     if (ch < ' ' || ch > '_') return 0;
 10906  02A1  3020               	movlw	32
 10907  02A2  023F               	subwf	lcd_BigFont_writeBigChar@ch,w
 10908  02A3  1C03               	skipc
 10909  02A4  2AA6               	goto	u2241
 10910  02A5  2AA7               	goto	u2240
 10911  02A6                     u2241:
 10912  02A6  2AAD               	goto	l4224
 10913  02A7                     u2240:
 10914  02A7                     l4222:
 10915  02A7  3060               	movlw	96
 10916  02A8  023F               	subwf	lcd_BigFont_writeBigChar@ch,w
 10917  02A9  1C03               	skipc
 10918  02AA  2AAC               	goto	u2251
 10919  02AB  2AAD               	goto	u2250
 10920  02AC                     u2251:
 10921  02AC  2AAF               	goto	l4228
 10922  02AD                     u2250:
 10923  02AD                     l4224:
 10924  02AD  3000               	movlw	0
 10925  02AE  2B7A               	goto	l952
 10926  02AF                     l4228:
 10927                           
 10928                           ;BigFont_LCD.c: 23:     nb=0;
 10929  02AF  0021               	movlb	1	; select bank1
 10930  02B0  01CC               	clrf	_nb^(0+128)
 10931                           
 10932                           ;BigFont_LCD.c: 24:     for (bc=0; bc<8; bc++) {
 10933  02B1  01CB               	clrf	_bc^(0+128)
 10934  02B2                     l4230:
 10935  02B2  3008               	movlw	8
 10936  02B3  024B               	subwf	_bc^(0+128),w
 10937  02B4  1C03               	skipc
 10938  02B5  2AB7               	goto	u2261
 10939  02B6  2AB8               	goto	u2260
 10940  02B7                     u2261:
 10941  02B7  2AB9               	goto	l4234
 10942  02B8                     u2260:
 10943  02B8  2AF7               	goto	l4242
 10944  02B9                     l4234:
 10945                           
 10946                           ;BigFont_LCD.c: 25:         bb[bc] = (bigChars[ch-' '][bc] );
 10947  02B9  0020               	movlb	0	; select bank0
 10948  02BA  083F               	movf	lcd_BigFont_writeBigChar@ch,w
 10949  02BB  00B8               	movwf	??_lcd_BigFont_writeBigChar
 10950  02BC  01B9               	clrf	??_lcd_BigFont_writeBigChar+1
 10951  02BD  35B8               	lslf	??_lcd_BigFont_writeBigChar,f
 10952  02BE  0DB9               	rlf	??_lcd_BigFont_writeBigChar+1,f
 10953  02BF  35B8               	lslf	??_lcd_BigFont_writeBigChar,f
 10954  02C0  0DB9               	rlf	??_lcd_BigFont_writeBigChar+1,f
 10955  02C1  35B8               	lslf	??_lcd_BigFont_writeBigChar,f
 10956  02C2  0DB9               	rlf	??_lcd_BigFont_writeBigChar+1,f
 10957  02C3  3000               	movlw	low ((_bigChars| (0+32768)+65280))
 10958  02C4  00BA               	movwf	??_lcd_BigFont_writeBigChar+2
 10959  02C5  3087               	movlw	high ((_bigChars| (0+32768)+65280))
 10960  02C6  00BB               	movwf	??_lcd_BigFont_writeBigChar+3
 10961  02C7  0838               	movf	??_lcd_BigFont_writeBigChar,w
 10962  02C8  073A               	addwf	??_lcd_BigFont_writeBigChar+2,w
 10963  02C9  00BC               	movwf	??_lcd_BigFont_writeBigChar+4
 10964  02CA  0839               	movf	??_lcd_BigFont_writeBigChar+1,w
 10965  02CB  3D3B               	addwfc	??_lcd_BigFont_writeBigChar+3,w
 10966  02CC  00BD               	movwf	??_lcd_BigFont_writeBigChar+5
 10967  02CD  0021               	movlb	1	; select bank1
 10968  02CE  084B               	movf	_bc^(0+128),w
 10969  02CF  0020               	movlb	0	; select bank0
 10970  02D0  073C               	addwf	??_lcd_BigFont_writeBigChar+4,w
 10971  02D1  0084               	movwf	4
 10972  02D2  083D               	movf	??_lcd_BigFont_writeBigChar+5,w
 10973  02D3  1803               	skipnc
 10974  02D4  0A3D               	incf	??_lcd_BigFont_writeBigChar+5,w
 10975  02D5  0085               	movwf	5
 10976  02D6  0800               	movf	0,w	;code access
 10977  02D7  00BE               	movwf	??_lcd_BigFont_writeBigChar+6
 10978  02D8  0021               	movlb	1	; select bank1
 10979  02D9  084B               	movf	_bc^(0+128),w
 10980  02DA  3ED0               	addlw	(low (_bb| 0))& (0+255)
 10981  02DB  0086               	movwf	6
 10982  02DC  0187               	clrf	7
 10983  02DD  0020               	movlb	0	; select bank0
 10984  02DE  083E               	movf	??_lcd_BigFont_writeBigChar+6,w
 10985  02DF  0081               	movwf	1
 10986  02E0                     l4236:
 10987                           
 10988                           ;BigFont_LCD.c: 26:         if(bb[bc] != 0) nb++;
 10989  02E0  0021               	movlb	1	; select bank1
 10990  02E1  084B               	movf	_bc^(0+128),w
 10991  02E2  3ED0               	addlw	(low (_bb| 0))& (0+255)
 10992  02E3  0086               	movwf	6
 10993  02E4  0187               	clrf	7
 10994  02E5  0801               	movf	1,w
 10995  02E6  1903               	btfsc	3,2
 10996  02E7  2AE9               	goto	u2271
 10997  02E8  2AEA               	goto	u2270
 10998  02E9                     u2271:
 10999  02E9  2AF0               	goto	l955
 11000  02EA                     u2270:
 11001  02EA                     l4238:
 11002  02EA  3001               	movlw	1
 11003  02EB  0020               	movlb	0	; select bank0
 11004  02EC  00B8               	movwf	??_lcd_BigFont_writeBigChar
 11005  02ED  0838               	movf	??_lcd_BigFont_writeBigChar,w
 11006  02EE  0021               	movlb	1	; select bank1
 11007  02EF  07CC               	addwf	_nb^(0+128),f
 11008  02F0                     l955:
 11009                           
 11010                           ;BigFont_LCD.c: 27:     }
 11011  02F0  3001               	movlw	1
 11012  02F1  0020               	movlb	0	; select bank0
 11013  02F2  00B8               	movwf	??_lcd_BigFont_writeBigChar
 11014  02F3  0838               	movf	??_lcd_BigFont_writeBigChar,w
 11015  02F4  0021               	movlb	1	; select bank1
 11016  02F5  07CB               	addwf	_bc^(0+128),f
 11017  02F6  2AB2               	goto	l4230
 11018  02F7                     l4242:
 11019                           
 11020                           ;BigFont_LCD.c: 29:     bc=0;
 11021  02F7  01CB               	clrf	_bc^(0+128)
 11022  02F8                     l4244:
 11023                           
 11024                           ;BigFont_LCD.c: 30:     for (row = y; row < y+2; row++) {
 11025  02F8  0020               	movlb	0	; select bank0
 11026  02F9  0837               	movf	lcd_BigFont_writeBigChar@y,w
 11027  02FA  00B8               	movwf	??_lcd_BigFont_writeBigChar
 11028  02FB  0838               	movf	??_lcd_BigFont_writeBigChar,w
 11029  02FC  0021               	movlb	1	; select bank1
 11030  02FD  00CD               	movwf	_row^(0+128)
 11031  02FE  2B54               	goto	l4258
 11032  02FF                     l4246:
 11033                           
 11034                           ;BigFont_LCD.c: 31:         for (col = x; col < x+nb/2; col++ ) {
 11035  02FF  0020               	movlb	0	; select bank0
 11036  0300  0836               	movf	lcd_BigFont_writeBigChar@x,w
 11037  0301  00B8               	movwf	??_lcd_BigFont_writeBigChar
 11038  0302  0838               	movf	??_lcd_BigFont_writeBigChar,w
 11039  0303  0021               	movlb	1	; select bank1
 11040  0304  00CE               	movwf	_col^(0+128)
 11041  0305  2B2B               	goto	l4254
 11042  0306                     l4248:
 11043                           
 11044                           ;BigFont_LCD.c: 32:             lcd_gotoxy(col, row);
 11045  0306  0021               	movlb	1	; select bank1
 11046  0307  084D               	movf	_row^(0+128),w
 11047  0308  0020               	movlb	0	; select bank0
 11048  0309  00B8               	movwf	??_lcd_BigFont_writeBigChar
 11049  030A  0838               	movf	??_lcd_BigFont_writeBigChar,w
 11050  030B  00B1               	movwf	lcd_gotoxy@y
 11051  030C  0021               	movlb	1	; select bank1
 11052  030D  084E               	movf	_col^(0+128),w
 11053  030E  318D  25D6  3182   	fcall	_lcd_gotoxy
 11054                           
 11055                           ;BigFont_LCD.c: 33:             lcd_send_byte(1,bb[bc++]);
 11056  0311  0021               	movlb	1	; select bank1
 11057  0312  084B               	movf	_bc^(0+128),w
 11058  0313  3ED0               	addlw	(low (_bb| 0))& (0+255)
 11059  0314  0086               	movwf	6
 11060  0315  0187               	clrf	7
 11061  0316  0801               	movf	1,w
 11062  0317  0020               	movlb	0	; select bank0
 11063  0318  00B8               	movwf	??_lcd_BigFont_writeBigChar
 11064  0319  0838               	movf	??_lcd_BigFont_writeBigChar,w
 11065  031A  00AD               	movwf	lcd_send_byte@n
 11066  031B  3001               	movlw	1
 11067  031C  318B  2306  3182   	fcall	_lcd_send_byte
 11068  031F                     l4250:
 11069  031F  3001               	movlw	1
 11070  0320  0020               	movlb	0	; select bank0
 11071  0321  00B8               	movwf	??_lcd_BigFont_writeBigChar
 11072  0322  0838               	movf	??_lcd_BigFont_writeBigChar,w
 11073  0323  0021               	movlb	1	; select bank1
 11074  0324  07CB               	addwf	_bc^(0+128),f
 11075  0325                     l4252:
 11076                           
 11077                           ;BigFont_LCD.c: 34:         }
 11078  0325  3001               	movlw	1
 11079  0326  0020               	movlb	0	; select bank0
 11080  0327  00B8               	movwf	??_lcd_BigFont_writeBigChar
 11081  0328  0838               	movf	??_lcd_BigFont_writeBigChar,w
 11082  0329  0021               	movlb	1	; select bank1
 11083  032A  07CE               	addwf	_col^(0+128),f
 11084  032B                     l4254:
 11085  032B  3002               	movlw	2
 11086  032C  00F0               	movwf	___awdiv@divisor
 11087  032D  3000               	movlw	0
 11088  032E  00F1               	movwf	___awdiv@divisor+1
 11089  032F  084C               	movf	_nb^(0+128),w
 11090  0330  0020               	movlb	0	; select bank0
 11091  0331  00B8               	movwf	??_lcd_BigFont_writeBigChar
 11092  0332  01B9               	clrf	??_lcd_BigFont_writeBigChar+1
 11093  0333  0838               	movf	??_lcd_BigFont_writeBigChar,w
 11094  0334  00F2               	movwf	___awdiv@dividend
 11095  0335  0839               	movf	??_lcd_BigFont_writeBigChar+1,w
 11096  0336  00F3               	movwf	___awdiv@dividend+1
 11097  0337  3180  20AF  3182   	fcall	___awdiv
 11098  033A  0020               	movlb	0	; select bank0
 11099  033B  0836               	movf	lcd_BigFont_writeBigChar@x,w
 11100  033C  0770               	addwf	?___awdiv,w
 11101  033D  00BA               	movwf	??_lcd_BigFont_writeBigChar+2
 11102  033E  0871               	movf	?___awdiv+1,w
 11103  033F  1803               	skipnc
 11104  0340  0A71               	incf	?___awdiv+1,w
 11105  0341  00BB               	movwf	??_lcd_BigFont_writeBigChar+3
 11106  0342  083B               	movf	??_lcd_BigFont_writeBigChar+3,w
 11107  0343  3A80               	xorlw	128
 11108  0344  3C80               	sublw	128
 11109  0345  1D03               	skipz
 11110  0346  2B4A               	goto	u2285
 11111  0347  083A               	movf	??_lcd_BigFont_writeBigChar+2,w
 11112  0348  0021               	movlb	1	; select bank1
 11113  0349  024E               	subwf	_col^(0+128),w
 11114  034A                     u2285:
 11115  034A  1C03               	skipc
 11116  034B  2B4D               	goto	u2281
 11117  034C  2B4E               	goto	u2280
 11118  034D                     u2281:
 11119  034D  2B06               	goto	l4248
 11120  034E                     u2280:
 11121  034E                     l4256:
 11122                           
 11123                           ;BigFont_LCD.c: 35:     }
 11124  034E  3001               	movlw	1
 11125  034F  0020               	movlb	0	; select bank0
 11126  0350  00B8               	movwf	??_lcd_BigFont_writeBigChar
 11127  0351  0838               	movf	??_lcd_BigFont_writeBigChar,w
 11128  0352  0021               	movlb	1	; select bank1
 11129  0353  07CD               	addwf	_row^(0+128),f
 11130  0354                     l4258:
 11131  0354  0020               	movlb	0	; select bank0
 11132  0355  0837               	movf	lcd_BigFont_writeBigChar@y,w
 11133  0356  3E02               	addlw	2
 11134  0357  00B8               	movwf	??_lcd_BigFont_writeBigChar
 11135  0358  3000               	movlw	0
 11136  0359  1803               	skipnc
 11137  035A  3001               	movlw	1
 11138  035B  00B9               	movwf	??_lcd_BigFont_writeBigChar+1
 11139  035C  0839               	movf	??_lcd_BigFont_writeBigChar+1,w
 11140  035D  3A80               	xorlw	128
 11141  035E  3C80               	sublw	128
 11142  035F  1D03               	skipz
 11143  0360  2B64               	goto	u2295
 11144  0361  0838               	movf	??_lcd_BigFont_writeBigChar,w
 11145  0362  0021               	movlb	1	; select bank1
 11146  0363  024D               	subwf	_row^(0+128),w
 11147  0364                     u2295:
 11148  0364  1C03               	skipc
 11149  0365  2B67               	goto	u2291
 11150  0366  2B68               	goto	u2290
 11151  0367                     u2291:
 11152  0367  2AFF               	goto	l4246
 11153  0368                     u2290:
 11154  0368                     l4260:
 11155                           
 11156                           ;BigFont_LCD.c: 36:     return nb/2-1;
 11157  0368  3002               	movlw	2
 11158  0369  00F0               	movwf	___awdiv@divisor
 11159  036A  3000               	movlw	0
 11160  036B  00F1               	movwf	___awdiv@divisor+1
 11161  036C  0021               	movlb	1	; select bank1
 11162  036D  084C               	movf	_nb^(0+128),w
 11163  036E  0020               	movlb	0	; select bank0
 11164  036F  00B8               	movwf	??_lcd_BigFont_writeBigChar
 11165  0370  01B9               	clrf	??_lcd_BigFont_writeBigChar+1
 11166  0371  0838               	movf	??_lcd_BigFont_writeBigChar,w
 11167  0372  00F2               	movwf	___awdiv@dividend
 11168  0373  0839               	movf	??_lcd_BigFont_writeBigChar+1,w
 11169  0374  00F3               	movwf	___awdiv@dividend+1
 11170  0375  3180  20AF  3182   	fcall	___awdiv
 11171  0378  0870               	movf	?___awdiv,w
 11172  0379  3EFF               	addlw	255
 11173  037A                     l952:
 11174  037A  0008               	return
 11175  037B                     __end_of_lcd_BigFont_writeBigChar:
 11176                           
 11177                           	psect	text22
 11178  0DD6                     __ptext22:	
 11179 ;; *************** function _lcd_gotoxy *****************
 11180 ;; Defined at:
 11181 ;;		line 123 in file "LCD_i2c.c"
 11182 ;; Parameters:    Size  Location     Type
 11183 ;;  x               1    wreg     unsigned char 
 11184 ;;  y               1   17[BANK0 ] unsigned char 
 11185 ;; Auto vars:     Size  Location     Type
 11186 ;;  x               1   20[BANK0 ] unsigned char 
 11187 ;;  address         1   21[BANK0 ] unsigned char 
 11188 ;; Return value:  Size  Location     Type
 11189 ;;                  1    wreg      void 
 11190 ;; Registers used:
 11191 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11192 ;; Tracked objects:
 11193 ;;		On entry : 0/0
 11194 ;;		On exit  : 0/0
 11195 ;;		Unchanged: 0/0
 11196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11197 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11198 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11199 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11200 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11201 ;;Total ram usage:        5 bytes
 11202 ;; Hardware stack levels used: 1
 11203 ;; Hardware stack levels required when called: 12
 11204 ;; This function calls:
 11205 ;;		_lcd_send_byte
 11206 ;; This function is called by:
 11207 ;;		_main
 11208 ;;		_lcd_putc
 11209 ;;		_lcd_puts
 11210 ;;		_lcd_BigFont_writeBigChar
 11211 ;;		_lcd_showCustomChar
 11212 ;; This function uses a non-reentrant model
 11213 ;;
 11214                           
 11215  0DD6                     _lcd_gotoxy:	
 11216                           ;psect for function _lcd_gotoxy
 11217                           
 11218                           
 11219                           ;incstack = 0
 11220                           ; Regs used in _lcd_gotoxy: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11221                           ;lcd_gotoxy@x stored from wreg
 11222  0DD6  0020               	movlb	0	; select bank0
 11223  0DD7  00B4               	movwf	lcd_gotoxy@x
 11224  0DD8                     l3986:
 11225                           
 11226                           ;LCD_i2c.c: 124:    uint8_t address;;LCD_i2c.c: 125:    switch(y)
 11227  0DD8  2DEA               	goto	l4000
 11228  0DD9                     l3988:
 11229                           
 11230                           ;LCD_i2c.c: 128:          address = 0x00;
 11231  0DD9  01B5               	clrf	lcd_gotoxy@address
 11232                           
 11233                           ;LCD_i2c.c: 129:          break;
 11234  0DDA  2E00               	goto	l4002
 11235  0DDB                     l3990:
 11236                           
 11237                           ;LCD_i2c.c: 131:          address = 0x40;
 11238  0DDB  3040               	movlw	64
 11239  0DDC  00B2               	movwf	??_lcd_gotoxy
 11240  0DDD  0832               	movf	??_lcd_gotoxy,w
 11241  0DDE  00B5               	movwf	lcd_gotoxy@address
 11242                           
 11243                           ;LCD_i2c.c: 132:          break;
 11244  0DDF  2E00               	goto	l4002
 11245  0DE0                     l3992:
 11246                           
 11247                           ;LCD_i2c.c: 134:          address = 0x14;
 11248  0DE0  3014               	movlw	20
 11249  0DE1  00B2               	movwf	??_lcd_gotoxy
 11250  0DE2  0832               	movf	??_lcd_gotoxy,w
 11251  0DE3  00B5               	movwf	lcd_gotoxy@address
 11252                           
 11253                           ;LCD_i2c.c: 135:          break;
 11254  0DE4  2E00               	goto	l4002
 11255  0DE5                     l3994:
 11256                           
 11257                           ;LCD_i2c.c: 137:          address = 0x54;
 11258  0DE5  3054               	movlw	84
 11259  0DE6  00B2               	movwf	??_lcd_gotoxy
 11260  0DE7  0832               	movf	??_lcd_gotoxy,w
 11261  0DE8  00B5               	movwf	lcd_gotoxy@address
 11262                           
 11263                           ;LCD_i2c.c: 138:          break;
 11264  0DE9  2E00               	goto	l4002
 11265  0DEA                     l4000:
 11266  0DEA  0831               	movf	lcd_gotoxy@y,w
 11267  0DEB  00B2               	movwf	??_lcd_gotoxy
 11268  0DEC  01B3               	clrf	??_lcd_gotoxy+1
 11269                           
 11270                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11271                           ; Switch size 1, requested type "simple"
 11272                           ; Number of cases is 1, Range of values is 0 to 0
 11273                           ; switch strategies available:
 11274                           ; Name         Instructions Cycles
 11275                           ; simple_byte            4     3 (average)
 11276                           ; direct_byte            8     6 (fixed)
 11277                           ; jumptable            260     6 (fixed)
 11278                           ;	Chosen strategy is simple_byte
 11279  0DED  0833               	movf	??_lcd_gotoxy+1,w
 11280  0DEE  3A00               	xorlw	0	; case 0
 11281  0DEF  1903               	skipnz
 11282  0DF0  2DF2               	goto	l4810
 11283  0DF1  2DD9               	goto	l3988
 11284  0DF2                     l4810:
 11285                           
 11286                           ; Switch size 1, requested type "simple"
 11287                           ; Number of cases is 4, Range of values is 0 to 3
 11288                           ; switch strategies available:
 11289                           ; Name         Instructions Cycles
 11290                           ; simple_byte           13     7 (average)
 11291                           ; direct_byte           14     6 (fixed)
 11292                           ; jumptable            260     6 (fixed)
 11293                           ;	Chosen strategy is simple_byte
 11294  0DF2  0832               	movf	??_lcd_gotoxy,w
 11295  0DF3  3A00               	xorlw	0	; case 0
 11296  0DF4  1903               	skipnz
 11297  0DF5  2DD9               	goto	l3988
 11298  0DF6  3A01               	xorlw	1	; case 1
 11299  0DF7  1903               	skipnz
 11300  0DF8  2DDB               	goto	l3990
 11301  0DF9  3A03               	xorlw	3	; case 2
 11302  0DFA  1903               	skipnz
 11303  0DFB  2DE0               	goto	l3992
 11304  0DFC  3A01               	xorlw	1	; case 3
 11305  0DFD  1903               	skipnz
 11306  0DFE  2DE5               	goto	l3994
 11307  0DFF  2DD9               	goto	l3988
 11308  0E00                     l4002:
 11309                           
 11310                           ;LCD_i2c.c: 144:    address += x;
 11311  0E00  0834               	movf	lcd_gotoxy@x,w
 11312  0E01  00B2               	movwf	??_lcd_gotoxy
 11313  0E02  0832               	movf	??_lcd_gotoxy,w
 11314  0E03  07B5               	addwf	lcd_gotoxy@address,f
 11315  0E04                     l4004:
 11316                           
 11317                           ;LCD_i2c.c: 145:    lcd_send_byte(0, 0x80 | address);
 11318  0E04  0835               	movf	lcd_gotoxy@address,w
 11319  0E05  3880               	iorlw	128
 11320  0E06  00B2               	movwf	??_lcd_gotoxy
 11321  0E07  0832               	movf	??_lcd_gotoxy,w
 11322  0E08  00AD               	movwf	lcd_send_byte@n
 11323  0E09  3000               	movlw	0
 11324  0E0A  318B  2306  318D   	fcall	_lcd_send_byte
 11325  0E0D                     l4006:
 11326                           
 11327                           ;LCD_i2c.c: 149:    g_LcdX = x;
 11328  0E0D  0020               	movlb	0	; select bank0
 11329  0E0E  0834               	movf	lcd_gotoxy@x,w
 11330  0E0F  00B2               	movwf	??_lcd_gotoxy
 11331  0E10  0832               	movf	??_lcd_gotoxy,w
 11332  0E11  0021               	movlb	1	; select bank1
 11333  0E12  00CA               	movwf	_g_LcdX^(0+128)
 11334  0E13                     l4008:
 11335                           
 11336                           ;LCD_i2c.c: 150:    g_LcdY = y;
 11337  0E13  0020               	movlb	0	; select bank0
 11338  0E14  0831               	movf	lcd_gotoxy@y,w
 11339  0E15  00B2               	movwf	??_lcd_gotoxy
 11340  0E16  0832               	movf	??_lcd_gotoxy,w
 11341  0E17  0021               	movlb	1	; select bank1
 11342  0E18  00C9               	movwf	_g_LcdY^(0+128)
 11343  0E19                     l889:
 11344  0E19  0008               	return
 11345  0E1A                     __end_of_lcd_gotoxy:
 11346                           
 11347                           	psect	text23
 11348  00AF                     __ptext23:	
 11349 ;; *************** function ___awdiv *****************
 11350 ;; Defined at:
 11351 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
 11352 ;; Parameters:    Size  Location     Type
 11353 ;;  divisor         2    0[COMMON] int 
 11354 ;;  dividend        2    2[COMMON] int 
 11355 ;; Auto vars:     Size  Location     Type
 11356 ;;  quotient        2    7[COMMON] int 
 11357 ;;  sign            1    6[COMMON] unsigned char 
 11358 ;;  counter         1    5[COMMON] unsigned char 
 11359 ;; Return value:  Size  Location     Type
 11360 ;;                  2    0[COMMON] int 
 11361 ;; Registers used:
 11362 ;;		wreg, status,2, status,0
 11363 ;; Tracked objects:
 11364 ;;		On entry : 0/0
 11365 ;;		On exit  : 0/0
 11366 ;;		Unchanged: 0/0
 11367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11368 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11369 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11370 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11371 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11372 ;;Total ram usage:        9 bytes
 11373 ;; Hardware stack levels used: 1
 11374 ;; This function calls:
 11375 ;;		Nothing
 11376 ;; This function is called by:
 11377 ;;		_lcd_BigFont_writeBigChar
 11378 ;; This function uses a non-reentrant model
 11379 ;;
 11380                           
 11381  00AF                     ___awdiv:	
 11382                           ;psect for function ___awdiv
 11383                           
 11384  00AF                     l4016:	
 11385                           ;incstack = 0
 11386                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11387                           
 11388  00AF  01F6               	clrf	___awdiv@sign
 11389  00B0                     l4018:
 11390  00B0  1FF1               	btfss	___awdiv@divisor+1,7
 11391  00B1  28B3               	goto	u2051
 11392  00B2  28B4               	goto	u2050
 11393  00B3                     u2051:
 11394  00B3  28BB               	goto	l4024
 11395  00B4                     u2050:
 11396  00B4                     l4020:
 11397  00B4  09F0               	comf	___awdiv@divisor,f
 11398  00B5  09F1               	comf	___awdiv@divisor+1,f
 11399  00B6  0AF0               	incf	___awdiv@divisor,f
 11400  00B7  1903               	skipnz
 11401  00B8  0AF1               	incf	___awdiv@divisor+1,f
 11402  00B9                     l4022:
 11403  00B9  01F6               	clrf	___awdiv@sign
 11404  00BA  0AF6               	incf	___awdiv@sign,f
 11405  00BB                     l4024:
 11406  00BB  1FF3               	btfss	___awdiv@dividend+1,7
 11407  00BC  28BE               	goto	u2061
 11408  00BD  28BF               	goto	u2060
 11409  00BE                     u2061:
 11410  00BE  28C8               	goto	l4030
 11411  00BF                     u2060:
 11412  00BF                     l4026:
 11413  00BF  09F2               	comf	___awdiv@dividend,f
 11414  00C0  09F3               	comf	___awdiv@dividend+1,f
 11415  00C1  0AF2               	incf	___awdiv@dividend,f
 11416  00C2  1903               	skipnz
 11417  00C3  0AF3               	incf	___awdiv@dividend+1,f
 11418  00C4                     l4028:
 11419  00C4  3001               	movlw	1
 11420  00C5  00F4               	movwf	??___awdiv
 11421  00C6  0874               	movf	??___awdiv,w
 11422  00C7  06F6               	xorwf	___awdiv@sign,f
 11423  00C8                     l4030:
 11424  00C8  01F7               	clrf	___awdiv@quotient
 11425  00C9  01F8               	clrf	___awdiv@quotient+1
 11426  00CA                     l4032:
 11427  00CA  0870               	movf	___awdiv@divisor,w
 11428  00CB  0471               	iorwf	___awdiv@divisor+1,w
 11429  00CC  1903               	btfsc	3,2
 11430  00CD  28CF               	goto	u2071
 11431  00CE  28D0               	goto	u2070
 11432  00CF                     u2071:
 11433  00CF  28FF               	goto	l4052
 11434  00D0                     u2070:
 11435  00D0                     l4034:
 11436  00D0  01F5               	clrf	___awdiv@counter
 11437  00D1  0AF5               	incf	___awdiv@counter,f
 11438  00D2  28DC               	goto	l4040
 11439  00D3                     l4036:
 11440  00D3  3001               	movlw	1
 11441  00D4                     u2085:
 11442  00D4  35F0               	lslf	___awdiv@divisor,f
 11443  00D5  0DF1               	rlf	___awdiv@divisor+1,f
 11444  00D6  0B89               	decfsz	9,f
 11445  00D7  28D4               	goto	u2085
 11446  00D8                     l4038:
 11447  00D8  3001               	movlw	1
 11448  00D9  00F4               	movwf	??___awdiv
 11449  00DA  0874               	movf	??___awdiv,w
 11450  00DB  07F5               	addwf	___awdiv@counter,f
 11451  00DC                     l4040:
 11452  00DC  1FF1               	btfss	___awdiv@divisor+1,7
 11453  00DD  28DF               	goto	u2091
 11454  00DE  28E0               	goto	u2090
 11455  00DF                     u2091:
 11456  00DF  28D3               	goto	l4036
 11457  00E0                     u2090:
 11458  00E0                     l4042:
 11459  00E0  3001               	movlw	1
 11460  00E1                     u2105:
 11461  00E1  35F7               	lslf	___awdiv@quotient,f
 11462  00E2  0DF8               	rlf	___awdiv@quotient+1,f
 11463  00E3  0B89               	decfsz	9,f
 11464  00E4  28E1               	goto	u2105
 11465  00E5  0871               	movf	___awdiv@divisor+1,w
 11466  00E6  0273               	subwf	___awdiv@dividend+1,w
 11467  00E7  1D03               	skipz
 11468  00E8  28EB               	goto	u2115
 11469  00E9  0870               	movf	___awdiv@divisor,w
 11470  00EA  0272               	subwf	___awdiv@dividend,w
 11471  00EB                     u2115:
 11472  00EB  1C03               	skipc
 11473  00EC  28EE               	goto	u2111
 11474  00ED  28EF               	goto	u2110
 11475  00EE                     u2111:
 11476  00EE  28F4               	goto	l4048
 11477  00EF                     u2110:
 11478  00EF                     l4044:
 11479  00EF  0870               	movf	___awdiv@divisor,w
 11480  00F0  02F2               	subwf	___awdiv@dividend,f
 11481  00F1  0871               	movf	___awdiv@divisor+1,w
 11482  00F2  3BF3               	subwfb	___awdiv@dividend+1,f
 11483  00F3                     l4046:
 11484  00F3  1477               	bsf	___awdiv@quotient,0
 11485  00F4                     l4048:
 11486  00F4  3001               	movlw	1
 11487  00F5                     u2125:
 11488  00F5  36F1               	lsrf	___awdiv@divisor+1,f
 11489  00F6  0CF0               	rrf	___awdiv@divisor,f
 11490  00F7  0B89               	decfsz	9,f
 11491  00F8  28F5               	goto	u2125
 11492  00F9                     l4050:
 11493  00F9  3001               	movlw	1
 11494  00FA  02F5               	subwf	___awdiv@counter,f
 11495  00FB  1D03               	btfss	3,2
 11496  00FC  28FE               	goto	u2131
 11497  00FD  28FF               	goto	u2130
 11498  00FE                     u2131:
 11499  00FE  28E0               	goto	l4042
 11500  00FF                     u2130:
 11501  00FF                     l4052:
 11502  00FF  0876               	movf	___awdiv@sign,w
 11503  0100  1903               	btfsc	3,2
 11504  0101  2903               	goto	u2141
 11505  0102  2904               	goto	u2140
 11506  0103                     u2141:
 11507  0103  2909               	goto	l4056
 11508  0104                     u2140:
 11509  0104                     l4054:
 11510  0104  09F7               	comf	___awdiv@quotient,f
 11511  0105  09F8               	comf	___awdiv@quotient+1,f
 11512  0106  0AF7               	incf	___awdiv@quotient,f
 11513  0107  1903               	skipnz
 11514  0108  0AF8               	incf	___awdiv@quotient+1,f
 11515  0109                     l4056:
 11516  0109  0878               	movf	___awdiv@quotient+1,w
 11517  010A  00F1               	movwf	?___awdiv+1
 11518  010B  0877               	movf	___awdiv@quotient,w
 11519  010C  00F0               	movwf	?___awdiv
 11520  010D                     l1302:
 11521  010D  0008               	return
 11522  010E                     __end_of___awdiv:
 11523                           
 11524                           	psect	text24
 11525  0004                     __ptext24:	
 11526 ;; *************** function _lcd_BigFont_init *****************
 11527 ;; Defined at:
 11528 ;;		line 7 in file "BigFont_LCD.c"
 11529 ;; Parameters:    Size  Location     Type
 11530 ;;		None
 11531 ;; Auto vars:     Size  Location     Type
 11532 ;;		None
 11533 ;; Return value:  Size  Location     Type
 11534 ;;                  1    wreg      void 
 11535 ;; Registers used:
 11536 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11537 ;; Tracked objects:
 11538 ;;		On entry : 0/0
 11539 ;;		On exit  : 0/0
 11540 ;;		Unchanged: 0/0
 11541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11544 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11545 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11546 ;;Total ram usage:        7 bytes
 11547 ;; Hardware stack levels used: 1
 11548 ;; Hardware stack levels required when called: 13
 11549 ;; This function calls:
 11550 ;;		_lcd_setCustomChar
 11551 ;; This function is called by:
 11552 ;;		_main
 11553 ;; This function uses a non-reentrant model
 11554 ;;
 11555                           
 11556  0004                     _lcd_BigFont_init:	
 11557                           ;psect for function _lcd_BigFont_init
 11558                           
 11559  0004                     l4340:	
 11560                           ;incstack = 0
 11561                           ; Regs used in _lcd_BigFont_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11562                           
 11563                           
 11564                           ;BigFont_LCD.c: 8:     for (nb=0; nb<8; nb++ ) {
 11565  0004  0021               	movlb	1	; select bank1
 11566  0005  01CC               	clrf	_nb^(0+128)
 11567  0006                     l4342:
 11568  0006  3008               	movlw	8
 11569  0007  024C               	subwf	_nb^(0+128),w
 11570  0008  1C03               	skipc
 11571  0009  280B               	goto	u2341
 11572  000A  280C               	goto	u2340
 11573  000B                     u2341:
 11574  000B  280D               	goto	l4346
 11575  000C                     u2340:
 11576  000C  2853               	goto	l946
 11577  000D                     l4346:
 11578                           
 11579                           ;BigFont_LCD.c: 10:         for (bc=0; bc<8; bc++){
 11580  000D  01CB               	clrf	_bc^(0+128)
 11581  000E                     l4348:
 11582  000E  3008               	movlw	8
 11583  000F  024B               	subwf	_bc^(0+128),w
 11584  0010  1C03               	skipc
 11585  0011  2813               	goto	u2351
 11586  0012  2814               	goto	u2350
 11587  0013                     u2351:
 11588  0013  2815               	goto	l4352
 11589  0014                     u2350:
 11590  0014  2842               	goto	l4358
 11591  0015                     l4352:
 11592                           
 11593                           ;BigFont_LCD.c: 11:             bb[bc]= (custom[nb][bc] );
 11594  0015  084C               	movf	_nb^(0+128),w
 11595  0016  0020               	movlb	0	; select bank0
 11596  0017  00B6               	movwf	??_lcd_BigFont_init
 11597  0018  01B7               	clrf	??_lcd_BigFont_init+1
 11598  0019  35B6               	lslf	??_lcd_BigFont_init,f
 11599  001A  0DB7               	rlf	??_lcd_BigFont_init+1,f
 11600  001B  35B6               	lslf	??_lcd_BigFont_init,f
 11601  001C  0DB7               	rlf	??_lcd_BigFont_init+1,f
 11602  001D  35B6               	lslf	??_lcd_BigFont_init,f
 11603  001E  0DB7               	rlf	??_lcd_BigFont_init+1,f
 11604  001F  3000               	movlw	low (_custom| (0+32768))
 11605  0020  00B8               	movwf	??_lcd_BigFont_init+2
 11606  0021  3090               	movlw	high (_custom| (0+32768))
 11607  0022  00B9               	movwf	??_lcd_BigFont_init+3
 11608  0023  0836               	movf	??_lcd_BigFont_init,w
 11609  0024  0738               	addwf	??_lcd_BigFont_init+2,w
 11610  0025  00BA               	movwf	??_lcd_BigFont_init+4
 11611  0026  0837               	movf	??_lcd_BigFont_init+1,w
 11612  0027  3D39               	addwfc	??_lcd_BigFont_init+3,w
 11613  0028  00BB               	movwf	??_lcd_BigFont_init+5
 11614  0029  0021               	movlb	1	; select bank1
 11615  002A  084B               	movf	_bc^(0+128),w
 11616  002B  0020               	movlb	0	; select bank0
 11617  002C  073A               	addwf	??_lcd_BigFont_init+4,w
 11618  002D  0084               	movwf	4
 11619  002E  083B               	movf	??_lcd_BigFont_init+5,w
 11620  002F  1803               	skipnc
 11621  0030  0A3B               	incf	??_lcd_BigFont_init+5,w
 11622  0031  0085               	movwf	5
 11623  0032  0800               	movf	0,w	;code access
 11624  0033  00BC               	movwf	??_lcd_BigFont_init+6
 11625  0034  0021               	movlb	1	; select bank1
 11626  0035  084B               	movf	_bc^(0+128),w
 11627  0036  3ED0               	addlw	(low (_bb| 0))& (0+255)
 11628  0037  0086               	movwf	6
 11629  0038  0187               	clrf	7
 11630  0039  0020               	movlb	0	; select bank0
 11631  003A  083C               	movf	??_lcd_BigFont_init+6,w
 11632  003B  0081               	movwf	1
 11633  003C                     l4354:
 11634                           
 11635                           ;BigFont_LCD.c: 12:         }
 11636  003C  3001               	movlw	1
 11637  003D  00B6               	movwf	??_lcd_BigFont_init
 11638  003E  0836               	movf	??_lcd_BigFont_init,w
 11639  003F  0021               	movlb	1	; select bank1
 11640  0040  07CB               	addwf	_bc^(0+128),f
 11641  0041  280E               	goto	l4348
 11642  0042                     l4358:
 11643                           
 11644                           ;BigFont_LCD.c: 14:         lcd_setCustomChar( nb, bb );
 11645  0042  30D0               	movlw	(low (_bb| 0))& (0+255)
 11646  0043  0020               	movlb	0	; select bank0
 11647  0044  00B6               	movwf	??_lcd_BigFont_init
 11648  0045  0836               	movf	??_lcd_BigFont_init,w
 11649  0046  00B1               	movwf	lcd_setCustomChar@dato
 11650  0047  0021               	movlb	1	; select bank1
 11651  0048  084C               	movf	_nb^(0+128),w
 11652  0049  318C  24D3  3180   	fcall	_lcd_setCustomChar
 11653  004C                     l4360:
 11654                           
 11655                           ;BigFont_LCD.c: 16:     }
 11656  004C  3001               	movlw	1
 11657  004D  0020               	movlb	0	; select bank0
 11658  004E  00B6               	movwf	??_lcd_BigFont_init
 11659  004F  0836               	movf	??_lcd_BigFont_init,w
 11660  0050  0021               	movlb	1	; select bank1
 11661  0051  07CC               	addwf	_nb^(0+128),f
 11662  0052  2806               	goto	l4342
 11663  0053                     l946:
 11664  0053  0008               	return
 11665  0054                     __end_of_lcd_BigFont_init:
 11666                           
 11667                           	psect	text25
 11668  0CD3                     __ptext25:	
 11669 ;; *************** function _lcd_setCustomChar *****************
 11670 ;; Defined at:
 11671 ;;		line 210 in file "LCD_i2c.c"
 11672 ;; Parameters:    Size  Location     Type
 11673 ;;  dir             1    wreg     unsigned char 
 11674 ;;  dato            1   17[BANK0 ] PTR unsigned char 
 11675 ;;		 -> bb(8), 
 11676 ;; Auto vars:     Size  Location     Type
 11677 ;;  dir             1   20[BANK0 ] unsigned char 
 11678 ;;  i               1   21[BANK0 ] unsigned char 
 11679 ;; Return value:  Size  Location     Type
 11680 ;;                  1    wreg      void 
 11681 ;; Registers used:
 11682 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11683 ;; Tracked objects:
 11684 ;;		On entry : 0/0
 11685 ;;		On exit  : 0/0
 11686 ;;		Unchanged: 0/0
 11687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11688 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11689 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11690 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11691 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11692 ;;Total ram usage:        5 bytes
 11693 ;; Hardware stack levels used: 1
 11694 ;; Hardware stack levels required when called: 12
 11695 ;; This function calls:
 11696 ;;		_lcd_send_byte
 11697 ;; This function is called by:
 11698 ;;		_lcd_BigFont_init
 11699 ;; This function uses a non-reentrant model
 11700 ;;
 11701                           
 11702  0CD3                     _lcd_setCustomChar:	
 11703                           ;psect for function _lcd_setCustomChar
 11704                           
 11705                           
 11706                           ;incstack = 0
 11707                           ; Regs used in _lcd_setCustomChar: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11708                           ;lcd_setCustomChar@dir stored from wreg
 11709  0CD3  0020               	movlb	0	; select bank0
 11710  0CD4  00B4               	movwf	lcd_setCustomChar@dir
 11711  0CD5                     l4204:
 11712                           
 11713                           ;LCD_i2c.c: 212:  lcd_send_byte(0,0x40+dir*8);
 11714  0CD5  0834               	movf	lcd_setCustomChar@dir,w
 11715  0CD6  00B2               	movwf	??_lcd_setCustomChar
 11716  0CD7  3002               	movlw	2
 11717  0CD8                     u2225:
 11718  0CD8  35B2               	lslf	??_lcd_setCustomChar,f
 11719  0CD9  3EFF               	addlw	-1
 11720  0CDA  1D03               	skipz
 11721  0CDB  2CD8               	goto	u2225
 11722  0CDC  3532               	lslf	??_lcd_setCustomChar,w
 11723  0CDD  3E40               	addlw	64
 11724  0CDE  00B3               	movwf	??_lcd_setCustomChar+1
 11725  0CDF  0833               	movf	??_lcd_setCustomChar+1,w
 11726  0CE0  00AD               	movwf	lcd_send_byte@n
 11727  0CE1  3000               	movlw	0
 11728  0CE2  318B  2306  318C   	fcall	_lcd_send_byte
 11729  0CE5                     l4206:
 11730                           
 11731                           ;LCD_i2c.c: 213:  for(uint8_t i=0;i<=7 ;i++) {
 11732  0CE5  0020               	movlb	0	; select bank0
 11733  0CE6  01B5               	clrf	lcd_setCustomChar@i
 11734  0CE7                     l4212:
 11735                           
 11736                           ;LCD_i2c.c: 214:   lcd_send_byte(1,*dato++);
 11737  0CE7  0831               	movf	lcd_setCustomChar@dato,w
 11738  0CE8  0086               	movwf	6
 11739  0CE9  0187               	clrf	7
 11740  0CEA  0801               	movf	1,w
 11741  0CEB  00B2               	movwf	??_lcd_setCustomChar
 11742  0CEC  0832               	movf	??_lcd_setCustomChar,w
 11743  0CED  00AD               	movwf	lcd_send_byte@n
 11744  0CEE  3001               	movlw	1
 11745  0CEF  318B  2306  318C   	fcall	_lcd_send_byte
 11746  0CF2                     l4214:
 11747  0CF2  3001               	movlw	1
 11748  0CF3  0020               	movlb	0	; select bank0
 11749  0CF4  00B2               	movwf	??_lcd_setCustomChar
 11750  0CF5  0832               	movf	??_lcd_setCustomChar,w
 11751  0CF6  07B1               	addwf	lcd_setCustomChar@dato,f
 11752  0CF7                     l4216:
 11753                           
 11754                           ;LCD_i2c.c: 215:  }
 11755  0CF7  3001               	movlw	1
 11756  0CF8  00B2               	movwf	??_lcd_setCustomChar
 11757  0CF9  0832               	movf	??_lcd_setCustomChar,w
 11758  0CFA  07B5               	addwf	lcd_setCustomChar@i,f
 11759  0CFB                     l4218:
 11760  0CFB  3008               	movlw	8
 11761  0CFC  0235               	subwf	lcd_setCustomChar@i,w
 11762  0CFD  1C03               	skipc
 11763  0CFE  2D00               	goto	u2231
 11764  0CFF  2D01               	goto	u2230
 11765  0D00                     u2231:
 11766  0D00  2CE7               	goto	l4212
 11767  0D01                     u2230:
 11768  0D01                     l916:
 11769  0D01  0008               	return
 11770  0D02                     __end_of_lcd_setCustomChar:
 11771                           
 11772                           	psect	text26
 11773  0B06                     __ptext26:	
 11774 ;; *************** function _lcd_send_byte *****************
 11775 ;; Defined at:
 11776 ;;		line 65 in file "LCD_i2c.c"
 11777 ;; Parameters:    Size  Location     Type
 11778 ;;  address         1    wreg     unsigned char 
 11779 ;;  n               1   13[BANK0 ] unsigned char 
 11780 ;; Auto vars:     Size  Location     Type
 11781 ;;  address         1   16[BANK0 ] unsigned char 
 11782 ;; Return value:  Size  Location     Type
 11783 ;;                  1    wreg      void 
 11784 ;; Registers used:
 11785 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11786 ;; Tracked objects:
 11787 ;;		On entry : 0/0
 11788 ;;		On exit  : 0/0
 11789 ;;		Unchanged: 0/0
 11790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11791 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11792 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11793 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11794 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11795 ;;Total ram usage:        4 bytes
 11796 ;; Hardware stack levels used: 1
 11797 ;; Hardware stack levels required when called: 11
 11798 ;; This function calls:
 11799 ;;		_Send_D7_D4
 11800 ;; This function is called by:
 11801 ;;		_lcd_init
 11802 ;;		_lcd_gotoxy
 11803 ;;		_lcd_putc
 11804 ;;		_lcd_puts
 11805 ;;		_lcd_clear
 11806 ;;		_lcd_setCustomChar
 11807 ;;		_lcd_BigFont_writeBigChar
 11808 ;;		_lcd_showCustomChar
 11809 ;; This function uses a non-reentrant model
 11810 ;;
 11811                           
 11812  0B06                     _lcd_send_byte:	
 11813                           ;psect for function _lcd_send_byte
 11814                           
 11815                           
 11816                           ;incstack = 0
 11817                           ; Regs used in _lcd_send_byte: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11818                           ;lcd_send_byte@address stored from wreg
 11819  0B06  0020               	movlb	0	; select bank0
 11820  0B07  00B0               	movwf	lcd_send_byte@address
 11821  0B08                     l3892:
 11822                           
 11823                           ;LCD_i2c.c: 66:    Send_D7_D4(address,(n >> 4) );
 11824  0B08  082D               	movf	lcd_send_byte@n,w
 11825  0B09  00AE               	movwf	??_lcd_send_byte
 11826  0B0A  3004               	movlw	4
 11827  0B0B                     u1835:
 11828  0B0B  36AE               	lsrf	??_lcd_send_byte,f
 11829  0B0C  0B89               	decfsz	9,f
 11830  0B0D  2B0B               	goto	u1835
 11831  0B0E  082E               	movf	??_lcd_send_byte,w
 11832  0B0F  00AF               	movwf	??_lcd_send_byte+1
 11833  0B10  082F               	movf	??_lcd_send_byte+1,w
 11834  0B11  00A9               	movwf	Send_D7_D4@nibble
 11835  0B12  0830               	movf	lcd_send_byte@address,w
 11836  0B13  3180  2054  318B   	fcall	_Send_D7_D4
 11837                           
 11838                           ;LCD_i2c.c: 67:    Send_D7_D4(address,(n & 0xf) );
 11839  0B16  0020               	movlb	0	; select bank0
 11840  0B17  082D               	movf	lcd_send_byte@n,w
 11841  0B18  390F               	andlw	15
 11842  0B19  00AE               	movwf	??_lcd_send_byte
 11843  0B1A  082E               	movf	??_lcd_send_byte,w
 11844  0B1B  00A9               	movwf	Send_D7_D4@nibble
 11845  0B1C  0830               	movf	lcd_send_byte@address,w
 11846  0B1D  3180  2054  318B   	fcall	_Send_D7_D4
 11847  0B20                     l874:
 11848  0B20  0008               	return
 11849  0B21                     __end_of_lcd_send_byte:
 11850                           
 11851                           	psect	text27
 11852  0054                     __ptext27:	
 11853 ;; *************** function _Send_D7_D4 *****************
 11854 ;; Defined at:
 11855 ;;		line 28 in file "LCD_i2c.c"
 11856 ;; Parameters:    Size  Location     Type
 11857 ;;  address         1    wreg     unsigned char 
 11858 ;;  nibble          1    9[BANK0 ] unsigned char 
 11859 ;; Auto vars:     Size  Location     Type
 11860 ;;  address         1   11[BANK0 ] unsigned char 
 11861 ;;  datos           1   12[BANK0 ] unsigned char 
 11862 ;; Return value:  Size  Location     Type
 11863 ;;                  1    wreg      void 
 11864 ;; Registers used:
 11865 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11866 ;; Tracked objects:
 11867 ;;		On entry : 0/0
 11868 ;;		On exit  : 0/0
 11869 ;;		Unchanged: 0/0
 11870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11871 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11872 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11873 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11874 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11875 ;;Total ram usage:        4 bytes
 11876 ;; Hardware stack levels used: 1
 11877 ;; Hardware stack levels required when called: 10
 11878 ;; This function calls:
 11879 ;;		_Write_PCF
 11880 ;; This function is called by:
 11881 ;;		_lcd_send_byte
 11882 ;;		_lcd_init
 11883 ;; This function uses a non-reentrant model
 11884 ;;
 11885                           
 11886  0054                     _Send_D7_D4:	
 11887                           ;psect for function _Send_D7_D4
 11888                           
 11889                           
 11890                           ;incstack = 0
 11891                           ; Regs used in _Send_D7_D4: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11892                           ;Send_D7_D4@address stored from wreg
 11893  0054  0020               	movlb	0	; select bank0
 11894  0055  00AB               	movwf	Send_D7_D4@address
 11895  0056                     l3762:
 11896                           
 11897                           ;LCD_i2c.c: 29:    uint8_t datos=0;
 11898  0056  01AC               	clrf	Send_D7_D4@datos
 11899  0057                     l3764:
 11900                           
 11901                           ;LCD_i2c.c: 31:    if((nibble & 1)==1) datos= datos|(1<<4); else datos = datos&~(1<<4);
 11902  0057  1C29               	btfss	Send_D7_D4@nibble,0
 11903  0058  285A               	goto	u1521
 11904  0059  285B               	goto	u1520
 11905  005A                     u1521:
 11906  005A  2861               	goto	l3768
 11907  005B                     u1520:
 11908  005B                     l3766:
 11909  005B  082C               	movf	Send_D7_D4@datos,w
 11910  005C  3810               	iorlw	16
 11911  005D  00AA               	movwf	??_Send_D7_D4
 11912  005E  082A               	movf	??_Send_D7_D4,w
 11913  005F  00AC               	movwf	Send_D7_D4@datos
 11914  0060  2866               	goto	l3770
 11915  0061                     l3768:
 11916  0061  082C               	movf	Send_D7_D4@datos,w
 11917  0062  39EF               	andlw	239
 11918  0063  00AA               	movwf	??_Send_D7_D4
 11919  0064  082A               	movf	??_Send_D7_D4,w
 11920  0065  00AC               	movwf	Send_D7_D4@datos
 11921  0066                     l3770:
 11922                           
 11923                           ;LCD_i2c.c: 32:    if((nibble & 2)==2) datos= datos|(1<<5); else datos = datos&~(1<<5);
 11924  0066  1CA9               	btfss	Send_D7_D4@nibble,1
 11925  0067  2869               	goto	u1531
 11926  0068  286A               	goto	u1530
 11927  0069                     u1531:
 11928  0069  2870               	goto	l3774
 11929  006A                     u1530:
 11930  006A                     l3772:
 11931  006A  082C               	movf	Send_D7_D4@datos,w
 11932  006B  3820               	iorlw	32
 11933  006C  00AA               	movwf	??_Send_D7_D4
 11934  006D  082A               	movf	??_Send_D7_D4,w
 11935  006E  00AC               	movwf	Send_D7_D4@datos
 11936  006F  2875               	goto	l3776
 11937  0070                     l3774:
 11938  0070  082C               	movf	Send_D7_D4@datos,w
 11939  0071  39DF               	andlw	223
 11940  0072  00AA               	movwf	??_Send_D7_D4
 11941  0073  082A               	movf	??_Send_D7_D4,w
 11942  0074  00AC               	movwf	Send_D7_D4@datos
 11943  0075                     l3776:
 11944                           
 11945                           ;LCD_i2c.c: 33:    if((nibble & 4)==4) datos= datos|(1<<6); else datos = datos&~(1<<6);
 11946  0075  1D29               	btfss	Send_D7_D4@nibble,2
 11947  0076  2878               	goto	u1541
 11948  0077  2879               	goto	u1540
 11949  0078                     u1541:
 11950  0078  287F               	goto	l3780
 11951  0079                     u1540:
 11952  0079                     l3778:
 11953  0079  082C               	movf	Send_D7_D4@datos,w
 11954  007A  3840               	iorlw	64
 11955  007B  00AA               	movwf	??_Send_D7_D4
 11956  007C  082A               	movf	??_Send_D7_D4,w
 11957  007D  00AC               	movwf	Send_D7_D4@datos
 11958  007E  2884               	goto	l3782
 11959  007F                     l3780:
 11960  007F  082C               	movf	Send_D7_D4@datos,w
 11961  0080  39BF               	andlw	191
 11962  0081  00AA               	movwf	??_Send_D7_D4
 11963  0082  082A               	movf	??_Send_D7_D4,w
 11964  0083  00AC               	movwf	Send_D7_D4@datos
 11965  0084                     l3782:
 11966                           
 11967                           ;LCD_i2c.c: 34:    if((nibble & 8)==8) datos= datos|(1<<7); else datos = datos&~(1<<7);
 11968  0084  1DA9               	btfss	Send_D7_D4@nibble,3
 11969  0085  2887               	goto	u1551
 11970  0086  2888               	goto	u1550
 11971  0087                     u1551:
 11972  0087  288E               	goto	l3786
 11973  0088                     u1550:
 11974  0088                     l3784:
 11975  0088  082C               	movf	Send_D7_D4@datos,w
 11976  0089  3880               	iorlw	128
 11977  008A  00AA               	movwf	??_Send_D7_D4
 11978  008B  082A               	movf	??_Send_D7_D4,w
 11979  008C  00AC               	movwf	Send_D7_D4@datos
 11980  008D  2893               	goto	l3788
 11981  008E                     l3786:
 11982  008E  082C               	movf	Send_D7_D4@datos,w
 11983  008F  397F               	andlw	127
 11984  0090  00AA               	movwf	??_Send_D7_D4
 11985  0091  082A               	movf	??_Send_D7_D4,w
 11986  0092  00AC               	movwf	Send_D7_D4@datos
 11987  0093                     l3788:
 11988                           
 11989                           ;LCD_i2c.c: 46:    if(address)
 11990  0093  082B               	movf	Send_D7_D4@address,w
 11991  0094  1903               	btfsc	3,2
 11992  0095  2897               	goto	u1561
 11993  0096  2898               	goto	u1560
 11994  0097                     u1561:
 11995  0097  289E               	goto	l3792
 11996  0098                     u1560:
 11997  0098                     l3790:
 11998                           
 11999                           ;LCD_i2c.c: 47:       datos= datos |(1<<0);
 12000  0098  082C               	movf	Send_D7_D4@datos,w
 12001  0099  3801               	iorlw	1
 12002  009A  00AA               	movwf	??_Send_D7_D4
 12003  009B  082A               	movf	??_Send_D7_D4,w
 12004  009C  00AC               	movwf	Send_D7_D4@datos
 12005  009D  28A3               	goto	l3794
 12006  009E                     l3792:
 12007                           
 12008                           ;LCD_i2c.c: 49:      datos = datos &~(1<<0);
 12009  009E  082C               	movf	Send_D7_D4@datos,w
 12010  009F  39FE               	andlw	254
 12011  00A0  00AA               	movwf	??_Send_D7_D4
 12012  00A1  082A               	movf	??_Send_D7_D4,w
 12013  00A2  00AC               	movwf	Send_D7_D4@datos
 12014  00A3                     l3794:
 12015                           
 12016                           ;LCD_i2c.c: 52:    Write_PCF( datos | (1<<2));
 12017  00A3  082C               	movf	Send_D7_D4@datos,w
 12018  00A4  3804               	iorlw	4
 12019  00A5  3197  27E7  3180   	fcall	_Write_PCF
 12020  00A8                     l3796:
 12021                           
 12022                           ;LCD_i2c.c: 62:    Write_PCF( datos & ~(1<<2));
 12023  00A8  0020               	movlb	0	; select bank0
 12024  00A9  082C               	movf	Send_D7_D4@datos,w
 12025  00AA  39FB               	andlw	251
 12026  00AB  3197  27E7  3180   	fcall	_Write_PCF
 12027  00AE                     l871:
 12028  00AE  0008               	return
 12029  00AF                     __end_of_Send_D7_D4:
 12030                           
 12031                           	psect	text28
 12032  17E7                     __ptext28:	
 12033 ;; *************** function _Write_PCF *****************
 12034 ;; Defined at:
 12035 ;;		line 13 in file "LCD_i2c.c"
 12036 ;; Parameters:    Size  Location     Type
 12037 ;;  dato            1    wreg     unsigned char 
 12038 ;; Auto vars:     Size  Location     Type
 12039 ;;  dato            1    8[BANK0 ] unsigned char 
 12040 ;; Return value:  Size  Location     Type
 12041 ;;                  1    wreg      void 
 12042 ;; Registers used:
 12043 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12044 ;; Tracked objects:
 12045 ;;		On entry : 0/0
 12046 ;;		On exit  : 0/0
 12047 ;;		Unchanged: 0/0
 12048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12050 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12051 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12052 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12053 ;;Total ram usage:        2 bytes
 12054 ;; Hardware stack levels used: 1
 12055 ;; Hardware stack levels required when called: 9
 12056 ;; This function calls:
 12057 ;;		_I2C1_WR
 12058 ;; This function is called by:
 12059 ;;		_Send_D7_D4
 12060 ;; This function uses a non-reentrant model
 12061 ;;
 12062                           
 12063  17E7                     _Write_PCF:	
 12064                           ;psect for function _Write_PCF
 12065                           
 12066                           
 12067                           ;incstack = 0
 12068                           ; Regs used in _Write_PCF: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12069                           ;Write_PCF@dato stored from wreg
 12070  17E7  0020               	movlb	0	; select bank0
 12071  17E8  00A8               	movwf	Write_PCF@dato
 12072  17E9                     l3742:
 12073                           
 12074                           ;LCD_i2c.c: 17:         I2C1_WR(32|(7),(dato | (1<<3)));
 12075  17E9  0828               	movf	Write_PCF@dato,w
 12076  17EA  3808               	iorlw	8
 12077  17EB  00A7               	movwf	??_Write_PCF
 12078  17EC  0827               	movf	??_Write_PCF,w
 12079  17ED  00A5               	movwf	I2C1_WR@data
 12080  17EE  3027               	movlw	39
 12081  17EF  318B  23A8  3197   	fcall	_I2C1_WR
 12082  17F2                     l858:
 12083  17F2  0008               	return
 12084  17F3                     __end_of_Write_PCF:
 12085                           
 12086                           	psect	text29
 12087  0BA8                     __ptext29:	
 12088 ;; *************** function _I2C1_WR *****************
 12089 ;; Defined at:
 12090 ;;		line 2 in file "I2C_MCC_Personal.c"
 12091 ;; Parameters:    Size  Location     Type
 12092 ;;  address         1    wreg     unsigned char 
 12093 ;;  data            1    5[BANK0 ] unsigned char 
 12094 ;; Auto vars:     Size  Location     Type
 12095 ;;  address         1    6[BANK0 ] unsigned char 
 12096 ;; Return value:  Size  Location     Type
 12097 ;;                  1    wreg      void 
 12098 ;; Registers used:
 12099 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12100 ;; Tracked objects:
 12101 ;;		On entry : 0/0
 12102 ;;		On exit  : 0/0
 12103 ;;		Unchanged: 0/0
 12104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12105 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12106 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12108 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12109 ;;Total ram usage:        2 bytes
 12110 ;; Hardware stack levels used: 1
 12111 ;; Hardware stack levels required when called: 8
 12112 ;; This function calls:
 12113 ;;		_I2C1_Close
 12114 ;;		_I2C1_MasterWrite
 12115 ;;		_I2C1_Open
 12116 ;;		_I2C1_SetAddressNackCallback
 12117 ;;		_I2C1_SetBuffer
 12118 ;; This function is called by:
 12119 ;;		_Write_PCF
 12120 ;; This function uses a non-reentrant model
 12121 ;;
 12122                           
 12123  0BA8                     _I2C1_WR:	
 12124                           ;psect for function _I2C1_WR
 12125                           
 12126                           
 12127                           ;incstack = 0
 12128                           ; Regs used in _I2C1_WR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12129                           ;I2C1_WR@address stored from wreg
 12130  0BA8  0020               	movlb	0	; select bank0
 12131  0BA9  00A6               	movwf	I2C1_WR@address
 12132  0BAA                     l3714:
 12133  0BAA                     l3716:	
 12134                           ;I2C_MCC_Personal.c: 3:     while(!I2C1_Open(address));
 12135                           
 12136  0BAA  0020               	movlb	0	; select bank0
 12137  0BAB  0826               	movf	I2C1_WR@address,w
 12138  0BAC  318D  259C  318B   	fcall	_I2C1_Open
 12139  0BAF  3A00               	xorlw	0
 12140  0BB0  1903               	skipnz
 12141  0BB1  2BB3               	goto	u1441
 12142  0BB2  2BB4               	goto	u1440
 12143  0BB3                     u1441:
 12144  0BB3  2BAA               	goto	l3716
 12145  0BB4                     u1440:
 12146  0BB4                     l3718:
 12147                           
 12148                           ;I2C_MCC_Personal.c: 4:     I2C1_SetBuffer(&data,1);
 12149  0BB4  3001               	movlw	1
 12150  0BB5  00F0               	movwf	I2C1_SetBuffer@bufferSize
 12151  0BB6  3000               	movlw	0
 12152  0BB7  00F1               	movwf	I2C1_SetBuffer@bufferSize+1
 12153  0BB8  3025               	movlw	(low (I2C1_WR@data| 0))& (0+255)
 12154  0BB9  318A  222A  318B   	fcall	_I2C1_SetBuffer
 12155  0BBC                     l3720:
 12156                           
 12157                           ;I2C_MCC_Personal.c: 5:     I2C1_SetAddressNackCallback(((void*)0),((void*)0));
 12158  0BBC  3000               	movlw	0
 12159  0BBD  00F5               	movwf	I2C1_SetAddressNackCallback@cb
 12160  0BBE  00F6               	movwf	I2C1_SetAddressNackCallback@cb+1
 12161  0BBF  01F7               	clrf	I2C1_SetAddressNackCallback@ptr
 12162  0BC0  318A  221D  318B   	fcall	_I2C1_SetAddressNackCallback
 12163  0BC3                     l3722:
 12164                           
 12165                           ;I2C_MCC_Personal.c: 6:     I2C1_MasterWrite();
 12166  0BC3  3197  277C  318B   	fcall	_I2C1_MasterWrite
 12167  0BC6                     l3724:	
 12168                           ;I2C_MCC_Personal.c: 7:     while(I2C1_BUSY == I2C1_Close());
 12169                           
 12170  0BC6  318B  2321  318B   	fcall	_I2C1_Close
 12171  0BC9  3A01               	xorlw	1
 12172  0BCA  1903               	skipnz
 12173  0BCB  2BCD               	goto	u1451
 12174  0BCC  2BCE               	goto	u1450
 12175  0BCD                     u1451:
 12176  0BCD  2BC6               	goto	l3724
 12177  0BCE                     u1450:
 12178  0BCE                     l988:
 12179  0BCE  0008               	return
 12180  0BCF                     __end_of_I2C1_WR:
 12181                           
 12182                           	psect	text30
 12183  0A1D                     __ptext30:	
 12184 ;; *************** function _I2C1_SetAddressNackCallback *****************
 12185 ;; Defined at:
 12186 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 12187 ;; Parameters:    Size  Location     Type
 12188 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 12189 ;;		 -> Absolute function(1), 
 12190 ;;  ptr             1    7[COMMON] PTR void 
 12191 ;;		 -> NULL(0), 
 12192 ;; Auto vars:     Size  Location     Type
 12193 ;;		None
 12194 ;; Return value:  Size  Location     Type
 12195 ;;                  1    wreg      void 
 12196 ;; Registers used:
 12197 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12198 ;; Tracked objects:
 12199 ;;		On entry : 0/0
 12200 ;;		On exit  : 0/0
 12201 ;;		Unchanged: 0/0
 12202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12203 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12205 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12206 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12207 ;;Total ram usage:        4 bytes
 12208 ;; Hardware stack levels used: 1
 12209 ;; Hardware stack levels required when called: 1
 12210 ;; This function calls:
 12211 ;;		_I2C1_SetCallback
 12212 ;; This function is called by:
 12213 ;;		_I2C1_Write1ByteRegister
 12214 ;;		_I2C1_WR
 12215 ;;		_I2C1_Read1ByteRegister
 12216 ;;		_I2C1_Read2ByteRegister
 12217 ;;		_I2C1_Write2ByteRegister
 12218 ;;		_I2C1_WriteNBytes
 12219 ;;		_I2C1_ReadDataBlock
 12220 ;; This function uses a non-reentrant model
 12221 ;;
 12222                           
 12223  0A1D                     _I2C1_SetAddressNackCallback:	
 12224                           ;psect for function _I2C1_SetAddressNackCallback
 12225                           
 12226  0A1D                     l3688:	
 12227                           ;incstack = 0
 12228                           ; Regs used in _I2C1_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 12229                           
 12230                           
 12231                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 12232  0A1D  0876               	movf	I2C1_SetAddressNackCallback@cb+1,w
 12233  0A1E  00F1               	movwf	I2C1_SetCallback@cb+1
 12234  0A1F  0875               	movf	I2C1_SetAddressNackCallback@cb,w
 12235  0A20  00F0               	movwf	I2C1_SetCallback@cb
 12236  0A21  0877               	movf	I2C1_SetAddressNackCallback@ptr,w
 12237  0A22  00F8               	movwf	??_I2C1_SetAddressNackCallback
 12238  0A23  0878               	movf	??_I2C1_SetAddressNackCallback,w
 12239  0A24  00F2               	movwf	I2C1_SetCallback@ptr
 12240  0A25  3002               	movlw	2
 12241  0A26  318B  2382  318A   	fcall	_I2C1_SetCallback
 12242  0A29                     l442:
 12243  0A29  0008               	return
 12244  0A2A                     __end_of_I2C1_SetAddressNackCallback:
 12245                           
 12246                           	psect	text31
 12247  0D9C                     __ptext31:	
 12248 ;; *************** function _I2C1_Open *****************
 12249 ;; Defined at:
 12250 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 12251 ;; Parameters:    Size  Location     Type
 12252 ;;  address         1    wreg     unsigned char 
 12253 ;; Auto vars:     Size  Location     Type
 12254 ;;  address         1    1[COMMON] unsigned char 
 12255 ;;  returnValue     1    2[COMMON] enum E355
 12256 ;; Return value:  Size  Location     Type
 12257 ;;                  1    wreg      enum E355
 12258 ;; Registers used:
 12259 ;;		wreg, status,2, status,0, pclath, cstack
 12260 ;; Tracked objects:
 12261 ;;		On entry : 0/0
 12262 ;;		On exit  : 0/0
 12263 ;;		Unchanged: 0/0
 12264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12266 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12267 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12268 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12269 ;;Total ram usage:        3 bytes
 12270 ;; Hardware stack levels used: 1
 12271 ;; Hardware stack levels required when called: 1
 12272 ;; This function calls:
 12273 ;;		_I2C1_MasterClearIrq
 12274 ;;		_I2C1_MasterOpen
 12275 ;; This function is called by:
 12276 ;;		_I2C1_Write1ByteRegister
 12277 ;;		_I2C1_WR
 12278 ;;		_I2C1_Read1ByteRegister
 12279 ;;		_I2C1_Read2ByteRegister
 12280 ;;		_I2C1_Write2ByteRegister
 12281 ;;		_I2C1_WriteNBytes
 12282 ;;		_I2C1_ReadNBytes
 12283 ;;		_I2C1_ReadDataBlock
 12284 ;;		_I2C1_RD
 12285 ;; This function uses a non-reentrant model
 12286 ;;
 12287                           
 12288  0D9C                     _I2C1_Open:	
 12289                           ;psect for function _I2C1_Open
 12290                           
 12291                           
 12292                           ;incstack = 0
 12293                           ; Regs used in _I2C1_Open: [wreg+status,2+status,0+pclath+cstack]
 12294                           ;I2C1_Open@address stored from wreg
 12295  0D9C  00F1               	movwf	I2C1_Open@address
 12296  0D9D                     l3656:
 12297                           
 12298                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 12299  0D9D  01F2               	clrf	I2C1_Open@returnValue
 12300  0D9E  0AF2               	incf	I2C1_Open@returnValue,f
 12301                           
 12302                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 12303  0D9F  0021               	movlb	1	; select bank1
 12304  0DA0  193C               	btfsc	(_I2C1_Status^(0+128)+28),2
 12305  0DA1  2DA3               	goto	u1421
 12306  0DA2  2DA4               	goto	u1420
 12307  0DA3                     u1421:
 12308  0DA3  2DD4               	goto	l409
 12309  0DA4                     u1420:
 12310  0DA4                     l3658:
 12311                           
 12312                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 12313  0DA4  0871               	movf	I2C1_Open@address,w
 12314  0DA5  00F0               	movwf	??_I2C1_Open
 12315  0DA6  0870               	movf	??_I2C1_Open,w
 12316  0DA7  00B6               	movwf	(_I2C1_Status^(0+128)+22)
 12317  0DA8                     l3660:
 12318                           
 12319                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 12320  0DA8  10BC               	bcf	(_I2C1_Status^(0+128)+28),1
 12321  0DA9                     l3662:
 12322                           
 12323                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 12324  0DA9  153C               	bsf	(_I2C1_Status^(0+128)+28),2
 12325  0DAA                     l3664:
 12326                           
 12327                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 12328  0DAA  103C               	bcf	(_I2C1_Status^(0+128)+28),0
 12329                           
 12330                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 12331  0DAB  300E               	movlw	14
 12332  0DAC  00F0               	movwf	??_I2C1_Open
 12333  0DAD  0870               	movf	??_I2C1_Open,w
 12334  0DAE  00BA               	movwf	(_I2C1_Status^(0+128)+26)
 12335                           
 12336                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 12337  0DAF  30F4               	movlw	244
 12338  0DB0  00B4               	movwf	(_I2C1_Status^(0+128)+20)
 12339  0DB1  3001               	movlw	1
 12340  0DB2  00B5               	movwf	(_I2C1_Status^(0+128)+21)
 12341  0DB3                     l3666:
 12342                           
 12343                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 12344  0DB3  15BC               	bsf	(_I2C1_Status^(0+128)+28),3
 12345                           
 12346                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 12347  0DB4  3024               	movlw	low _I2C1_CallbackReturnStop
 12348  0DB5  00A0               	movwf	_I2C1_Status^(0+128)
 12349  0DB6  3017               	movlw	high _I2C1_CallbackReturnStop
 12350  0DB7  00A1               	movwf	(_I2C1_Status^(0+128)+1)
 12351  0DB8                     l3668:
 12352                           
 12353                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 12354  0DB8  01AC               	clrf	(low ((_I2C1_Status| 0+12)))^(0+128)
 12355  0DB9                     l3670:
 12356                           
 12357                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 12358  0DB9  3024               	movlw	low _I2C1_CallbackReturnStop
 12359  0DBA  00A2               	movwf	(low ((_I2C1_Status| 0+2)))^(0+128)
 12360  0DBB  3017               	movlw	high _I2C1_CallbackReturnStop
 12361  0DBC  00A3               	movwf	((low ((_I2C1_Status| 0+2)))^(0+128)+1)
 12362                           
 12363                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 12364  0DBD  01AD               	clrf	(low ((_I2C1_Status| 0+13)))^(0+128)
 12365  0DBE                     l3672:
 12366                           
 12367                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 12368  0DBE  3024               	movlw	low _I2C1_CallbackReturnStop
 12369  0DBF  00A4               	movwf	(low ((_I2C1_Status| 0+4)))^(0+128)
 12370  0DC0  3017               	movlw	high _I2C1_CallbackReturnStop
 12371  0DC1  00A5               	movwf	((low ((_I2C1_Status| 0+4)))^(0+128)+1)
 12372  0DC2                     l3674:
 12373                           
 12374                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 12375  0DC2  01AE               	clrf	(low ((_I2C1_Status| 0+14)))^(0+128)
 12376                           
 12377                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 12378  0DC3  3024               	movlw	low _I2C1_CallbackReturnStop
 12379  0DC4  00A6               	movwf	(low ((_I2C1_Status| 0+6)))^(0+128)
 12380  0DC5  3017               	movlw	high _I2C1_CallbackReturnStop
 12381  0DC6  00A7               	movwf	((low ((_I2C1_Status| 0+6)))^(0+128)+1)
 12382  0DC7                     l3676:
 12383                           
 12384                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 12385  0DC7  01AF               	clrf	(low ((_I2C1_Status| 0+15)))^(0+128)
 12386  0DC8                     l3678:
 12387                           
 12388                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 12389  0DC8  3026               	movlw	low _I2C1_CallbackReturnReset
 12390  0DC9  00A8               	movwf	(low ((_I2C1_Status| 0+8)))^(0+128)
 12391  0DCA  3017               	movlw	high _I2C1_CallbackReturnReset
 12392  0DCB  00A9               	movwf	((low ((_I2C1_Status| 0+8)))^(0+128)+1)
 12393                           
 12394                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 12395  0DCC  01B0               	clrf	(low ((_I2C1_Status| 0+16)))^(0+128)
 12396  0DCD                     l3680:
 12397                           
 12398                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 12399  0DCD  3197  272A  318D   	fcall	_I2C1_MasterClearIrq
 12400  0DD0                     l3682:
 12401                           
 12402                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 12403  0DD0  318A  2210  318D   	fcall	_I2C1_MasterOpen
 12404  0DD3                     l3684:
 12405                           
 12406                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 12407  0DD3  01F2               	clrf	I2C1_Open@returnValue
 12408  0DD4                     l409:	
 12409                           ;mcc_generated_files/i2c1_master.c: 205:     }
 12410                           
 12411                           
 12412                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 12413  0DD4  0872               	movf	I2C1_Open@returnValue,w
 12414  0DD5                     l410:
 12415  0DD5  0008               	return
 12416  0DD6                     __end_of_I2C1_Open:
 12417                           
 12418                           	psect	text32
 12419  0A10                     __ptext32:	
 12420 ;; *************** function _I2C1_MasterOpen *****************
 12421 ;; Defined at:
 12422 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 12423 ;; Parameters:    Size  Location     Type
 12424 ;;		None
 12425 ;; Auto vars:     Size  Location     Type
 12426 ;;		None
 12427 ;; Return value:  Size  Location     Type
 12428 ;;                  1    wreg      _Bool 
 12429 ;; Registers used:
 12430 ;;		wreg, status,2
 12431 ;; Tracked objects:
 12432 ;;		On entry : 0/0
 12433 ;;		On exit  : 0/0
 12434 ;;		Unchanged: 0/0
 12435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12440 ;;Total ram usage:        0 bytes
 12441 ;; Hardware stack levels used: 1
 12442 ;; This function calls:
 12443 ;;		Nothing
 12444 ;; This function is called by:
 12445 ;;		_I2C1_Open
 12446 ;; This function uses a non-reentrant model
 12447 ;;
 12448                           
 12449  0A10                     _I2C1_MasterOpen:	
 12450                           ;psect for function _I2C1_MasterOpen
 12451                           
 12452  0A10                     l3616:	
 12453                           ;incstack = 0
 12454                           ; Regs used in _I2C1_MasterOpen: [wreg+status,2]
 12455                           
 12456                           
 12457                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 12458  0A10  0023               	movlb	3	; select bank3
 12459  0A11  1A90               	btfsc	16,5	;volatile
 12460  0A12  2A14               	goto	u1381
 12461  0A13  2A15               	goto	u1380
 12462  0A14                     u1381:
 12463  0A14  2A1C               	goto	l575
 12464  0A15                     u1380:
 12465  0A15                     l3618:
 12466                           
 12467                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x00;
 12468  0A15  018F               	clrf	15	;volatile
 12469  0A16                     l3620:
 12470                           
 12471                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x08;
 12472  0A16  3008               	movlw	8
 12473  0A17  0090               	movwf	16	;volatile
 12474  0A18                     l3622:
 12475                           
 12476                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 12477  0A18  0191               	clrf	17	;volatile
 12478                           
 12479                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x13;
 12480  0A19  3013               	movlw	19
 12481  0A1A  008D               	movwf	13	;volatile
 12482  0A1B                     l3624:
 12483                           
 12484                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 12485  0A1B  1690               	bsf	16,5	;volatile
 12486  0A1C                     l575:
 12487  0A1C  0008               	return
 12488  0A1D                     __end_of_I2C1_MasterOpen:
 12489                           
 12490                           	psect	text33
 12491  177C                     __ptext33:	
 12492 ;; *************** function _I2C1_MasterWrite *****************
 12493 ;; Defined at:
 12494 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 12495 ;; Parameters:    Size  Location     Type
 12496 ;;		None
 12497 ;; Auto vars:     Size  Location     Type
 12498 ;;		None
 12499 ;; Return value:  Size  Location     Type
 12500 ;;                  1    wreg      enum E355
 12501 ;; Registers used:
 12502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12503 ;; Tracked objects:
 12504 ;;		On entry : 0/0
 12505 ;;		On exit  : 0/0
 12506 ;;		Unchanged: 0/0
 12507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12512 ;;Total ram usage:        0 bytes
 12513 ;; Hardware stack levels used: 1
 12514 ;; Hardware stack levels required when called: 7
 12515 ;; This function calls:
 12516 ;;		_I2C1_MasterOperation
 12517 ;; This function is called by:
 12518 ;;		_I2C1_Write1ByteRegister
 12519 ;;		_I2C1_WR
 12520 ;;		_I2C1_Read1ByteRegister
 12521 ;;		_I2C1_Read2ByteRegister
 12522 ;;		_I2C1_Write2ByteRegister
 12523 ;;		_I2C1_WriteNBytes
 12524 ;;		_I2C1_ReadDataBlock
 12525 ;; This function uses a non-reentrant model
 12526 ;;
 12527                           
 12528  177C                     _I2C1_MasterWrite:	
 12529                           ;psect for function _I2C1_MasterWrite
 12530                           
 12531  177C                     l3690:	
 12532                           ;incstack = 0
 12533                           ; Regs used in _I2C1_MasterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12534                           
 12535                           
 12536                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 12537  177C  3000               	movlw	0
 12538  177D  318B  235F  3197   	fcall	_I2C1_MasterOperation
 12539  1780                     l426:
 12540  1780  0008               	return
 12541  1781                     __end_of_I2C1_MasterWrite:
 12542                           
 12543                           	psect	text34
 12544  0B5F                     __ptext34:	
 12545 ;; *************** function _I2C1_MasterOperation *****************
 12546 ;; Defined at:
 12547 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 12548 ;; Parameters:    Size  Location     Type
 12549 ;;  read            1    wreg     _Bool 
 12550 ;; Auto vars:     Size  Location     Type
 12551 ;;  read            1    3[BANK0 ] _Bool 
 12552 ;;  returnValue     1    4[BANK0 ] enum E355
 12553 ;; Return value:  Size  Location     Type
 12554 ;;                  1    wreg      enum E355
 12555 ;; Registers used:
 12556 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12557 ;; Tracked objects:
 12558 ;;		On entry : 0/0
 12559 ;;		On exit  : 0/0
 12560 ;;		Unchanged: 0/0
 12561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12563 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12564 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12565 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12566 ;;Total ram usage:        3 bytes
 12567 ;; Hardware stack levels used: 1
 12568 ;; Hardware stack levels required when called: 6
 12569 ;; This function calls:
 12570 ;;		_I2C1_MasterStart
 12571 ;;		_I2C1_Poller
 12572 ;; This function is called by:
 12573 ;;		_I2C1_MasterWrite
 12574 ;;		_I2C1_MasterRead
 12575 ;; This function uses a non-reentrant model
 12576 ;;
 12577                           
 12578  0B5F                     _I2C1_MasterOperation:	
 12579                           ;psect for function _I2C1_MasterOperation
 12580                           
 12581                           
 12582                           ;incstack = 0
 12583                           ; Regs used in _I2C1_MasterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12584                           ;I2C1_MasterOperation@read stored from wreg
 12585  0B5F  0020               	movlb	0	; select bank0
 12586  0B60  00A3               	movwf	I2C1_MasterOperation@read
 12587  0B61                     l3632:
 12588                           
 12589                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 12590  0B61  01A4               	clrf	I2C1_MasterOperation@returnValue
 12591  0B62  0AA4               	incf	I2C1_MasterOperation@returnValue,f
 12592                           
 12593                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 12594  0B63  0021               	movlb	1	; select bank1
 12595  0B64  18BC               	btfsc	(_I2C1_Status^(0+128)+28),1
 12596  0B65  2B67               	goto	u1391
 12597  0B66  2B68               	goto	u1390
 12598  0B67                     u1391:
 12599  0B67  2B7F               	goto	l3648
 12600  0B68                     u1390:
 12601  0B68                     l3634:
 12602                           
 12603                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 12604  0B68  14BC               	bsf	(_I2C1_Status^(0+128)+28),1
 12605  0B69                     l3636:
 12606                           
 12607                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 12608  0B69  0020               	movlb	0	; select bank0
 12609  0B6A  01A4               	clrf	I2C1_MasterOperation@returnValue
 12610  0B6B                     l3638:
 12611                           
 12612                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 12613  0B6B  0823               	movf	I2C1_MasterOperation@read,w
 12614  0B6C  1903               	btfsc	3,2
 12615  0B6D  2B6F               	goto	u1401
 12616  0B6E  2B70               	goto	u1400
 12617  0B6F                     u1401:
 12618  0B6F  2B74               	goto	l3642
 12619  0B70                     u1400:
 12620  0B70                     l3640:
 12621                           
 12622                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 12623  0B70  0021               	movlb	1	; select bank1
 12624  0B71  01BA               	clrf	(_I2C1_Status^(0+128)+26)
 12625  0B72  0ABA               	incf	(_I2C1_Status^(0+128)+26),f
 12626                           
 12627                           ;mcc_generated_files/i2c1_master.c: 235:         }
 12628  0B73  2B79               	goto	l3644
 12629  0B74                     l3642:
 12630                           
 12631                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 12632  0B74  3002               	movlw	2
 12633  0B75  00FD               	movwf	??_I2C1_MasterOperation
 12634  0B76  087D               	movf	??_I2C1_MasterOperation,w
 12635  0B77  0021               	movlb	1	; select bank1
 12636  0B78  00BA               	movwf	(_I2C1_Status^(0+128)+26)
 12637  0B79                     l3644:
 12638                           
 12639                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 12640  0B79  3197  2733  318B   	fcall	_I2C1_MasterStart
 12641  0B7C                     l3646:
 12642                           
 12643                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 12644  0B7C  318A  2203  318B   	fcall	_I2C1_Poller
 12645  0B7F                     l3648:
 12646                           
 12647                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 12648  0B7F  0020               	movlb	0	; select bank0
 12649  0B80  0824               	movf	I2C1_MasterOperation@returnValue,w
 12650  0B81                     l420:
 12651  0B81  0008               	return
 12652  0B82                     __end_of_I2C1_MasterOperation:
 12653                           
 12654                           	psect	text35
 12655  0A03                     __ptext35:	
 12656 ;; *************** function _I2C1_Poller *****************
 12657 ;; Defined at:
 12658 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 12659 ;; Parameters:    Size  Location     Type
 12660 ;;		None
 12661 ;; Auto vars:     Size  Location     Type
 12662 ;;		None
 12663 ;; Return value:  Size  Location     Type
 12664 ;;                  1    wreg      void 
 12665 ;; Registers used:
 12666 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12667 ;; Tracked objects:
 12668 ;;		On entry : 0/0
 12669 ;;		On exit  : 0/0
 12670 ;;		Unchanged: 0/0
 12671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12676 ;;Total ram usage:        0 bytes
 12677 ;; Hardware stack levels used: 1
 12678 ;; Hardware stack levels required when called: 5
 12679 ;; This function calls:
 12680 ;;		_I2C1_MasterFsm
 12681 ;;		_I2C1_MasterWaitForEvent
 12682 ;; This function is called by:
 12683 ;;		_I2C1_MasterOperation
 12684 ;; This function uses a non-reentrant model
 12685 ;;
 12686                           
 12687  0A03                     _I2C1_Poller:	
 12688                           ;psect for function _I2C1_Poller
 12689                           
 12690  0A03                     l3608:	
 12691                           ;incstack = 0
 12692                           ; Regs used in _I2C1_Poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12693                           
 12694                           
 12695                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 12696  0A03  2A0A               	goto	l3614
 12697  0A04                     l3610:
 12698                           
 12699                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 12700  0A04  3197  2799  318A   	fcall	_I2C1_MasterWaitForEvent
 12701  0A07                     l3612:
 12702                           
 12703                           ;mcc_generated_files/i2c1_master.c: 317:         I2C1_MasterFsm();
 12704  0A07  318C  2476  318A   	fcall	_I2C1_MasterFsm
 12705  0A0A                     l3614:
 12706                           
 12707                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 12708  0A0A  0021               	movlb	1	; select bank1
 12709  0A0B  18BC               	btfsc	(_I2C1_Status^(0+128)+28),1
 12710  0A0C  2A0E               	goto	u1371
 12711  0A0D  2A0F               	goto	u1370
 12712  0A0E                     u1371:
 12713  0A0E  2A04               	goto	l3610
 12714  0A0F                     u1370:
 12715  0A0F                     l459:
 12716  0A0F  0008               	return
 12717  0A10                     __end_of_I2C1_Poller:
 12718                           
 12719                           	psect	text36
 12720  1799                     __ptext36:	
 12721 ;; *************** function _I2C1_MasterWaitForEvent *****************
 12722 ;; Defined at:
 12723 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 12724 ;; Parameters:    Size  Location     Type
 12725 ;;		None
 12726 ;; Auto vars:     Size  Location     Type
 12727 ;;		None
 12728 ;; Return value:  Size  Location     Type
 12729 ;;                  1    wreg      void 
 12730 ;; Registers used:
 12731 ;;		None
 12732 ;; Tracked objects:
 12733 ;;		On entry : 0/0
 12734 ;;		On exit  : 0/0
 12735 ;;		Unchanged: 0/0
 12736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12741 ;;Total ram usage:        0 bytes
 12742 ;; Hardware stack levels used: 1
 12743 ;; This function calls:
 12744 ;;		Nothing
 12745 ;; This function is called by:
 12746 ;;		_I2C1_Poller
 12747 ;; This function uses a non-reentrant model
 12748 ;;
 12749                           
 12750  1799                     _I2C1_MasterWaitForEvent:	
 12751                           ;psect for function _I2C1_MasterWaitForEvent
 12752                           
 12753  1799                     l632:	
 12754                           ;incstack = 0
 12755                           ; Regs used in _I2C1_MasterWaitForEvent: []
 12756                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 12757                           
 12758                           
 12759                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR3bits.SSP1IF)
 12760  1799  002E               	movlb	14	; select bank14
 12761  179A  1C0F               	btfss	15,0	;volatile
 12762  179B  2F9D               	goto	u1341
 12763  179C  2F9E               	goto	u1340
 12764  179D                     u1341:
 12765  179D  2F99               	goto	l632
 12766  179E                     u1340:
 12767  179E                     l636:
 12768  179E  0008               	return
 12769  179F                     __end_of_I2C1_MasterWaitForEvent:
 12770                           
 12771                           	psect	text37
 12772  0C76                     __ptext37:	
 12773 ;; *************** function _I2C1_MasterFsm *****************
 12774 ;; Defined at:
 12775 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 12776 ;; Parameters:    Size  Location     Type
 12777 ;;		None
 12778 ;; Auto vars:     Size  Location     Type
 12779 ;;		None
 12780 ;; Return value:  Size  Location     Type
 12781 ;;                  1    wreg      void 
 12782 ;; Registers used:
 12783 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12784 ;; Tracked objects:
 12785 ;;		On entry : 0/0
 12786 ;;		On exit  : 0/0
 12787 ;;		Unchanged: 0/0
 12788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12791 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12792 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12793 ;;Total ram usage:        3 bytes
 12794 ;; Hardware stack levels used: 1
 12795 ;; Hardware stack levels required when called: 4
 12796 ;; This function calls:
 12797 ;;		_I2C1_DO_ADDRESS_NACK
 12798 ;;		_I2C1_DO_IDLE
 12799 ;;		_I2C1_DO_RCEN
 12800 ;;		_I2C1_DO_RESET
 12801 ;;		_I2C1_DO_RX
 12802 ;;		_I2C1_DO_RX_ACK
 12803 ;;		_I2C1_DO_RX_NACK_RESTART
 12804 ;;		_I2C1_DO_RX_NACK_STOP
 12805 ;;		_I2C1_DO_SEND_ADR_READ
 12806 ;;		_I2C1_DO_SEND_ADR_WRITE
 12807 ;;		_I2C1_DO_SEND_RESTART
 12808 ;;		_I2C1_DO_SEND_RESTART_READ
 12809 ;;		_I2C1_DO_SEND_RESTART_WRITE
 12810 ;;		_I2C1_DO_SEND_STOP
 12811 ;;		_I2C1_DO_TX
 12812 ;;		_I2C1_DO_TX_EMPTY
 12813 ;;		_I2C1_MasterClearIrq
 12814 ;;		_I2C1_MasterIsNack
 12815 ;; This function is called by:
 12816 ;;		_I2C1_Poller
 12817 ;; This function uses a non-reentrant model
 12818 ;;
 12819                           
 12820  0C76                     _I2C1_MasterFsm:	
 12821                           ;psect for function _I2C1_MasterFsm
 12822                           
 12823  0C76                     l3596:	
 12824                           ;incstack = 0
 12825                           ; Regs used in _I2C1_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12826                           
 12827                           
 12828                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 12829  0C76  3197  272A  318C   	fcall	_I2C1_MasterClearIrq
 12830  0C79                     l3598:
 12831                           
 12832                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 12833  0C79  0021               	movlb	1	; select bank1
 12834  0C7A  1C3C               	btfss	(_I2C1_Status^(0+128)+28),0
 12835  0C7B  2C7D               	goto	u1351
 12836  0C7C  2C7E               	goto	u1350
 12837  0C7D                     u1351:
 12838  0C7D  2C8C               	goto	l3604
 12839  0C7E                     u1350:
 12840  0C7E                     l3600:
 12841  0C7E  3197  2793  318C   	fcall	_I2C1_MasterIsNack
 12842  0C81  3A00               	xorlw	0
 12843  0C82  1903               	skipnz
 12844  0C83  2C85               	goto	u1361
 12845  0C84  2C86               	goto	u1360
 12846  0C85                     u1361:
 12847  0C85  2C8C               	goto	l3604
 12848  0C86                     u1360:
 12849  0C86                     l3602:
 12850                           
 12851                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 12852  0C86  300F               	movlw	15
 12853  0C87  0020               	movlb	0	; select bank0
 12854  0C88  00A0               	movwf	??_I2C1_MasterFsm
 12855  0C89  0820               	movf	??_I2C1_MasterFsm,w
 12856  0C8A  0021               	movlb	1	; select bank1
 12857  0C8B  00BA               	movwf	(_I2C1_Status^(0+128)+26)
 12858  0C8C                     l3604:
 12859                           
 12860                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = i2c1_fsmStateTable[I2C1
      +                          _Status.state]();
 12861  0C8C  0021               	movlb	1	; select bank1
 12862  0C8D  083A               	movf	(_I2C1_Status^(0+128)+26),w
 12863  0C8E  0020               	movlb	0	; select bank0
 12864  0C8F  00A0               	movwf	??_I2C1_MasterFsm
 12865  0C90  01A1               	clrf	??_I2C1_MasterFsm+1
 12866  0C91  35A0               	lslf	??_I2C1_MasterFsm,f
 12867  0C92  0DA1               	rlf	??_I2C1_MasterFsm+1,f
 12868  0C93  3040               	movlw	low (_i2c1_fsmStateTable| (0+32768))
 12869  0C94  0720               	addwf	??_I2C1_MasterFsm,w
 12870  0C95  0084               	movwf	4
 12871  0C96  3090               	movlw	high (_i2c1_fsmStateTable| (0+32768))
 12872  0C97  3D21               	addwfc	??_I2C1_MasterFsm+1,w
 12873  0C98  0085               	movwf	5
 12874  0C99  3F01               	moviw [1]fsr0
 12875  0C9A  008A               	movwf	10
 12876  0C9B  3F00               	moviw [0]fsr0
 12877  0C9C  000A               	callw
 12878  0C9D  318C               	pagesel	$
 12879  0C9E  0020               	movlb	0	; select bank0
 12880  0C9F  00A2               	movwf	??_I2C1_MasterFsm+2
 12881  0CA0  0822               	movf	??_I2C1_MasterFsm+2,w
 12882  0CA1  0021               	movlb	1	; select bank1
 12883  0CA2  00BA               	movwf	(_I2C1_Status^(0+128)+26)
 12884  0CA3                     l463:
 12885  0CA3  0008               	return
 12886  0CA4                     __end_of_I2C1_MasterFsm:
 12887                           
 12888                           	psect	text38
 12889  0C4A                     __ptext38:	
 12890 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 12891 ;; Defined at:
 12892 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 12893 ;; Parameters:    Size  Location     Type
 12894 ;;		None
 12895 ;; Auto vars:     Size  Location     Type
 12896 ;;		None
 12897 ;; Return value:  Size  Location     Type
 12898 ;;                  1    wreg      enum E12085
 12899 ;; Registers used:
 12900 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12901 ;; Tracked objects:
 12902 ;;		On entry : 0/0
 12903 ;;		On exit  : 0/0
 12904 ;;		Unchanged: 0/0
 12905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12908 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12909 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12910 ;;Total ram usage:        3 bytes
 12911 ;; Hardware stack levels used: 1
 12912 ;; Hardware stack levels required when called: 3
 12913 ;; This function calls:
 12914 ;;		Absolute function
 12915 ;;		_I2C1_CallbackReturnReset
 12916 ;;		_I2C1_CallbackReturnStop
 12917 ;;		_I2C1_DO_SEND_RESTART
 12918 ;;		_I2C1_DO_SEND_STOP
 12919 ;;		_rd1RegCompleteHandler
 12920 ;;		_rd2RegCompleteHandler
 12921 ;;		_rdBlkRegCompleteHandler
 12922 ;;		_wr1RegCompleteHandler
 12923 ;;		_wr2RegCompleteHandler
 12924 ;; This function is called by:
 12925 ;;		_I2C1_MasterFsm
 12926 ;; This function uses a non-reentrant model
 12927 ;;
 12928                           
 12929  0C4A                     _I2C1_DO_ADDRESS_NACK:	
 12930                           ;psect for function _I2C1_DO_ADDRESS_NACK
 12931                           
 12932  0C4A                     l3572:	
 12933                           ;incstack = 0
 12934                           ; Regs used in _I2C1_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12935                           
 12936                           
 12937                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 12938  0C4A  0021               	movlb	1	; select bank1
 12939  0C4B  103C               	bcf	(_I2C1_Status^(0+128)+28),0
 12940  0C4C                     l3574:
 12941                           
 12942                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 12943  0C4C  3002               	movlw	2
 12944  0C4D  00FA               	movwf	??_I2C1_DO_ADDRESS_NACK
 12945  0C4E  087A               	movf	??_I2C1_DO_ADDRESS_NACK,w
 12946  0C4F  00BB               	movwf	(_I2C1_Status^(0+128)+27)
 12947                           
 12948                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 12949  0C50  2C59               	goto	l3586
 12950  0C51                     l3576:
 12951                           
 12952                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 12953  0C51  3197  275E  318C   	fcall	_I2C1_DO_SEND_RESTART
 12954  0C54  2C75               	goto	l554
 12955  0C55                     l3580:
 12956                           
 12957                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 12958  0C55  3197  2763  318C   	fcall	_I2C1_DO_SEND_STOP
 12959  0C58  2C75               	goto	l554
 12960  0C59                     l3586:
 12961  0C59  082E               	movf	(low ((_I2C1_Status| 0+14)))^(0+128),w
 12962  0C5A  00FA               	movwf	??_I2C1_DO_ADDRESS_NACK
 12963  0C5B  087A               	movf	??_I2C1_DO_ADDRESS_NACK,w
 12964  0C5C  00F9               	movwf	I2C1_CallbackReturnReset@funPtr
 12965  0C5D  3004               	movlw	4
 12966  0C5E  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 12967  0C5F  0086               	movwf	6
 12968  0C60  0187               	clrf	7
 12969  0C61  3F41               	moviw [1]fsr1
 12970  0C62  008A               	movwf	10
 12971  0C63  3F40               	moviw [0]fsr1
 12972  0C64  000A               	callw
 12973  0C65  318C               	pagesel	$
 12974  0C66  00FB               	movwf	??_I2C1_DO_ADDRESS_NACK+1
 12975  0C67  01FC               	clrf	??_I2C1_DO_ADDRESS_NACK+2
 12976                           
 12977                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12978                           ; Switch size 1, requested type "simple"
 12979                           ; Number of cases is 1, Range of values is 0 to 0
 12980                           ; switch strategies available:
 12981                           ; Name         Instructions Cycles
 12982                           ; simple_byte            4     3 (average)
 12983                           ; direct_byte            8     6 (fixed)
 12984                           ; jumptable            260     6 (fixed)
 12985                           ;	Chosen strategy is simple_byte
 12986  0C68  087C               	movf	??_I2C1_DO_ADDRESS_NACK+2,w
 12987  0C69  3A00               	xorlw	0	; case 0
 12988  0C6A  1903               	skipnz
 12989  0C6B  2C6D               	goto	l4812
 12990  0C6C  2C55               	goto	l3580
 12991  0C6D                     l4812:
 12992                           
 12993                           ; Switch size 1, requested type "simple"
 12994                           ; Number of cases is 2, Range of values is 2 to 3
 12995                           ; switch strategies available:
 12996                           ; Name         Instructions Cycles
 12997                           ; simple_byte            7     4 (average)
 12998                           ; direct_byte           13     9 (fixed)
 12999                           ; jumptable            263     9 (fixed)
 13000                           ;	Chosen strategy is simple_byte
 13001  0C6D  087B               	movf	??_I2C1_DO_ADDRESS_NACK+1,w
 13002  0C6E  3A02               	xorlw	2	; case 2
 13003  0C6F  1903               	skipnz
 13004  0C70  2C51               	goto	l3576
 13005  0C71  3A01               	xorlw	1	; case 3
 13006  0C72  1903               	skipnz
 13007  0C73  2C51               	goto	l3576
 13008  0C74  2C55               	goto	l3580
 13009  0C75                     l554:
 13010  0C75  0008               	return
 13011  0C76                     __end_of_I2C1_DO_ADDRESS_NACK:
 13012                           
 13013                           	psect	text39
 13014  1777                     __ptext39:	
 13015 ;; *************** function _I2C1_DO_RESET *****************
 13016 ;; Defined at:
 13017 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 13018 ;; Parameters:    Size  Location     Type
 13019 ;;		None
 13020 ;; Auto vars:     Size  Location     Type
 13021 ;;		None
 13022 ;; Return value:  Size  Location     Type
 13023 ;;                  1    wreg      enum E12085
 13024 ;; Registers used:
 13025 ;;		wreg, status,2
 13026 ;; Tracked objects:
 13027 ;;		On entry : 0/0
 13028 ;;		On exit  : 0/0
 13029 ;;		Unchanged: 0/0
 13030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13035 ;;Total ram usage:        0 bytes
 13036 ;; Hardware stack levels used: 1
 13037 ;; This function calls:
 13038 ;;		Nothing
 13039 ;; This function is called by:
 13040 ;;		_I2C1_MasterFsm
 13041 ;; This function uses a non-reentrant model
 13042 ;;
 13043                           
 13044  1777                     _I2C1_DO_RESET:	
 13045                           ;psect for function _I2C1_DO_RESET
 13046                           
 13047  1777                     l3564:	
 13048                           ;incstack = 0
 13049                           ; Regs used in _I2C1_DO_RESET: [wreg+status,2]
 13050                           
 13051                           
 13052                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 13053  1777  0021               	movlb	1	; select bank1
 13054  1778  10BC               	bcf	(_I2C1_Status^(0+128)+28),1
 13055  1779                     l3566:
 13056                           
 13057                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 13058  1779  01BB               	clrf	(_I2C1_Status^(0+128)+27)
 13059  177A                     l3568:
 13060                           
 13061                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 13062  177A  300E               	movlw	14
 13063  177B                     l548:
 13064  177B  0008               	return
 13065  177C                     __end_of_I2C1_DO_RESET:
 13066                           
 13067                           	psect	text40
 13068  1772                     __ptext40:	
 13069 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 13070 ;; Defined at:
 13071 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 13072 ;; Parameters:    Size  Location     Type
 13073 ;;		None
 13074 ;; Auto vars:     Size  Location     Type
 13075 ;;		None
 13076 ;; Return value:  Size  Location     Type
 13077 ;;                  1    wreg      enum E12085
 13078 ;; Registers used:
 13079 ;;		wreg, status,2, status,0, pclath, cstack
 13080 ;; Tracked objects:
 13081 ;;		On entry : 0/0
 13082 ;;		On exit  : 0/0
 13083 ;;		Unchanged: 0/0
 13084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13089 ;;Total ram usage:        0 bytes
 13090 ;; Hardware stack levels used: 1
 13091 ;; Hardware stack levels required when called: 1
 13092 ;; This function calls:
 13093 ;;		_I2C1_MasterSendNack
 13094 ;; This function is called by:
 13095 ;;		_I2C1_DO_RX
 13096 ;;		_I2C1_MasterFsm
 13097 ;; This function uses a non-reentrant model
 13098 ;;
 13099                           
 13100  1772                     _I2C1_DO_RX_NACK_RESTART:	
 13101                           ;psect for function _I2C1_DO_RX_NACK_RESTART
 13102                           
 13103  1772                     l3402:	
 13104                           ;incstack = 0
 13105                           ; Regs used in _I2C1_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 13106                           
 13107                           
 13108                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 13109  1772  3197  2742  3197   	fcall	_I2C1_MasterSendNack
 13110  1775                     l3404:
 13111                           
 13112                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 13113  1775  3009               	movlw	9
 13114  1776                     l545:
 13115  1776  0008               	return
 13116  1777                     __end_of_I2C1_DO_RX_NACK_RESTART:
 13117                           
 13118                           	psect	text41
 13119  176D                     __ptext41:	
 13120 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 13121 ;; Defined at:
 13122 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 13123 ;; Parameters:    Size  Location     Type
 13124 ;;		None
 13125 ;; Auto vars:     Size  Location     Type
 13126 ;;		None
 13127 ;; Return value:  Size  Location     Type
 13128 ;;                  1    wreg      enum E12085
 13129 ;; Registers used:
 13130 ;;		wreg, status,2, status,0, pclath, cstack
 13131 ;; Tracked objects:
 13132 ;;		On entry : 0/0
 13133 ;;		On exit  : 0/0
 13134 ;;		Unchanged: 0/0
 13135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13140 ;;Total ram usage:        0 bytes
 13141 ;; Hardware stack levels used: 1
 13142 ;; Hardware stack levels required when called: 1
 13143 ;; This function calls:
 13144 ;;		_I2C1_MasterSendNack
 13145 ;; This function is called by:
 13146 ;;		_I2C1_DO_RX
 13147 ;;		_I2C1_MasterFsm
 13148 ;; This function uses a non-reentrant model
 13149 ;;
 13150                           
 13151  176D                     _I2C1_DO_RX_NACK_STOP:	
 13152                           ;psect for function _I2C1_DO_RX_NACK_STOP
 13153                           
 13154  176D                     l3408:	
 13155                           ;incstack = 0
 13156                           ; Regs used in _I2C1_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 13157                           
 13158                           
 13159                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 13160  176D  3197  2742  3197   	fcall	_I2C1_MasterSendNack
 13161  1770                     l3410:
 13162                           
 13163                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 13164  1770  300A               	movlw	10
 13165  1771                     l542:
 13166  1771  0008               	return
 13167  1772                     __end_of_I2C1_DO_RX_NACK_STOP:
 13168                           
 13169                           	psect	text42
 13170  1768                     __ptext42:	
 13171 ;; *************** function _I2C1_DO_RX_ACK *****************
 13172 ;; Defined at:
 13173 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 13174 ;; Parameters:    Size  Location     Type
 13175 ;;		None
 13176 ;; Auto vars:     Size  Location     Type
 13177 ;;		None
 13178 ;; Return value:  Size  Location     Type
 13179 ;;                  1    wreg      enum E12085
 13180 ;; Registers used:
 13181 ;;		wreg, status,2, status,0, pclath, cstack
 13182 ;; Tracked objects:
 13183 ;;		On entry : 0/0
 13184 ;;		On exit  : 0/0
 13185 ;;		Unchanged: 0/0
 13186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13191 ;;Total ram usage:        0 bytes
 13192 ;; Hardware stack levels used: 1
 13193 ;; Hardware stack levels required when called: 1
 13194 ;; This function calls:
 13195 ;;		_I2C1_MasterSendAck
 13196 ;; This function is called by:
 13197 ;;		_I2C1_MasterFsm
 13198 ;; This function uses a non-reentrant model
 13199 ;;
 13200                           
 13201  1768                     _I2C1_DO_RX_ACK:	
 13202                           ;psect for function _I2C1_DO_RX_ACK
 13203                           
 13204  1768                     l3558:	
 13205                           ;incstack = 0
 13206                           ; Regs used in _I2C1_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
 13207                           
 13208                           
 13209                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 13210  1768  3197  2746  3197   	fcall	_I2C1_MasterSendAck
 13211  176B                     l3560:
 13212                           
 13213                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 13214  176B  3005               	movlw	5
 13215  176C                     l539:
 13216  176C  0008               	return
 13217  176D                     __end_of_I2C1_DO_RX_ACK:
 13218                           
 13219                           	psect	text43
 13220  1763                     __ptext43:	
 13221 ;; *************** function _I2C1_DO_SEND_STOP *****************
 13222 ;; Defined at:
 13223 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 13224 ;; Parameters:    Size  Location     Type
 13225 ;;		None
 13226 ;; Auto vars:     Size  Location     Type
 13227 ;;		None
 13228 ;; Return value:  Size  Location     Type
 13229 ;;                  1    wreg      enum E12085
 13230 ;; Registers used:
 13231 ;;		wreg, status,2, status,0, pclath, cstack
 13232 ;; Tracked objects:
 13233 ;;		On entry : 0/0
 13234 ;;		On exit  : 0/0
 13235 ;;		Unchanged: 0/0
 13236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13241 ;;Total ram usage:        0 bytes
 13242 ;; Hardware stack levels used: 1
 13243 ;; Hardware stack levels required when called: 1
 13244 ;; This function calls:
 13245 ;;		_I2C1_MasterStop
 13246 ;; This function is called by:
 13247 ;;		_I2C1_DO_TX
 13248 ;;		_I2C1_DO_TX_EMPTY
 13249 ;;		_I2C1_DO_ADDRESS_NACK
 13250 ;;		_I2C1_MasterFsm
 13251 ;; This function uses a non-reentrant model
 13252 ;;
 13253                           
 13254  1763                     _I2C1_DO_SEND_STOP:	
 13255                           ;psect for function _I2C1_DO_SEND_STOP
 13256                           
 13257  1763                     l3390:	
 13258                           ;incstack = 0
 13259                           ; Regs used in _I2C1_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 13260                           
 13261                           
 13262                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 13263  1763  3197  2739  3197   	fcall	_I2C1_MasterStop
 13264  1766                     l3392:
 13265                           
 13266                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 13267  1766  3000               	movlw	0
 13268  1767                     l536:
 13269  1767  0008               	return
 13270  1768                     __end_of_I2C1_DO_SEND_STOP:
 13271                           
 13272                           	psect	text44
 13273  175E                     __ptext44:	
 13274 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 13275 ;; Defined at:
 13276 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 13277 ;; Parameters:    Size  Location     Type
 13278 ;;		None
 13279 ;; Auto vars:     Size  Location     Type
 13280 ;;		None
 13281 ;; Return value:  Size  Location     Type
 13282 ;;                  1    wreg      enum E12085
 13283 ;; Registers used:
 13284 ;;		wreg, status,2, status,0, pclath, cstack
 13285 ;; Tracked objects:
 13286 ;;		On entry : 0/0
 13287 ;;		On exit  : 0/0
 13288 ;;		Unchanged: 0/0
 13289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13294 ;;Total ram usage:        0 bytes
 13295 ;; Hardware stack levels used: 1
 13296 ;; Hardware stack levels required when called: 1
 13297 ;; This function calls:
 13298 ;;		_I2C1_MasterEnableRestart
 13299 ;; This function is called by:
 13300 ;;		_I2C1_DO_TX_EMPTY
 13301 ;;		_I2C1_DO_ADDRESS_NACK
 13302 ;;		_I2C1_MasterFsm
 13303 ;; This function uses a non-reentrant model
 13304 ;;
 13305                           
 13306  175E                     _I2C1_DO_SEND_RESTART:	
 13307                           ;psect for function _I2C1_DO_SEND_RESTART
 13308                           
 13309  175E                     l3416:	
 13310                           ;incstack = 0
 13311                           ; Regs used in _I2C1_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 13312                           
 13313                           
 13314                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 13315  175E  3197  2736  3197   	fcall	_I2C1_MasterEnableRestart
 13316  1761                     l3418:
 13317                           
 13318                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 13319  1761  3001               	movlw	1
 13320  1762                     l533:
 13321  1762  0008               	return
 13322  1763                     __end_of_I2C1_DO_SEND_RESTART:
 13323                           
 13324                           	psect	text45
 13325  1759                     __ptext45:	
 13326 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 13327 ;; Defined at:
 13328 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 13329 ;; Parameters:    Size  Location     Type
 13330 ;;		None
 13331 ;; Auto vars:     Size  Location     Type
 13332 ;;		None
 13333 ;; Return value:  Size  Location     Type
 13334 ;;                  1    wreg      enum E12085
 13335 ;; Registers used:
 13336 ;;		wreg, status,2, status,0, pclath, cstack
 13337 ;; Tracked objects:
 13338 ;;		On entry : 0/0
 13339 ;;		On exit  : 0/0
 13340 ;;		Unchanged: 0/0
 13341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13346 ;;Total ram usage:        0 bytes
 13347 ;; Hardware stack levels used: 1
 13348 ;; Hardware stack levels required when called: 1
 13349 ;; This function calls:
 13350 ;;		_I2C1_MasterEnableRestart
 13351 ;; This function is called by:
 13352 ;;		_I2C1_DO_TX
 13353 ;;		_I2C1_MasterFsm
 13354 ;; This function uses a non-reentrant model
 13355 ;;
 13356                           
 13357  1759                     _I2C1_DO_SEND_RESTART_WRITE:	
 13358                           ;psect for function _I2C1_DO_SEND_RESTART_WRITE
 13359                           
 13360  1759                     l3384:	
 13361                           ;incstack = 0
 13362                           ; Regs used in _I2C1_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 13363                           
 13364                           
 13365                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 13366  1759  3197  2736  3197   	fcall	_I2C1_MasterEnableRestart
 13367  175C                     l3386:
 13368                           
 13369                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 13370  175C  3002               	movlw	2
 13371  175D                     l530:
 13372  175D  0008               	return
 13373  175E                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 13374                           
 13375                           	psect	text46
 13376  1754                     __ptext46:	
 13377 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 13378 ;; Defined at:
 13379 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 13380 ;; Parameters:    Size  Location     Type
 13381 ;;		None
 13382 ;; Auto vars:     Size  Location     Type
 13383 ;;		None
 13384 ;; Return value:  Size  Location     Type
 13385 ;;                  1    wreg      enum E12085
 13386 ;; Registers used:
 13387 ;;		wreg, status,2, status,0, pclath, cstack
 13388 ;; Tracked objects:
 13389 ;;		On entry : 0/0
 13390 ;;		On exit  : 0/0
 13391 ;;		Unchanged: 0/0
 13392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13397 ;;Total ram usage:        0 bytes
 13398 ;; Hardware stack levels used: 1
 13399 ;; Hardware stack levels required when called: 1
 13400 ;; This function calls:
 13401 ;;		_I2C1_MasterEnableRestart
 13402 ;; This function is called by:
 13403 ;;		_I2C1_DO_TX
 13404 ;;		_I2C1_MasterFsm
 13405 ;; This function uses a non-reentrant model
 13406 ;;
 13407                           
 13408  1754                     _I2C1_DO_SEND_RESTART_READ:	
 13409                           ;psect for function _I2C1_DO_SEND_RESTART_READ
 13410                           
 13411  1754                     l3378:	
 13412                           ;incstack = 0
 13413                           ; Regs used in _I2C1_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 13414                           
 13415                           
 13416                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 13417  1754  3197  2736  3197   	fcall	_I2C1_MasterEnableRestart
 13418  1757                     l3380:
 13419                           
 13420                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 13421  1757  3001               	movlw	1
 13422  1758                     l527:
 13423  1758  0008               	return
 13424  1759                     __end_of_I2C1_DO_SEND_RESTART_READ:
 13425                           
 13426                           	psect	text47
 13427  17AB                     __ptext47:	
 13428 ;; *************** function _I2C1_DO_RCEN *****************
 13429 ;; Defined at:
 13430 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 13431 ;; Parameters:    Size  Location     Type
 13432 ;;		None
 13433 ;; Auto vars:     Size  Location     Type
 13434 ;;		None
 13435 ;; Return value:  Size  Location     Type
 13436 ;;                  1    wreg      enum E12085
 13437 ;; Registers used:
 13438 ;;		wreg, status,2, status,0, pclath, cstack
 13439 ;; Tracked objects:
 13440 ;;		On entry : 0/0
 13441 ;;		On exit  : 0/0
 13442 ;;		Unchanged: 0/0
 13443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13448 ;;Total ram usage:        0 bytes
 13449 ;; Hardware stack levels used: 1
 13450 ;; Hardware stack levels required when called: 1
 13451 ;; This function calls:
 13452 ;;		_I2C1_MasterStartRx
 13453 ;; This function is called by:
 13454 ;;		_I2C1_MasterFsm
 13455 ;; This function uses a non-reentrant model
 13456 ;;
 13457                           
 13458  17AB                     _I2C1_DO_RCEN:	
 13459                           ;psect for function _I2C1_DO_RCEN
 13460                           
 13461  17AB                     l3524:	
 13462                           ;incstack = 0
 13463                           ; Regs used in _I2C1_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
 13464                           
 13465                           
 13466                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 13467  17AB  0021               	movlb	1	; select bank1
 13468  17AC  103C               	bcf	(_I2C1_Status^(0+128)+28),0
 13469  17AD                     l3526:
 13470                           
 13471                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 13472  17AD  3197  273C  3197   	fcall	_I2C1_MasterStartRx
 13473  17B0                     l3528:
 13474                           
 13475                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 13476  17B0  3004               	movlw	4
 13477  17B1                     l503:
 13478  17B1  0008               	return
 13479  17B2                     __end_of_I2C1_DO_RCEN:
 13480                           
 13481                           	psect	text48
 13482  0E5F                     __ptext48:	
 13483 ;; *************** function _I2C1_DO_RX *****************
 13484 ;; Defined at:
 13485 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 13486 ;; Parameters:    Size  Location     Type
 13487 ;;		None
 13488 ;; Auto vars:     Size  Location     Type
 13489 ;;		None
 13490 ;; Return value:  Size  Location     Type
 13491 ;;                  1    wreg      enum E12085
 13492 ;; Registers used:
 13493 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13494 ;; Tracked objects:
 13495 ;;		On entry : 0/0
 13496 ;;		On exit  : 0/0
 13497 ;;		Unchanged: 0/0
 13498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13501 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13502 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13503 ;;Total ram usage:        3 bytes
 13504 ;; Hardware stack levels used: 1
 13505 ;; Hardware stack levels required when called: 3
 13506 ;; This function calls:
 13507 ;;		Absolute function
 13508 ;;		_I2C1_CallbackReturnReset
 13509 ;;		_I2C1_CallbackReturnStop
 13510 ;;		_I2C1_DO_RX_NACK_RESTART
 13511 ;;		_I2C1_DO_RX_NACK_STOP
 13512 ;;		_I2C1_MasterGetRxData
 13513 ;;		_I2C1_MasterSendAck
 13514 ;;		_rd1RegCompleteHandler
 13515 ;;		_rd2RegCompleteHandler
 13516 ;;		_rdBlkRegCompleteHandler
 13517 ;;		_wr1RegCompleteHandler
 13518 ;;		_wr2RegCompleteHandler
 13519 ;; This function is called by:
 13520 ;;		_I2C1_MasterFsm
 13521 ;; This function uses a non-reentrant model
 13522 ;;
 13523                           
 13524  0E5F                     _I2C1_DO_RX:	
 13525                           ;psect for function _I2C1_DO_RX
 13526                           
 13527  0E5F                     l3492:	
 13528                           ;incstack = 0
 13529                           ; Regs used in _I2C1_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13530                           
 13531                           
 13532                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 13533  0E5F  3197  273F  318E   	fcall	_I2C1_MasterGetRxData
 13534  0E62  00FA               	movwf	??_I2C1_DO_RX
 13535  0E63  0021               	movlb	1	; select bank1
 13536  0E64  0837               	movf	(low ((_I2C1_Status| 0+23)))^(0+128),w
 13537  0E65  0086               	movwf	6
 13538  0E66  0187               	clrf	7
 13539  0E67  087A               	movf	??_I2C1_DO_RX,w
 13540  0E68  0081               	movwf	1
 13541  0E69                     l3494:
 13542  0E69  3001               	movlw	1
 13543  0E6A  00FA               	movwf	??_I2C1_DO_RX
 13544  0E6B  087A               	movf	??_I2C1_DO_RX,w
 13545  0E6C  07B7               	addwf	(low ((_I2C1_Status| 0+23)))^(0+128),f
 13546  0E6D                     l3496:
 13547                           
 13548                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 13549  0E6D  3001               	movlw	1
 13550  0E6E  02B8               	subwf	(_I2C1_Status^(0+128)+24),f
 13551  0E6F  3000               	movlw	0
 13552  0E70  3BB9               	subwfb	((_I2C1_Status+1)^(0+128)+24),f
 13553  0E71  0838               	movf	(_I2C1_Status^(0+128)+24),w
 13554  0E72  0439               	iorwf	((_I2C1_Status+1)^(0+128)+24),w
 13555  0E73  1903               	btfsc	3,2
 13556  0E74  2E76               	goto	u1331
 13557  0E75  2E77               	goto	u1330
 13558  0E76                     u1331:
 13559  0E76  2E7C               	goto	l491
 13560  0E77                     u1330:
 13561  0E77                     l3498:
 13562                           
 13563                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 13564  0E77  3197  2746  318E   	fcall	_I2C1_MasterSendAck
 13565  0E7A                     l3500:
 13566                           
 13567                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 13568  0E7A  3005               	movlw	5
 13569  0E7B  2EA4               	goto	l492
 13570  0E7C                     l491:	
 13571                           ;mcc_generated_files/i2c1_master.c: 386:     else
 13572                           
 13573                           
 13574                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 13575  0E7C  15BC               	bsf	(_I2C1_Status^(0+128)+28),3
 13576                           
 13577                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 13578  0E7D  2E86               	goto	l3516
 13579  0E7E                     l3506:
 13580                           
 13581                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 13582  0E7E  3197  2772  318E   	fcall	_I2C1_DO_RX_NACK_RESTART
 13583  0E81  2EA4               	goto	l492
 13584  0E82                     l3510:
 13585                           
 13586                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 13587  0E82  3197  276D  318E   	fcall	_I2C1_DO_RX_NACK_STOP
 13588  0E85  2EA4               	goto	l492
 13589  0E86                     l3516:
 13590  0E86  082C               	movf	(low ((_I2C1_Status| 0+12)))^(0+128),w
 13591  0E87  00FA               	movwf	??_I2C1_DO_RX
 13592  0E88  087A               	movf	??_I2C1_DO_RX,w
 13593  0E89  00F9               	movwf	I2C1_CallbackReturnReset@funPtr
 13594  0E8A  0821               	movf	(_I2C1_Status+1)^(0+128),w
 13595  0E8B  008A               	movwf	10
 13596  0E8C  0820               	movf	_I2C1_Status^(0+128),w
 13597  0E8D  000A               	callw
 13598  0E8E  318E               	pagesel	$
 13599  0E8F  00FB               	movwf	??_I2C1_DO_RX+1
 13600  0E90  01FC               	clrf	??_I2C1_DO_RX+2
 13601                           
 13602                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13603                           ; Switch size 1, requested type "simple"
 13604                           ; Number of cases is 1, Range of values is 0 to 0
 13605                           ; switch strategies available:
 13606                           ; Name         Instructions Cycles
 13607                           ; simple_byte            4     3 (average)
 13608                           ; direct_byte            8     6 (fixed)
 13609                           ; jumptable            260     6 (fixed)
 13610                           ;	Chosen strategy is simple_byte
 13611  0E91  087C               	movf	??_I2C1_DO_RX+2,w
 13612  0E92  3A00               	xorlw	0	; case 0
 13613  0E93  1903               	skipnz
 13614  0E94  2E96               	goto	l4814
 13615  0E95  2E82               	goto	l3510
 13616  0E96                     l4814:
 13617                           
 13618                           ; Switch size 1, requested type "simple"
 13619                           ; Number of cases is 4, Range of values is 1 to 4
 13620                           ; switch strategies available:
 13621                           ; Name         Instructions Cycles
 13622                           ; simple_byte           13     7 (average)
 13623                           ; direct_byte           17     9 (fixed)
 13624                           ; jumptable            263     9 (fixed)
 13625                           ;	Chosen strategy is simple_byte
 13626  0E96  087B               	movf	??_I2C1_DO_RX+1,w
 13627  0E97  3A01               	xorlw	1	; case 1
 13628  0E98  1903               	skipnz
 13629  0E99  2E82               	goto	l3510
 13630  0E9A  3A03               	xorlw	3	; case 2
 13631  0E9B  1903               	skipnz
 13632  0E9C  2E7E               	goto	l3506
 13633  0E9D  3A01               	xorlw	1	; case 3
 13634  0E9E  1903               	skipnz
 13635  0E9F  2E7E               	goto	l3506
 13636  0EA0  3A07               	xorlw	7	; case 4
 13637  0EA1  1903               	skipnz
 13638  0EA2  2E82               	goto	l3510
 13639  0EA3  2E82               	goto	l3510
 13640  0EA4                     l492:
 13641  0EA4  0008               	return
 13642  0EA5                     __end_of_I2C1_DO_RX:
 13643                           
 13644                           	psect	text49
 13645  0EF8                     __ptext49:	
 13646 ;; *************** function _I2C1_DO_TX *****************
 13647 ;; Defined at:
 13648 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 13649 ;; Parameters:    Size  Location     Type
 13650 ;;		None
 13651 ;; Auto vars:     Size  Location     Type
 13652 ;;		None
 13653 ;; Return value:  Size  Location     Type
 13654 ;;                  1    wreg      enum E12085
 13655 ;; Registers used:
 13656 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13657 ;; Tracked objects:
 13658 ;;		On entry : 0/0
 13659 ;;		On exit  : 0/0
 13660 ;;		Unchanged: 0/0
 13661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13664 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13665 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13666 ;;Total ram usage:        3 bytes
 13667 ;; Hardware stack levels used: 1
 13668 ;; Hardware stack levels required when called: 3
 13669 ;; This function calls:
 13670 ;;		Absolute function
 13671 ;;		_I2C1_CallbackReturnReset
 13672 ;;		_I2C1_CallbackReturnStop
 13673 ;;		_I2C1_DO_SEND_RESTART_READ
 13674 ;;		_I2C1_DO_SEND_RESTART_WRITE
 13675 ;;		_I2C1_DO_SEND_STOP
 13676 ;;		_I2C1_MasterIsNack
 13677 ;;		_I2C1_MasterSendTxData
 13678 ;;		_rd1RegCompleteHandler
 13679 ;;		_rd2RegCompleteHandler
 13680 ;;		_rdBlkRegCompleteHandler
 13681 ;;		_wr1RegCompleteHandler
 13682 ;;		_wr2RegCompleteHandler
 13683 ;; This function is called by:
 13684 ;;		_I2C1_MasterFsm
 13685 ;; This function uses a non-reentrant model
 13686 ;;
 13687                           
 13688  0EF8                     _I2C1_DO_TX:	
 13689                           ;psect for function _I2C1_DO_TX
 13690                           
 13691  0EF8                     l3458:	
 13692                           ;incstack = 0
 13693                           ; Regs used in _I2C1_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13694                           
 13695                           
 13696                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 13697  0EF8  3197  2793  318E   	fcall	_I2C1_MasterIsNack
 13698  0EFB  3A00               	xorlw	0
 13699  0EFC  1903               	skipnz
 13700  0EFD  2EFF               	goto	u1311
 13701  0EFE  2F00               	goto	u1310
 13702  0EFF                     u1311:
 13703  0EFF  2F30               	goto	l475
 13704  0F00                     u1310:
 13705  0F00  2F0D               	goto	l3476
 13706  0F01                     l3462:
 13707                           
 13708                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 13709  0F01  3197  2754  318E   	fcall	_I2C1_DO_SEND_RESTART_READ
 13710  0F04  2F4C               	goto	l478
 13711  0F05                     l3466:
 13712                           
 13713                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 13714  0F05  3197  2759  318E   	fcall	_I2C1_DO_SEND_RESTART_WRITE
 13715  0F08  2F4C               	goto	l478
 13716  0F09                     l3470:
 13717                           
 13718                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 13719  0F09  3197  2763  318E   	fcall	_I2C1_DO_SEND_STOP
 13720  0F0C  2F4C               	goto	l478
 13721  0F0D                     l3476:
 13722  0F0D  0021               	movlb	1	; select bank1
 13723  0F0E  082F               	movf	(low ((_I2C1_Status| 0+15)))^(0+128),w
 13724  0F0F  00FA               	movwf	??_I2C1_DO_TX
 13725  0F10  087A               	movf	??_I2C1_DO_TX,w
 13726  0F11  00F9               	movwf	I2C1_CallbackReturnReset@funPtr
 13727  0F12  3006               	movlw	6
 13728  0F13  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 13729  0F14  0086               	movwf	6
 13730  0F15  0187               	clrf	7
 13731  0F16  3F41               	moviw [1]fsr1
 13732  0F17  008A               	movwf	10
 13733  0F18  3F40               	moviw [0]fsr1
 13734  0F19  000A               	callw
 13735  0F1A  318E               	pagesel	$
 13736  0F1B  00FB               	movwf	??_I2C1_DO_TX+1
 13737  0F1C  01FC               	clrf	??_I2C1_DO_TX+2
 13738                           
 13739                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13740                           ; Switch size 1, requested type "simple"
 13741                           ; Number of cases is 1, Range of values is 0 to 0
 13742                           ; switch strategies available:
 13743                           ; Name         Instructions Cycles
 13744                           ; simple_byte            4     3 (average)
 13745                           ; direct_byte            8     6 (fixed)
 13746                           ; jumptable            260     6 (fixed)
 13747                           ;	Chosen strategy is simple_byte
 13748  0F1D  087C               	movf	??_I2C1_DO_TX+2,w
 13749  0F1E  3A00               	xorlw	0	; case 0
 13750  0F1F  1903               	skipnz
 13751  0F20  2F22               	goto	l4816
 13752  0F21  2F09               	goto	l3470
 13753  0F22                     l4816:
 13754                           
 13755                           ; Switch size 1, requested type "simple"
 13756                           ; Number of cases is 4, Range of values is 1 to 4
 13757                           ; switch strategies available:
 13758                           ; Name         Instructions Cycles
 13759                           ; simple_byte           13     7 (average)
 13760                           ; direct_byte           17     9 (fixed)
 13761                           ; jumptable            263     9 (fixed)
 13762                           ;	Chosen strategy is simple_byte
 13763  0F22  087B               	movf	??_I2C1_DO_TX+1,w
 13764  0F23  3A01               	xorlw	1	; case 1
 13765  0F24  1903               	skipnz
 13766  0F25  2F09               	goto	l3470
 13767  0F26  3A03               	xorlw	3	; case 2
 13768  0F27  1903               	skipnz
 13769  0F28  2F01               	goto	l3462
 13770  0F29  3A01               	xorlw	1	; case 3
 13771  0F2A  1903               	skipnz
 13772  0F2B  2F05               	goto	l3466
 13773  0F2C  3A07               	xorlw	7	; case 4
 13774  0F2D  1903               	skipnz
 13775  0F2E  2F09               	goto	l3470
 13776  0F2F  2F09               	goto	l3470
 13777  0F30                     l475:	
 13778                           ;mcc_generated_files/i2c1_master.c: 370:     else
 13779                           
 13780                           
 13781                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 13782  0F30  0021               	movlb	1	; select bank1
 13783  0F31  103C               	bcf	(_I2C1_Status^(0+128)+28),0
 13784  0F32                     l3478:
 13785                           
 13786                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 13787  0F32  3017               	movlw	23
 13788  0F33  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 13789  0F34  0086               	movwf	6
 13790  0F35  0187               	clrf	7
 13791  0F36  3F40               	moviw [0]fsr1
 13792  0F37  0084               	movwf	4
 13793  0F38  0185               	clrf	5
 13794  0F39  0A81               	incf	1,f
 13795  0F3A  0800               	movf	0,w
 13796  0F3B  3197  274A  318E   	fcall	_I2C1_MasterSendTxData
 13797  0F3E                     l3480:
 13798                           
 13799                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 13800  0F3E  3001               	movlw	1
 13801  0F3F  0021               	movlb	1	; select bank1
 13802  0F40  02B8               	subwf	(_I2C1_Status^(0+128)+24),f
 13803  0F41  3000               	movlw	0
 13804  0F42  3BB9               	subwfb	((_I2C1_Status+1)^(0+128)+24),f
 13805  0F43  0838               	movf	(_I2C1_Status^(0+128)+24),w
 13806  0F44  0439               	iorwf	((_I2C1_Status+1)^(0+128)+24),w
 13807  0F45  1D03               	btfss	3,2
 13808  0F46  2F48               	goto	u1321
 13809  0F47  2F49               	goto	u1320
 13810  0F48                     u1321:
 13811  0F48  2F4B               	goto	l3484
 13812  0F49                     u1320:
 13813  0F49                     l3482:
 13814  0F49  3006               	movlw	6
 13815  0F4A  2F4C               	goto	l478
 13816  0F4B                     l3484:
 13817  0F4B  3003               	movlw	3
 13818  0F4C                     l478:
 13819  0F4C  0008               	return
 13820  0F4D                     __end_of_I2C1_DO_TX:
 13821                           
 13822                           	psect	text50
 13823  17BA                     __ptext50:	
 13824 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 13825 ;; Defined at:
 13826 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 13827 ;; Parameters:    Size  Location     Type
 13828 ;;		None
 13829 ;; Auto vars:     Size  Location     Type
 13830 ;;		None
 13831 ;; Return value:  Size  Location     Type
 13832 ;;                  1    wreg      enum E12085
 13833 ;; Registers used:
 13834 ;;		wreg, status,2, status,0, pclath, cstack
 13835 ;; Tracked objects:
 13836 ;;		On entry : 0/0
 13837 ;;		On exit  : 0/0
 13838 ;;		Unchanged: 0/0
 13839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13844 ;;Total ram usage:        0 bytes
 13845 ;; Hardware stack levels used: 1
 13846 ;; Hardware stack levels required when called: 1
 13847 ;; This function calls:
 13848 ;;		_I2C1_MasterSendTxData
 13849 ;; This function is called by:
 13850 ;;		_I2C1_MasterFsm
 13851 ;; This function uses a non-reentrant model
 13852 ;;
 13853                           
 13854  17BA                     _I2C1_DO_SEND_ADR_WRITE:	
 13855                           ;psect for function _I2C1_DO_SEND_ADR_WRITE
 13856                           
 13857  17BA                     l3450:	
 13858                           ;incstack = 0
 13859                           ; Regs used in _I2C1_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 13860                           
 13861                           
 13862                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 13863  17BA  0021               	movlb	1	; select bank1
 13864  17BB  143C               	bsf	(_I2C1_Status^(0+128)+28),0
 13865  17BC                     l3452:
 13866                           
 13867                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1));
 13868  17BC  3536               	lslf	(_I2C1_Status^(0+128)+22),w
 13869  17BD  3197  274A  3197   	fcall	_I2C1_MasterSendTxData
 13870  17C0                     l3454:
 13871                           
 13872                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 13873  17C0  3003               	movlw	3
 13874  17C1                     l472:
 13875  17C1  0008               	return
 13876  17C2                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 13877                           
 13878                           	psect	text51
 13879  17D4                     __ptext51:	
 13880 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 13881 ;; Defined at:
 13882 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 13883 ;; Parameters:    Size  Location     Type
 13884 ;;		None
 13885 ;; Auto vars:     Size  Location     Type
 13886 ;;		None
 13887 ;; Return value:  Size  Location     Type
 13888 ;;                  1    wreg      enum E12085
 13889 ;; Registers used:
 13890 ;;		wreg, status,2, status,0, pclath, cstack
 13891 ;; Tracked objects:
 13892 ;;		On entry : 0/0
 13893 ;;		On exit  : 0/0
 13894 ;;		Unchanged: 0/0
 13895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13900 ;;Total ram usage:        0 bytes
 13901 ;; Hardware stack levels used: 1
 13902 ;; Hardware stack levels required when called: 1
 13903 ;; This function calls:
 13904 ;;		_I2C1_MasterSendTxData
 13905 ;; This function is called by:
 13906 ;;		_I2C1_MasterFsm
 13907 ;; This function uses a non-reentrant model
 13908 ;;
 13909                           
 13910  17D4                     _I2C1_DO_SEND_ADR_READ:	
 13911                           ;psect for function _I2C1_DO_SEND_ADR_READ
 13912                           
 13913  17D4                     l3442:	
 13914                           ;incstack = 0
 13915                           ; Regs used in _I2C1_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 13916                           
 13917                           
 13918                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 13919  17D4  0021               	movlb	1	; select bank1
 13920  17D5  143C               	bsf	(_I2C1_Status^(0+128)+28),0
 13921  17D6                     l3444:
 13922                           
 13923                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1 | 1));
 13924  17D6  1403               	setc
 13925  17D7  0D36               	rlf	(_I2C1_Status^(0+128)+22),w
 13926  17D8  3197  274A  3197   	fcall	_I2C1_MasterSendTxData
 13927  17DB                     l3446:
 13928                           
 13929                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 13930  17DB  3005               	movlw	5
 13931  17DC                     l469:
 13932  17DC  0008               	return
 13933  17DD                     __end_of_I2C1_DO_SEND_ADR_READ:
 13934                           
 13935                           	psect	text52
 13936  174F                     __ptext52:	
 13937 ;; *************** function _I2C1_DO_IDLE *****************
 13938 ;; Defined at:
 13939 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 13940 ;; Parameters:    Size  Location     Type
 13941 ;;		None
 13942 ;; Auto vars:     Size  Location     Type
 13943 ;;		None
 13944 ;; Return value:  Size  Location     Type
 13945 ;;                  1    wreg      enum E12085
 13946 ;; Registers used:
 13947 ;;		wreg, status,2
 13948 ;; Tracked objects:
 13949 ;;		On entry : 0/0
 13950 ;;		On exit  : 0/0
 13951 ;;		Unchanged: 0/0
 13952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13957 ;;Total ram usage:        0 bytes
 13958 ;; Hardware stack levels used: 1
 13959 ;; This function calls:
 13960 ;;		Nothing
 13961 ;; This function is called by:
 13962 ;;		_I2C1_MasterFsm
 13963 ;; This function uses a non-reentrant model
 13964 ;;
 13965                           
 13966  174F                     _I2C1_DO_IDLE:	
 13967                           ;psect for function _I2C1_DO_IDLE
 13968                           
 13969  174F                     l3434:	
 13970                           ;incstack = 0
 13971                           ; Regs used in _I2C1_DO_IDLE: [wreg+status,2]
 13972                           
 13973                           
 13974                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 13975  174F  0021               	movlb	1	; select bank1
 13976  1750  10BC               	bcf	(_I2C1_Status^(0+128)+28),1
 13977  1751                     l3436:
 13978                           
 13979                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 13980  1751  01BB               	clrf	(_I2C1_Status^(0+128)+27)
 13981  1752                     l3438:
 13982                           
 13983                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 13984  1752  300E               	movlw	14
 13985  1753                     l466:
 13986  1753  0008               	return
 13987  1754                     __end_of_I2C1_DO_IDLE:
 13988                           
 13989                           	psect	text53
 13990  0CA4                     __ptext53:	
 13991 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 13992 ;; Defined at:
 13993 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 13994 ;; Parameters:    Size  Location     Type
 13995 ;;		None
 13996 ;; Auto vars:     Size  Location     Type
 13997 ;;		None
 13998 ;; Return value:  Size  Location     Type
 13999 ;;                  1    wreg      enum E12085
 14000 ;; Registers used:
 14001 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14002 ;; Tracked objects:
 14003 ;;		On entry : 0/0
 14004 ;;		On exit  : 0/0
 14005 ;;		Unchanged: 0/0
 14006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14009 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14010 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14011 ;;Total ram usage:        3 bytes
 14012 ;; Hardware stack levels used: 1
 14013 ;; Hardware stack levels required when called: 3
 14014 ;; This function calls:
 14015 ;;		Absolute function
 14016 ;;		_I2C1_CallbackReturnReset
 14017 ;;		_I2C1_CallbackReturnStop
 14018 ;;		_I2C1_DO_SEND_RESTART
 14019 ;;		_I2C1_DO_SEND_STOP
 14020 ;;		_I2C1_MasterSetIrq
 14021 ;;		_rd1RegCompleteHandler
 14022 ;;		_rd2RegCompleteHandler
 14023 ;;		_rdBlkRegCompleteHandler
 14024 ;;		_wr1RegCompleteHandler
 14025 ;;		_wr2RegCompleteHandler
 14026 ;; This function is called by:
 14027 ;;		_I2C1_MasterFsm
 14028 ;; This function uses a non-reentrant model
 14029 ;;
 14030                           
 14031  0CA4                     _I2C1_DO_TX_EMPTY:	
 14032                           ;psect for function _I2C1_DO_TX_EMPTY
 14033                           
 14034  0CA4                     l3532:	
 14035                           ;incstack = 0
 14036                           ; Regs used in _I2C1_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14037                           
 14038                           
 14039                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 14040  0CA4  0021               	movlb	1	; select bank1
 14041  0CA5  15BC               	bsf	(_I2C1_Status^(0+128)+28),3
 14042                           
 14043                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 14044  0CA6  2CB4               	goto	l3550
 14045  0CA7                     l3534:
 14046                           
 14047                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 14048  0CA7  3197  275E  318C   	fcall	_I2C1_DO_SEND_RESTART
 14049  0CAA  2CD2               	goto	l509
 14050  0CAB                     l3538:
 14051                           
 14052                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 14053  0CAB  318A  2200  318C   	fcall	_I2C1_MasterSetIrq
 14054  0CAE                     l3540:
 14055                           
 14056                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 14057  0CAE  3003               	movlw	3
 14058  0CAF  2CD2               	goto	l509
 14059  0CB0                     l3544:
 14060                           
 14061                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 14062  0CB0  3197  2763  318C   	fcall	_I2C1_DO_SEND_STOP
 14063  0CB3  2CD2               	goto	l509
 14064  0CB4                     l3550:
 14065  0CB4  082C               	movf	(low ((_I2C1_Status| 0+12)))^(0+128),w
 14066  0CB5  00FA               	movwf	??_I2C1_DO_TX_EMPTY
 14067  0CB6  087A               	movf	??_I2C1_DO_TX_EMPTY,w
 14068  0CB7  00F9               	movwf	I2C1_CallbackReturnReset@funPtr
 14069  0CB8  0821               	movf	(_I2C1_Status+1)^(0+128),w
 14070  0CB9  008A               	movwf	10
 14071  0CBA  0820               	movf	_I2C1_Status^(0+128),w
 14072  0CBB  000A               	callw
 14073  0CBC  318C               	pagesel	$
 14074  0CBD  00FB               	movwf	??_I2C1_DO_TX_EMPTY+1
 14075  0CBE  01FC               	clrf	??_I2C1_DO_TX_EMPTY+2
 14076                           
 14077                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14078                           ; Switch size 1, requested type "simple"
 14079                           ; Number of cases is 1, Range of values is 0 to 0
 14080                           ; switch strategies available:
 14081                           ; Name         Instructions Cycles
 14082                           ; simple_byte            4     3 (average)
 14083                           ; direct_byte            8     6 (fixed)
 14084                           ; jumptable            260     6 (fixed)
 14085                           ;	Chosen strategy is simple_byte
 14086  0CBF  087C               	movf	??_I2C1_DO_TX_EMPTY+2,w
 14087  0CC0  3A00               	xorlw	0	; case 0
 14088  0CC1  1903               	skipnz
 14089  0CC2  2CC4               	goto	l4818
 14090  0CC3  2CB0               	goto	l3544
 14091  0CC4                     l4818:
 14092                           
 14093                           ; Switch size 1, requested type "simple"
 14094                           ; Number of cases is 4, Range of values is 1 to 4
 14095                           ; switch strategies available:
 14096                           ; Name         Instructions Cycles
 14097                           ; simple_byte           13     7 (average)
 14098                           ; direct_byte           17     9 (fixed)
 14099                           ; jumptable            263     9 (fixed)
 14100                           ;	Chosen strategy is simple_byte
 14101  0CC4  087B               	movf	??_I2C1_DO_TX_EMPTY+1,w
 14102  0CC5  3A01               	xorlw	1	; case 1
 14103  0CC6  1903               	skipnz
 14104  0CC7  2CB0               	goto	l3544
 14105  0CC8  3A03               	xorlw	3	; case 2
 14106  0CC9  1903               	skipnz
 14107  0CCA  2CA7               	goto	l3534
 14108  0CCB  3A01               	xorlw	1	; case 3
 14109  0CCC  1903               	skipnz
 14110  0CCD  2CA7               	goto	l3534
 14111  0CCE  3A07               	xorlw	7	; case 4
 14112  0CCF  1903               	skipnz
 14113  0CD0  2CAB               	goto	l3538
 14114  0CD1  2CB0               	goto	l3544
 14115  0CD2                     l509:
 14116  0CD2  0008               	return
 14117  0CD3                     __end_of_I2C1_DO_TX_EMPTY:
 14118                           
 14119                           	psect	text54
 14120  0A00                     __ptext54:	
 14121 ;; *************** function _I2C1_MasterSetIrq *****************
 14122 ;; Defined at:
 14123 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 14124 ;; Parameters:    Size  Location     Type
 14125 ;;		None
 14126 ;; Auto vars:     Size  Location     Type
 14127 ;;		None
 14128 ;; Return value:  Size  Location     Type
 14129 ;;                  1    wreg      void 
 14130 ;; Registers used:
 14131 ;;		None
 14132 ;; Tracked objects:
 14133 ;;		On entry : 0/0
 14134 ;;		On exit  : 0/0
 14135 ;;		Unchanged: 0/0
 14136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14141 ;;Total ram usage:        0 bytes
 14142 ;; Hardware stack levels used: 1
 14143 ;; This function calls:
 14144 ;;		Nothing
 14145 ;; This function is called by:
 14146 ;;		_I2C1_DO_TX_EMPTY
 14147 ;; This function uses a non-reentrant model
 14148 ;;
 14149                           
 14150  0A00                     _I2C1_MasterSetIrq:	
 14151                           ;psect for function _I2C1_MasterSetIrq
 14152                           
 14153  0A00                     l3422:	
 14154                           ;incstack = 0
 14155                           ; Regs used in _I2C1_MasterSetIrq: []
 14156                           
 14157                           
 14158                           ;mcc_generated_files/i2c1_master.c: 647:     PIR3bits.SSP1IF = 1;
 14159  0A00  002E               	movlb	14	; select bank14
 14160  0A01  140F               	bsf	15,0	;volatile
 14161  0A02                     l629:
 14162  0A02  0008               	return
 14163  0A03                     __end_of_I2C1_MasterSetIrq:
 14164                           
 14165                           	psect	text55
 14166  1793                     __ptext55:	
 14167 ;; *************** function _I2C1_MasterIsNack *****************
 14168 ;; Defined at:
 14169 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 14170 ;; Parameters:    Size  Location     Type
 14171 ;;		None
 14172 ;; Auto vars:     Size  Location     Type
 14173 ;;		None
 14174 ;; Return value:  Size  Location     Type
 14175 ;;                  1    wreg      _Bool 
 14176 ;; Registers used:
 14177 ;;		wreg, status,2, status,0
 14178 ;; Tracked objects:
 14179 ;;		On entry : 0/0
 14180 ;;		On exit  : 0/0
 14181 ;;		Unchanged: 0/0
 14182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14187 ;;Total ram usage:        0 bytes
 14188 ;; Hardware stack levels used: 1
 14189 ;; This function calls:
 14190 ;;		Nothing
 14191 ;; This function is called by:
 14192 ;;		_I2C1_MasterFsm
 14193 ;;		_I2C1_DO_TX
 14194 ;; This function uses a non-reentrant model
 14195 ;;
 14196                           
 14197  1793                     _I2C1_MasterIsNack:	
 14198                           ;psect for function _I2C1_MasterIsNack
 14199                           
 14200  1793                     l3372:	
 14201                           ;incstack = 0
 14202                           ; Regs used in _I2C1_MasterIsNack: [wreg+status,2+status,0]
 14203                           
 14204                           
 14205                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 14206  1793  0023               	movlb	3	; select bank3
 14207  1794  0E11               	swapf	17,w	;volatile
 14208  1795  0C89               	rrf	9,f
 14209  1796  0C89               	rrf	9,f
 14210  1797  3901               	andlw	1
 14211  1798                     l602:
 14212  1798  0008               	return
 14213  1799                     __end_of_I2C1_MasterIsNack:
 14214                           
 14215                           	psect	text56
 14216  174A                     __ptext56:	
 14217 ;; *************** function _I2C1_MasterSendTxData *****************
 14218 ;; Defined at:
 14219 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 14220 ;; Parameters:    Size  Location     Type
 14221 ;;  data            1    wreg     unsigned char 
 14222 ;; Auto vars:     Size  Location     Type
 14223 ;;  data            1    0[COMMON] unsigned char 
 14224 ;; Return value:  Size  Location     Type
 14225 ;;                  1    wreg      void 
 14226 ;; Registers used:
 14227 ;;		wreg
 14228 ;; Tracked objects:
 14229 ;;		On entry : 0/0
 14230 ;;		On exit  : 0/0
 14231 ;;		Unchanged: 0/0
 14232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14234 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14236 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14237 ;;Total ram usage:        1 bytes
 14238 ;; Hardware stack levels used: 1
 14239 ;; This function calls:
 14240 ;;		Nothing
 14241 ;; This function is called by:
 14242 ;;		_I2C1_DO_SEND_ADR_READ
 14243 ;;		_I2C1_DO_SEND_ADR_WRITE
 14244 ;;		_I2C1_DO_TX
 14245 ;; This function uses a non-reentrant model
 14246 ;;
 14247                           
 14248  174A                     _I2C1_MasterSendTxData:	
 14249                           ;psect for function _I2C1_MasterSendTxData
 14250                           
 14251                           
 14252                           ;incstack = 0
 14253                           ; Regs used in _I2C1_MasterSendTxData: [wreg]
 14254                           ;I2C1_MasterSendTxData@data stored from wreg
 14255  174A  00F0               	movwf	I2C1_MasterSendTxData@data
 14256  174B                     l3376:
 14257                           
 14258                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 14259  174B  0870               	movf	I2C1_MasterSendTxData@data,w
 14260  174C  0023               	movlb	3	; select bank3
 14261  174D  008C               	movwf	12	;volatile
 14262  174E                     l584:
 14263  174E  0008               	return
 14264  174F                     __end_of_I2C1_MasterSendTxData:
 14265                           
 14266                           	psect	text57
 14267  1746                     __ptext57:	
 14268 ;; *************** function _I2C1_MasterSendAck *****************
 14269 ;; Defined at:
 14270 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 14271 ;; Parameters:    Size  Location     Type
 14272 ;;		None
 14273 ;; Auto vars:     Size  Location     Type
 14274 ;;		None
 14275 ;; Return value:  Size  Location     Type
 14276 ;;                  1    wreg      void 
 14277 ;; Registers used:
 14278 ;;		None
 14279 ;; Tracked objects:
 14280 ;;		On entry : 0/0
 14281 ;;		On exit  : 0/0
 14282 ;;		Unchanged: 0/0
 14283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14288 ;;Total ram usage:        0 bytes
 14289 ;; Hardware stack levels used: 1
 14290 ;; This function calls:
 14291 ;;		Nothing
 14292 ;; This function is called by:
 14293 ;;		_I2C1_DO_RX
 14294 ;;		_I2C1_DO_RX_ACK
 14295 ;; This function uses a non-reentrant model
 14296 ;;
 14297                           
 14298  1746                     _I2C1_MasterSendAck:	
 14299                           ;psect for function _I2C1_MasterSendAck
 14300                           
 14301  1746                     l3400:	
 14302                           ;incstack = 0
 14303                           ; Regs used in _I2C1_MasterSendAck: []
 14304                           
 14305                           
 14306                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 14307  1746  0023               	movlb	3	; select bank3
 14308  1747  1291               	bcf	17,5	;volatile
 14309                           
 14310                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 14311  1748  1611               	bsf	17,4	;volatile
 14312  1749                     l605:
 14313  1749  0008               	return
 14314  174A                     __end_of_I2C1_MasterSendAck:
 14315                           
 14316                           	psect	text58
 14317  173F                     __ptext58:	
 14318 ;; *************** function _I2C1_MasterGetRxData *****************
 14319 ;; Defined at:
 14320 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 14321 ;; Parameters:    Size  Location     Type
 14322 ;;		None
 14323 ;; Auto vars:     Size  Location     Type
 14324 ;;		None
 14325 ;; Return value:  Size  Location     Type
 14326 ;;                  1    wreg      unsigned char 
 14327 ;; Registers used:
 14328 ;;		wreg
 14329 ;; Tracked objects:
 14330 ;;		On entry : 0/0
 14331 ;;		On exit  : 0/0
 14332 ;;		Unchanged: 0/0
 14333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14338 ;;Total ram usage:        0 bytes
 14339 ;; Hardware stack levels used: 1
 14340 ;; This function calls:
 14341 ;;		Nothing
 14342 ;; This function is called by:
 14343 ;;		_I2C1_DO_RX
 14344 ;; This function uses a non-reentrant model
 14345 ;;
 14346                           
 14347  173F                     _I2C1_MasterGetRxData:	
 14348                           ;psect for function _I2C1_MasterGetRxData
 14349                           
 14350  173F                     l3396:	
 14351                           ;incstack = 0
 14352                           ; Regs used in _I2C1_MasterGetRxData: [wreg]
 14353                           
 14354                           
 14355                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 14356  173F  0023               	movlb	3	; select bank3
 14357  1740  080C               	movf	12,w	;volatile
 14358  1741                     l581:
 14359  1741  0008               	return
 14360  1742                     __end_of_I2C1_MasterGetRxData:
 14361                           
 14362                           	psect	text59
 14363  1742                     __ptext59:	
 14364 ;; *************** function _I2C1_MasterSendNack *****************
 14365 ;; Defined at:
 14366 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 14367 ;; Parameters:    Size  Location     Type
 14368 ;;		None
 14369 ;; Auto vars:     Size  Location     Type
 14370 ;;		None
 14371 ;; Return value:  Size  Location     Type
 14372 ;;                  1    wreg      void 
 14373 ;; Registers used:
 14374 ;;		None
 14375 ;; Tracked objects:
 14376 ;;		On entry : 0/0
 14377 ;;		On exit  : 0/0
 14378 ;;		Unchanged: 0/0
 14379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14384 ;;Total ram usage:        0 bytes
 14385 ;; Hardware stack levels used: 1
 14386 ;; This function calls:
 14387 ;;		Nothing
 14388 ;; This function is called by:
 14389 ;;		_I2C1_DO_RX_NACK_STOP
 14390 ;;		_I2C1_DO_RX_NACK_RESTART
 14391 ;; This function uses a non-reentrant model
 14392 ;;
 14393                           
 14394  1742                     _I2C1_MasterSendNack:	
 14395                           ;psect for function _I2C1_MasterSendNack
 14396                           
 14397  1742                     l3332:	
 14398                           ;incstack = 0
 14399                           ; Regs used in _I2C1_MasterSendNack: []
 14400                           
 14401                           
 14402                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 14403  1742  0023               	movlb	3	; select bank3
 14404  1743  1691               	bsf	17,5	;volatile
 14405                           
 14406                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 14407  1744  1611               	bsf	17,4	;volatile
 14408  1745                     l608:
 14409  1745  0008               	return
 14410  1746                     __end_of_I2C1_MasterSendNack:
 14411                           
 14412                           	psect	text60
 14413  173C                     __ptext60:	
 14414 ;; *************** function _I2C1_MasterStartRx *****************
 14415 ;; Defined at:
 14416 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 14417 ;; Parameters:    Size  Location     Type
 14418 ;;		None
 14419 ;; Auto vars:     Size  Location     Type
 14420 ;;		None
 14421 ;; Return value:  Size  Location     Type
 14422 ;;                  1    wreg      void 
 14423 ;; Registers used:
 14424 ;;		None
 14425 ;; Tracked objects:
 14426 ;;		On entry : 0/0
 14427 ;;		On exit  : 0/0
 14428 ;;		Unchanged: 0/0
 14429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14434 ;;Total ram usage:        0 bytes
 14435 ;; Hardware stack levels used: 1
 14436 ;; This function calls:
 14437 ;;		Nothing
 14438 ;; This function is called by:
 14439 ;;		_I2C1_DO_RCEN
 14440 ;; This function uses a non-reentrant model
 14441 ;;
 14442                           
 14443  173C                     _I2C1_MasterStartRx:	
 14444                           ;psect for function _I2C1_MasterStartRx
 14445                           
 14446  173C                     l3414:	
 14447                           ;incstack = 0
 14448                           ; Regs used in _I2C1_MasterStartRx: []
 14449                           
 14450                           
 14451                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 14452  173C  0023               	movlb	3	; select bank3
 14453  173D  1591               	bsf	17,3	;volatile
 14454  173E                     l593:
 14455  173E  0008               	return
 14456  173F                     __end_of_I2C1_MasterStartRx:
 14457                           
 14458                           	psect	text61
 14459  1726                     __ptext61:	
 14460 ;; *************** function _I2C1_CallbackReturnReset *****************
 14461 ;; Defined at:
 14462 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 14463 ;; Parameters:    Size  Location     Type
 14464 ;;  funPtr          1    9[COMMON] PTR void 
 14465 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 14466 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 14467 ;; Auto vars:     Size  Location     Type
 14468 ;;		None
 14469 ;; Return value:  Size  Location     Type
 14470 ;;                  1    wreg      enum E360
 14471 ;; Registers used:
 14472 ;;		wreg
 14473 ;; Tracked objects:
 14474 ;;		On entry : 0/0
 14475 ;;		On exit  : 0/0
 14476 ;;		Unchanged: 0/0
 14477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14478 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14481 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14482 ;;Total ram usage:        1 bytes
 14483 ;; Hardware stack levels used: 1
 14484 ;; This function calls:
 14485 ;;		Nothing
 14486 ;; This function is called by:
 14487 ;;		_I2C1_Open
 14488 ;;		_I2C1_DO_TX
 14489 ;;		_I2C1_DO_RX
 14490 ;;		_I2C1_DO_TX_EMPTY
 14491 ;;		_I2C1_DO_ADDRESS_NACK
 14492 ;;		_I2C1_DO_RX_EMPTY
 14493 ;; This function uses a non-reentrant model
 14494 ;;
 14495                           
 14496  1726                     _I2C1_CallbackReturnReset:	
 14497                           ;psect for function _I2C1_CallbackReturnReset
 14498                           
 14499  1726                     l3428:	
 14500                           ;incstack = 0
 14501                           ; Regs used in _I2C1_CallbackReturnReset: [wreg]
 14502                           
 14503                           
 14504                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 14505  1726  3005               	movlw	5
 14506  1727                     l565:
 14507  1727  0008               	return
 14508  1728                     __end_of_I2C1_CallbackReturnReset:
 14509                           
 14510                           	psect	text62
 14511  1724                     __ptext62:	
 14512 ;; *************** function _I2C1_CallbackReturnStop *****************
 14513 ;; Defined at:
 14514 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 14515 ;; Parameters:    Size  Location     Type
 14516 ;;  funPtr          1    9[COMMON] PTR void 
 14517 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 14518 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 14519 ;; Auto vars:     Size  Location     Type
 14520 ;;		None
 14521 ;; Return value:  Size  Location     Type
 14522 ;;                  1    wreg      enum E360
 14523 ;; Registers used:
 14524 ;;		wreg
 14525 ;; Tracked objects:
 14526 ;;		On entry : 0/0
 14527 ;;		On exit  : 0/0
 14528 ;;		Unchanged: 0/0
 14529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14530 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14533 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14534 ;;Total ram usage:        1 bytes
 14535 ;; Hardware stack levels used: 1
 14536 ;; This function calls:
 14537 ;;		Nothing
 14538 ;; This function is called by:
 14539 ;;		_I2C1_Open
 14540 ;;		_I2C1_SetCallback
 14541 ;;		_I2C1_DO_TX
 14542 ;;		_I2C1_DO_RX
 14543 ;;		_I2C1_DO_TX_EMPTY
 14544 ;;		_I2C1_DO_ADDRESS_NACK
 14545 ;;		_I2C1_DO_RX_EMPTY
 14546 ;; This function uses a non-reentrant model
 14547 ;;
 14548                           
 14549  1724                     _I2C1_CallbackReturnStop:	
 14550                           ;psect for function _I2C1_CallbackReturnStop
 14551                           
 14552  1724                     l3424:	
 14553                           ;incstack = 0
 14554                           ; Regs used in _I2C1_CallbackReturnStop: [wreg]
 14555                           
 14556                           
 14557                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 14558  1724  3001               	movlw	1
 14559  1725                     l562:
 14560  1725  0008               	return
 14561  1726                     __end_of_I2C1_CallbackReturnStop:
 14562                           
 14563                           	psect	text63
 14564  0ABA                     __ptext63:	
 14565 ;; *************** function _rdBlkRegCompleteHandler *****************
 14566 ;; Defined at:
 14567 ;;		line 170 in file "mcc_generated_files/examples/i2c1_master_example.c"
 14568 ;; Parameters:    Size  Location     Type
 14569 ;;  ptr             1    9[COMMON] PTR void 
 14570 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 14571 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 14572 ;; Auto vars:     Size  Location     Type
 14573 ;;		None
 14574 ;; Return value:  Size  Location     Type
 14575 ;;                  1    wreg      enum E360
 14576 ;; Registers used:
 14577 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14578 ;; Tracked objects:
 14579 ;;		On entry : 0/0
 14580 ;;		On exit  : 0/0
 14581 ;;		Unchanged: 0/0
 14582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14583 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14586 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14587 ;;Total ram usage:        1 bytes
 14588 ;; Hardware stack levels used: 1
 14589 ;; Hardware stack levels required when called: 2
 14590 ;; This function calls:
 14591 ;;		_I2C1_SetBuffer
 14592 ;;		_I2C1_SetDataCompleteCallback
 14593 ;; This function is called by:
 14594 ;;		_I2C1_ReadDataBlock
 14595 ;;		_I2C1_DO_TX
 14596 ;;		_I2C1_DO_RX
 14597 ;;		_I2C1_DO_TX_EMPTY
 14598 ;;		_I2C1_DO_ADDRESS_NACK
 14599 ;;		_I2C1_DO_RX_EMPTY
 14600 ;; This function uses a non-reentrant model
 14601 ;;
 14602                           
 14603  0ABA                     _rdBlkRegCompleteHandler:	
 14604                           ;psect for function _rdBlkRegCompleteHandler
 14605                           
 14606  0ABA                     l3366:	
 14607                           ;incstack = 0
 14608                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 14609                           
 14610                           
 14611                           ;mcc_generated_files/examples/i2c1_master_example.c: 170: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 171: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 14612  0ABA  0879               	movf	rdBlkRegCompleteHandler@ptr,w
 14613  0ABB  0086               	movwf	6
 14614  0ABC  0187               	clrf	7
 14615  0ABD  3F40               	moviw [0]fsr1
 14616  0ABE  00F0               	movwf	I2C1_SetBuffer@bufferSize
 14617  0ABF  3F41               	moviw [1]fsr1
 14618  0AC0  00F1               	movwf	I2C1_SetBuffer@bufferSize+1
 14619  0AC1  0879               	movf	rdBlkRegCompleteHandler@ptr,w
 14620  0AC2  3E02               	addlw	2
 14621  0AC3  0086               	movwf	6
 14622  0AC4  0187               	clrf	7
 14623  0AC5  0801               	movf	1,w
 14624  0AC6  318A  222A  318A   	fcall	_I2C1_SetBuffer
 14625                           
 14626                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 14627  0AC9  3000               	movlw	0
 14628  0ACA  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 14629  0ACB  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 14630  0ACC  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 14631  0ACD  3197  27F3  318A   	fcall	_I2C1_SetDataCompleteCallback
 14632  0AD0                     l3368:
 14633                           
 14634                           ;mcc_generated_files/examples/i2c1_master_example.c: 174:     return I2C1_RESTART_READ;
 14635  0AD0  3002               	movlw	2
 14636  0AD1                     l102:
 14637  0AD1  0008               	return
 14638  0AD2                     __end_of_rdBlkRegCompleteHandler:
 14639                           
 14640                           	psect	text64
 14641  0A6D                     __ptext64:	
 14642 ;; *************** function _wr1RegCompleteHandler *****************
 14643 ;; Defined at:
 14644 ;;		line 156 in file "mcc_generated_files/examples/i2c1_master_example.c"
 14645 ;; Parameters:    Size  Location     Type
 14646 ;;  ptr             1    9[COMMON] PTR void 
 14647 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 14648 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 14649 ;; Auto vars:     Size  Location     Type
 14650 ;;		None
 14651 ;; Return value:  Size  Location     Type
 14652 ;;                  1    wreg      enum E360
 14653 ;; Registers used:
 14654 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14655 ;; Tracked objects:
 14656 ;;		On entry : 0/0
 14657 ;;		On exit  : 0/0
 14658 ;;		Unchanged: 0/0
 14659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14660 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14663 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14664 ;;Total ram usage:        1 bytes
 14665 ;; Hardware stack levels used: 1
 14666 ;; Hardware stack levels required when called: 2
 14667 ;; This function calls:
 14668 ;;		_I2C1_SetBuffer
 14669 ;;		_I2C1_SetDataCompleteCallback
 14670 ;; This function is called by:
 14671 ;;		_I2C1_Write1ByteRegister
 14672 ;;		_I2C1_DO_TX
 14673 ;;		_I2C1_DO_RX
 14674 ;;		_I2C1_DO_TX_EMPTY
 14675 ;;		_I2C1_DO_ADDRESS_NACK
 14676 ;;		_I2C1_DO_RX_EMPTY
 14677 ;; This function uses a non-reentrant model
 14678 ;;
 14679                           
 14680  0A6D                     _wr1RegCompleteHandler:	
 14681                           ;psect for function _wr1RegCompleteHandler
 14682                           
 14683  0A6D                     l3350:	
 14684                           ;incstack = 0
 14685                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 14686                           
 14687                           
 14688                           ;mcc_generated_files/examples/i2c1_master_example.c: 156: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 157: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetBuffer(ptr,1);
 14689  0A6D  3001               	movlw	1
 14690  0A6E  00F0               	movwf	I2C1_SetBuffer@bufferSize
 14691  0A6F  3000               	movlw	0
 14692  0A70  00F1               	movwf	I2C1_SetBuffer@bufferSize+1
 14693  0A71  0879               	movf	wr1RegCompleteHandler@ptr,w
 14694  0A72  318A  222A  318A   	fcall	_I2C1_SetBuffer
 14695  0A75                     l3352:
 14696                           
 14697                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 14698  0A75  3000               	movlw	0
 14699  0A76  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 14700  0A77  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 14701  0A78  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 14702  0A79  3197  27F3  318A   	fcall	_I2C1_SetDataCompleteCallback
 14703  0A7C                     l3354:
 14704                           
 14705                           ;mcc_generated_files/examples/i2c1_master_example.c: 160:     return I2C1_CONTINUE;
 14706  0A7C  3004               	movlw	4
 14707  0A7D                     l96:
 14708  0A7D  0008               	return
 14709  0A7E                     __end_of_wr1RegCompleteHandler:
 14710                           
 14711                           	psect	text65
 14712  0A5C                     __ptext65:	
 14713 ;; *************** function _rd2RegCompleteHandler *****************
 14714 ;; Defined at:
 14715 ;;		line 149 in file "mcc_generated_files/examples/i2c1_master_example.c"
 14716 ;; Parameters:    Size  Location     Type
 14717 ;;  ptr             1    9[COMMON] PTR void 
 14718 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 14719 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 14720 ;; Auto vars:     Size  Location     Type
 14721 ;;		None
 14722 ;; Return value:  Size  Location     Type
 14723 ;;                  1    wreg      enum E360
 14724 ;; Registers used:
 14725 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14726 ;; Tracked objects:
 14727 ;;		On entry : 0/0
 14728 ;;		On exit  : 0/0
 14729 ;;		Unchanged: 0/0
 14730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14731 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14734 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14735 ;;Total ram usage:        1 bytes
 14736 ;; Hardware stack levels used: 1
 14737 ;; Hardware stack levels required when called: 2
 14738 ;; This function calls:
 14739 ;;		_I2C1_SetBuffer
 14740 ;;		_I2C1_SetDataCompleteCallback
 14741 ;; This function is called by:
 14742 ;;		_I2C1_Read2ByteRegister
 14743 ;;		_I2C1_DO_TX
 14744 ;;		_I2C1_DO_RX
 14745 ;;		_I2C1_DO_TX_EMPTY
 14746 ;;		_I2C1_DO_ADDRESS_NACK
 14747 ;;		_I2C1_DO_RX_EMPTY
 14748 ;; This function uses a non-reentrant model
 14749 ;;
 14750                           
 14751  0A5C                     _rd2RegCompleteHandler:	
 14752                           ;psect for function _rd2RegCompleteHandler
 14753                           
 14754  0A5C                     l3342:	
 14755                           ;incstack = 0
 14756                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 14757                           
 14758                           
 14759                           ;mcc_generated_files/examples/i2c1_master_example.c: 149: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 150: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetBuffer(ptr,2);
 14760  0A5C  3002               	movlw	2
 14761  0A5D  00F0               	movwf	I2C1_SetBuffer@bufferSize
 14762  0A5E  3000               	movlw	0
 14763  0A5F  00F1               	movwf	I2C1_SetBuffer@bufferSize+1
 14764  0A60  0879               	movf	rd2RegCompleteHandler@ptr,w
 14765  0A61  318A  222A  318A   	fcall	_I2C1_SetBuffer
 14766  0A64                     l3344:
 14767                           
 14768                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 14769  0A64  3000               	movlw	0
 14770  0A65  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 14771  0A66  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 14772  0A67  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 14773  0A68  3197  27F3  318A   	fcall	_I2C1_SetDataCompleteCallback
 14774  0A6B                     l3346:
 14775                           
 14776                           ;mcc_generated_files/examples/i2c1_master_example.c: 153:     return I2C1_RESTART_READ;
 14777  0A6B  3002               	movlw	2
 14778  0A6C                     l93:
 14779  0A6C  0008               	return
 14780  0A6D                     __end_of_rd2RegCompleteHandler:
 14781                           
 14782                           	psect	text66
 14783  0A4B                     __ptext66:	
 14784 ;; *************** function _rd1RegCompleteHandler *****************
 14785 ;; Defined at:
 14786 ;;		line 142 in file "mcc_generated_files/examples/i2c1_master_example.c"
 14787 ;; Parameters:    Size  Location     Type
 14788 ;;  ptr             1    9[COMMON] PTR void 
 14789 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 14790 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 14791 ;; Auto vars:     Size  Location     Type
 14792 ;;		None
 14793 ;; Return value:  Size  Location     Type
 14794 ;;                  1    wreg      enum E360
 14795 ;; Registers used:
 14796 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14797 ;; Tracked objects:
 14798 ;;		On entry : 0/0
 14799 ;;		On exit  : 0/0
 14800 ;;		Unchanged: 0/0
 14801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14802 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14805 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14806 ;;Total ram usage:        1 bytes
 14807 ;; Hardware stack levels used: 1
 14808 ;; Hardware stack levels required when called: 2
 14809 ;; This function calls:
 14810 ;;		_I2C1_SetBuffer
 14811 ;;		_I2C1_SetDataCompleteCallback
 14812 ;; This function is called by:
 14813 ;;		_I2C1_Read1ByteRegister
 14814 ;;		_I2C1_DO_TX
 14815 ;;		_I2C1_DO_RX
 14816 ;;		_I2C1_DO_TX_EMPTY
 14817 ;;		_I2C1_DO_ADDRESS_NACK
 14818 ;;		_I2C1_DO_RX_EMPTY
 14819 ;; This function uses a non-reentrant model
 14820 ;;
 14821                           
 14822  0A4B                     _rd1RegCompleteHandler:	
 14823                           ;psect for function _rd1RegCompleteHandler
 14824                           
 14825  0A4B                     l3334:	
 14826                           ;incstack = 0
 14827                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 14828                           
 14829                           
 14830                           ;mcc_generated_files/examples/i2c1_master_example.c: 142: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 143: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 144:     I2C1_SetBuffer(ptr,1);
 14831  0A4B  3001               	movlw	1
 14832  0A4C  00F0               	movwf	I2C1_SetBuffer@bufferSize
 14833  0A4D  3000               	movlw	0
 14834  0A4E  00F1               	movwf	I2C1_SetBuffer@bufferSize+1
 14835  0A4F  0879               	movf	rd1RegCompleteHandler@ptr,w
 14836  0A50  318A  222A  318A   	fcall	_I2C1_SetBuffer
 14837  0A53                     l3336:
 14838                           
 14839                           ;mcc_generated_files/examples/i2c1_master_example.c: 145:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 14840  0A53  3000               	movlw	0
 14841  0A54  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 14842  0A55  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 14843  0A56  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 14844  0A57  3197  27F3  318A   	fcall	_I2C1_SetDataCompleteCallback
 14845  0A5A                     l3338:
 14846                           
 14847                           ;mcc_generated_files/examples/i2c1_master_example.c: 146:     return I2C1_RESTART_READ;
 14848  0A5A  3002               	movlw	2
 14849  0A5B                     l90:
 14850  0A5B  0008               	return
 14851  0A5C                     __end_of_rd1RegCompleteHandler:
 14852                           
 14853                           	psect	text67
 14854  0A3A                     __ptext67:	
 14855 ;; *************** function _wr2RegCompleteHandler *****************
 14856 ;; Defined at:
 14857 ;;		line 163 in file "mcc_generated_files/examples/i2c1_master_example.c"
 14858 ;; Parameters:    Size  Location     Type
 14859 ;;  ptr             1    9[COMMON] PTR void 
 14860 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 14861 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 14862 ;; Auto vars:     Size  Location     Type
 14863 ;;		None
 14864 ;; Return value:  Size  Location     Type
 14865 ;;                  1    wreg      enum E360
 14866 ;; Registers used:
 14867 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14868 ;; Tracked objects:
 14869 ;;		On entry : 0/0
 14870 ;;		On exit  : 0/0
 14871 ;;		Unchanged: 0/0
 14872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14873 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14876 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14877 ;;Total ram usage:        1 bytes
 14878 ;; Hardware stack levels used: 1
 14879 ;; Hardware stack levels required when called: 2
 14880 ;; This function calls:
 14881 ;;		_I2C1_SetBuffer
 14882 ;;		_I2C1_SetDataCompleteCallback
 14883 ;; This function is called by:
 14884 ;;		_I2C1_Write2ByteRegister
 14885 ;;		_I2C1_DO_TX
 14886 ;;		_I2C1_DO_RX
 14887 ;;		_I2C1_DO_TX_EMPTY
 14888 ;;		_I2C1_DO_ADDRESS_NACK
 14889 ;;		_I2C1_DO_RX_EMPTY
 14890 ;; This function uses a non-reentrant model
 14891 ;;
 14892                           
 14893  0A3A                     _wr2RegCompleteHandler:	
 14894                           ;psect for function _wr2RegCompleteHandler
 14895                           
 14896  0A3A                     l3358:	
 14897                           ;incstack = 0
 14898                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 14899                           
 14900                           
 14901                           ;mcc_generated_files/examples/i2c1_master_example.c: 163: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 164: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetBuffer(ptr,2);
 14902  0A3A  3002               	movlw	2
 14903  0A3B  00F0               	movwf	I2C1_SetBuffer@bufferSize
 14904  0A3C  3000               	movlw	0
 14905  0A3D  00F1               	movwf	I2C1_SetBuffer@bufferSize+1
 14906  0A3E  0879               	movf	wr2RegCompleteHandler@ptr,w
 14907  0A3F  318A  222A  318A   	fcall	_I2C1_SetBuffer
 14908  0A42                     l3360:
 14909                           
 14910                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 14911  0A42  3000               	movlw	0
 14912  0A43  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 14913  0A44  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 14914  0A45  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 14915  0A46  3197  27F3  318A   	fcall	_I2C1_SetDataCompleteCallback
 14916  0A49                     l3362:
 14917                           
 14918                           ;mcc_generated_files/examples/i2c1_master_example.c: 167:     return I2C1_CONTINUE;
 14919  0A49  3004               	movlw	4
 14920  0A4A                     l99:
 14921  0A4A  0008               	return
 14922  0A4B                     __end_of_wr2RegCompleteHandler:
 14923                           
 14924                           	psect	text68
 14925  17F3                     __ptext68:	
 14926 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 14927 ;; Defined at:
 14928 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 14929 ;; Parameters:    Size  Location     Type
 14930 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 14931 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 14932 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 14933 ;;  ptr             1    7[COMMON] PTR void 
 14934 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 14935 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 14936 ;; Auto vars:     Size  Location     Type
 14937 ;;		None
 14938 ;; Return value:  Size  Location     Type
 14939 ;;                  1    wreg      void 
 14940 ;; Registers used:
 14941 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14942 ;; Tracked objects:
 14943 ;;		On entry : 0/0
 14944 ;;		On exit  : 0/0
 14945 ;;		Unchanged: 0/0
 14946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14947 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14949 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14950 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14951 ;;Total ram usage:        4 bytes
 14952 ;; Hardware stack levels used: 1
 14953 ;; Hardware stack levels required when called: 1
 14954 ;; This function calls:
 14955 ;;		_I2C1_SetCallback
 14956 ;; This function is called by:
 14957 ;;		_I2C1_Write1ByteRegister
 14958 ;;		_rd1RegCompleteHandler
 14959 ;;		_rd2RegCompleteHandler
 14960 ;;		_wr1RegCompleteHandler
 14961 ;;		_wr2RegCompleteHandler
 14962 ;;		_rdBlkRegCompleteHandler
 14963 ;;		_I2C1_Read1ByteRegister
 14964 ;;		_I2C1_Read2ByteRegister
 14965 ;;		_I2C1_Write2ByteRegister
 14966 ;;		_I2C1_ReadDataBlock
 14967 ;; This function uses a non-reentrant model
 14968 ;;
 14969                           
 14970  17F3                     _I2C1_SetDataCompleteCallback:	
 14971                           ;psect for function _I2C1_SetDataCompleteCallback
 14972                           
 14973  17F3                     l3320:	
 14974                           ;incstack = 0
 14975                           ; Regs used in _I2C1_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 14976                           
 14977                           
 14978                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 14979  17F3  0876               	movf	I2C1_SetDataCompleteCallback@cb+1,w
 14980  17F4  00F1               	movwf	I2C1_SetCallback@cb+1
 14981  17F5  0875               	movf	I2C1_SetDataCompleteCallback@cb,w
 14982  17F6  00F0               	movwf	I2C1_SetCallback@cb
 14983  17F7  0877               	movf	I2C1_SetDataCompleteCallback@ptr,w
 14984  17F8  00F8               	movwf	??_I2C1_SetDataCompleteCallback
 14985  17F9  0878               	movf	??_I2C1_SetDataCompleteCallback,w
 14986  17FA  00F2               	movwf	I2C1_SetCallback@ptr
 14987  17FB  3000               	movlw	0
 14988  17FC  318B  2382  3197   	fcall	_I2C1_SetCallback
 14989  17FF                     l436:
 14990  17FF  0008               	return
 14991  1800                     __end_of_I2C1_SetDataCompleteCallback:
 14992                           
 14993                           	psect	text69
 14994  0B82                     __ptext69:	
 14995 ;; *************** function _I2C1_SetCallback *****************
 14996 ;; Defined at:
 14997 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 14998 ;; Parameters:    Size  Location     Type
 14999 ;;  idx             1    wreg     enum E12103
 15000 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 15001 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 15002 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 15003 ;;  ptr             1    2[COMMON] PTR void 
 15004 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 15005 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 15006 ;; Auto vars:     Size  Location     Type
 15007 ;;  idx             1    4[COMMON] enum E12103
 15008 ;; Return value:  Size  Location     Type
 15009 ;;                  1    wreg      void 
 15010 ;; Registers used:
 15011 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15012 ;; Tracked objects:
 15013 ;;		On entry : 0/0
 15014 ;;		On exit  : 0/0
 15015 ;;		Unchanged: 0/0
 15016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15017 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15018 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15019 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15020 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15021 ;;Total ram usage:        5 bytes
 15022 ;; Hardware stack levels used: 1
 15023 ;; This function calls:
 15024 ;;		Nothing
 15025 ;; This function is called by:
 15026 ;;		_I2C1_SetDataCompleteCallback
 15027 ;;		_I2C1_SetAddressNackCallback
 15028 ;;		_I2C1_SetWriteCollisionCallback
 15029 ;;		_I2C1_SetDataNackCallback
 15030 ;;		_I2C1_SetTimeoutCallback
 15031 ;; This function uses a non-reentrant model
 15032 ;;
 15033                           
 15034  0B82                     _I2C1_SetCallback:	
 15035                           ;psect for function _I2C1_SetCallback
 15036                           
 15037                           
 15038                           ;incstack = 0
 15039                           ; Regs used in _I2C1_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
 15040                           ;I2C1_SetCallback@idx stored from wreg
 15041  0B82  00F4               	movwf	I2C1_SetCallback@idx
 15042  0B83                     l3314:
 15043                           
 15044                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 15045  0B83  0870               	movf	I2C1_SetCallback@cb,w
 15046  0B84  0471               	iorwf	I2C1_SetCallback@cb+1,w
 15047  0B85  1903               	btfsc	3,2
 15048  0B86  2B88               	goto	u1291
 15049  0B87  2B89               	goto	u1290
 15050  0B88                     u1291:
 15051  0B88  2B9A               	goto	l3318
 15052  0B89                     u1290:
 15053  0B89                     l3316:
 15054                           
 15055                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 15056  0B89  3574               	lslf	I2C1_SetCallback@idx,w
 15057  0B8A  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 15058  0B8B  0086               	movwf	6
 15059  0B8C  0187               	clrf	7
 15060  0B8D  0870               	movf	I2C1_SetCallback@cb,w
 15061  0B8E  3FC0               	movwi [0]fsr1
 15062  0B8F  0871               	movf	I2C1_SetCallback@cb+1,w
 15063  0B90  3FC1               	movwi [1]fsr1
 15064                           
 15065                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 15066  0B91  0872               	movf	I2C1_SetCallback@ptr,w
 15067  0B92  00F3               	movwf	??_I2C1_SetCallback
 15068  0B93  0874               	movf	I2C1_SetCallback@idx,w
 15069  0B94  3EAC               	addlw	(low ((_I2C1_Status| 0+12)))& (0+255)
 15070  0B95  0086               	movwf	6
 15071  0B96  0187               	clrf	7
 15072  0B97  0873               	movf	??_I2C1_SetCallback,w
 15073  0B98  0081               	movwf	1
 15074                           
 15075                           ;mcc_generated_files/i2c1_master.c: 304:     }
 15076  0B99  2BA7               	goto	l453
 15077  0B9A                     l3318:
 15078                           
 15079                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 15080  0B9A  3574               	lslf	I2C1_SetCallback@idx,w
 15081  0B9B  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 15082  0B9C  0086               	movwf	6
 15083  0B9D  0187               	clrf	7
 15084  0B9E  3024               	movlw	low _I2C1_CallbackReturnStop
 15085  0B9F  3FC0               	movwi [0]fsr1
 15086  0BA0  3017               	movlw	high _I2C1_CallbackReturnStop
 15087  0BA1  3FC1               	movwi [1]fsr1
 15088                           
 15089                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 15090  0BA2  0874               	movf	I2C1_SetCallback@idx,w
 15091  0BA3  3EAC               	addlw	(low ((_I2C1_Status| 0+12)))& (0+255)
 15092  0BA4  0086               	movwf	6
 15093  0BA5  0187               	clrf	7
 15094  0BA6  0181               	clrf	1
 15095  0BA7                     l453:
 15096  0BA7  0008               	return
 15097  0BA8                     __end_of_I2C1_SetCallback:
 15098                           
 15099                           	psect	text70
 15100  0A2A                     __ptext70:	
 15101 ;; *************** function _I2C1_SetBuffer *****************
 15102 ;; Defined at:
 15103 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 15104 ;; Parameters:    Size  Location     Type
 15105 ;;  buffer          1    wreg     PTR void 
 15106 ;;		 -> I2C1_Read1ByteRegister@returnValue.data(2), I2C1_Read2ByteRegister@returnValue.data(2), I2C1_Write1ByteRegister@
      +data.data(2), I2C1_Write2ByteRegister@data.data(2), 
 15107 ;;		 -> I2C1_RD@returnValue(1), I2C1_WR@data(1), I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(3), 
 15108 ;;		 -> bufferBlock.data(2), I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@re
      +g(1), 
 15109 ;;		 -> I2C1_Write1ByteRegister@data(1), I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRegister@returnValue(2), NULL(0), 
 15110 ;;		 -> I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), 
 15111 ;;  bufferSize      2    0[COMMON] unsigned int 
 15112 ;; Auto vars:     Size  Location     Type
 15113 ;;  buffer          1    3[COMMON] PTR void 
 15114 ;;		 -> I2C1_Read1ByteRegister@returnValue.data(2), I2C1_Read2ByteRegister@returnValue.data(2), I2C1_Write1ByteRegister@
      +data.data(2), I2C1_Write2ByteRegister@data.data(2), 
 15115 ;;		 -> I2C1_RD@returnValue(1), I2C1_WR@data(1), I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(3), 
 15116 ;;		 -> bufferBlock.data(2), I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@re
      +g(1), 
 15117 ;;		 -> I2C1_Write1ByteRegister@data(1), I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRegister@returnValue(2), NULL(0), 
 15118 ;;		 -> I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), 
 15119 ;; Return value:  Size  Location     Type
 15120 ;;                  1    wreg      void 
 15121 ;; Registers used:
 15122 ;;		wreg
 15123 ;; Tracked objects:
 15124 ;;		On entry : 0/0
 15125 ;;		On exit  : 0/0
 15126 ;;		Unchanged: 0/0
 15127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15128 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15129 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15130 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15131 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15132 ;;Total ram usage:        4 bytes
 15133 ;; Hardware stack levels used: 1
 15134 ;; This function calls:
 15135 ;;		Nothing
 15136 ;; This function is called by:
 15137 ;;		_I2C1_Write1ByteRegister
 15138 ;;		_rd1RegCompleteHandler
 15139 ;;		_rd2RegCompleteHandler
 15140 ;;		_wr1RegCompleteHandler
 15141 ;;		_wr2RegCompleteHandler
 15142 ;;		_rdBlkRegCompleteHandler
 15143 ;;		_I2C1_WR
 15144 ;;		_I2C1_Read1ByteRegister
 15145 ;;		_I2C1_Read2ByteRegister
 15146 ;;		_I2C1_Write2ByteRegister
 15147 ;;		_I2C1_WriteNBytes
 15148 ;;		_I2C1_ReadNBytes
 15149 ;;		_I2C1_ReadDataBlock
 15150 ;;		_I2C1_RD
 15151 ;; This function uses a non-reentrant model
 15152 ;;
 15153                           
 15154  0A2A                     _I2C1_SetBuffer:	
 15155                           ;psect for function _I2C1_SetBuffer
 15156                           
 15157                           
 15158                           ;incstack = 0
 15159                           ; Regs used in _I2C1_SetBuffer: [wreg]
 15160                           ;I2C1_SetBuffer@buffer stored from wreg
 15161  0A2A  00F3               	movwf	I2C1_SetBuffer@buffer
 15162  0A2B                     l3322:
 15163                           
 15164                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 15165  0A2B  0021               	movlb	1	; select bank1
 15166  0A2C  1DBC               	btfss	(_I2C1_Status^(0+128)+28),3
 15167  0A2D  2A2F               	goto	u1301
 15168  0A2E  2A30               	goto	u1300
 15169  0A2F                     u1301:
 15170  0A2F  2A39               	goto	l433
 15171  0A30                     u1300:
 15172  0A30                     l3324:
 15173                           
 15174                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 15175  0A30  0873               	movf	I2C1_SetBuffer@buffer,w
 15176  0A31  00F2               	movwf	??_I2C1_SetBuffer
 15177  0A32  0872               	movf	??_I2C1_SetBuffer,w
 15178  0A33  00B7               	movwf	(low ((_I2C1_Status| 0+23)))^(0+128)
 15179                           
 15180                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 15181  0A34  0871               	movf	I2C1_SetBuffer@bufferSize+1,w
 15182  0A35  00B9               	movwf	((_I2C1_Status+1)^(0+128)+24)
 15183  0A36  0870               	movf	I2C1_SetBuffer@bufferSize,w
 15184  0A37  00B8               	movwf	(_I2C1_Status^(0+128)+24)
 15185  0A38                     l3326:
 15186                           
 15187                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 15188  0A38  11BC               	bcf	(_I2C1_Status^(0+128)+28),3
 15189  0A39                     l433:
 15190  0A39  0008               	return
 15191  0A3A                     __end_of_I2C1_SetBuffer:
 15192                           
 15193                           	psect	text71
 15194  1739                     __ptext71:	
 15195 ;; *************** function _I2C1_MasterStop *****************
 15196 ;; Defined at:
 15197 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 15198 ;; Parameters:    Size  Location     Type
 15199 ;;		None
 15200 ;; Auto vars:     Size  Location     Type
 15201 ;;		None
 15202 ;; Return value:  Size  Location     Type
 15203 ;;                  1    wreg      void 
 15204 ;; Registers used:
 15205 ;;		None
 15206 ;; Tracked objects:
 15207 ;;		On entry : 0/0
 15208 ;;		On exit  : 0/0
 15209 ;;		Unchanged: 0/0
 15210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15215 ;;Total ram usage:        0 bytes
 15216 ;; Hardware stack levels used: 1
 15217 ;; This function calls:
 15218 ;;		Nothing
 15219 ;; This function is called by:
 15220 ;;		_I2C1_DO_SEND_STOP
 15221 ;; This function uses a non-reentrant model
 15222 ;;
 15223                           
 15224  1739                     _I2C1_MasterStop:	
 15225                           ;psect for function _I2C1_MasterStop
 15226                           
 15227  1739                     l3330:	
 15228                           ;incstack = 0
 15229                           ; Regs used in _I2C1_MasterStop: []
 15230                           
 15231                           
 15232                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 15233  1739  0023               	movlb	3	; select bank3
 15234  173A  1511               	bsf	17,2	;volatile
 15235  173B                     l599:
 15236  173B  0008               	return
 15237  173C                     __end_of_I2C1_MasterStop:
 15238                           
 15239                           	psect	text72
 15240  1736                     __ptext72:	
 15241 ;; *************** function _I2C1_MasterEnableRestart *****************
 15242 ;; Defined at:
 15243 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 15244 ;; Parameters:    Size  Location     Type
 15245 ;;		None
 15246 ;; Auto vars:     Size  Location     Type
 15247 ;;		None
 15248 ;; Return value:  Size  Location     Type
 15249 ;;                  1    wreg      void 
 15250 ;; Registers used:
 15251 ;;		None
 15252 ;; Tracked objects:
 15253 ;;		On entry : 0/0
 15254 ;;		On exit  : 0/0
 15255 ;;		Unchanged: 0/0
 15256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15261 ;;Total ram usage:        0 bytes
 15262 ;; Hardware stack levels used: 1
 15263 ;; This function calls:
 15264 ;;		Nothing
 15265 ;; This function is called by:
 15266 ;;		_I2C1_DO_SEND_RESTART_READ
 15267 ;;		_I2C1_DO_SEND_RESTART_WRITE
 15268 ;;		_I2C1_DO_SEND_RESTART
 15269 ;;		_I2C1_DO_RX_EMPTY
 15270 ;; This function uses a non-reentrant model
 15271 ;;
 15272                           
 15273  1736                     _I2C1_MasterEnableRestart:	
 15274                           ;psect for function _I2C1_MasterEnableRestart
 15275                           
 15276  1736                     l3328:	
 15277                           ;incstack = 0
 15278                           ; Regs used in _I2C1_MasterEnableRestart: []
 15279                           
 15280                           
 15281                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 15282  1736  0023               	movlb	3	; select bank3
 15283  1737  1491               	bsf	17,1	;volatile
 15284  1738                     l587:
 15285  1738  0008               	return
 15286  1739                     __end_of_I2C1_MasterEnableRestart:
 15287                           
 15288                           	psect	text73
 15289  1733                     __ptext73:	
 15290 ;; *************** function _I2C1_MasterStart *****************
 15291 ;; Defined at:
 15292 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 15293 ;; Parameters:    Size  Location     Type
 15294 ;;		None
 15295 ;; Auto vars:     Size  Location     Type
 15296 ;;		None
 15297 ;; Return value:  Size  Location     Type
 15298 ;;                  1    wreg      void 
 15299 ;; Registers used:
 15300 ;;		None
 15301 ;; Tracked objects:
 15302 ;;		On entry : 0/0
 15303 ;;		On exit  : 0/0
 15304 ;;		Unchanged: 0/0
 15305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15310 ;;Total ram usage:        0 bytes
 15311 ;; Hardware stack levels used: 1
 15312 ;; This function calls:
 15313 ;;		Nothing
 15314 ;; This function is called by:
 15315 ;;		_I2C1_MasterOperation
 15316 ;; This function uses a non-reentrant model
 15317 ;;
 15318                           
 15319  1733                     _I2C1_MasterStart:	
 15320                           ;psect for function _I2C1_MasterStart
 15321                           
 15322  1733                     l3606:	
 15323                           ;incstack = 0
 15324                           ; Regs used in _I2C1_MasterStart: []
 15325                           
 15326                           
 15327                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 15328  1733  0023               	movlb	3	; select bank3
 15329  1734  1411               	bsf	17,0	;volatile
 15330  1735                     l596:
 15331  1735  0008               	return
 15332  1736                     __end_of_I2C1_MasterStart:
 15333                           
 15334                           	psect	text74
 15335  0B21                     __ptext74:	
 15336 ;; *************** function _I2C1_Close *****************
 15337 ;; Defined at:
 15338 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 15339 ;; Parameters:    Size  Location     Type
 15340 ;;		None
 15341 ;; Auto vars:     Size  Location     Type
 15342 ;;  returnValue     1    1[COMMON] enum E355
 15343 ;; Return value:  Size  Location     Type
 15344 ;;                  1    wreg      enum E355
 15345 ;; Registers used:
 15346 ;;		wreg, status,2, status,0, pclath, cstack
 15347 ;; Tracked objects:
 15348 ;;		On entry : 0/0
 15349 ;;		On exit  : 0/0
 15350 ;;		Unchanged: 0/0
 15351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15353 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15354 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15355 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15356 ;;Total ram usage:        2 bytes
 15357 ;; Hardware stack levels used: 1
 15358 ;; Hardware stack levels required when called: 1
 15359 ;; This function calls:
 15360 ;;		_I2C1_MasterClearIrq
 15361 ;;		_I2C1_MasterClose
 15362 ;;		_I2C1_MasterDisableIrq
 15363 ;; This function is called by:
 15364 ;;		_I2C1_Write1ByteRegister
 15365 ;;		_I2C1_WR
 15366 ;;		_I2C1_Read1ByteRegister
 15367 ;;		_I2C1_Read2ByteRegister
 15368 ;;		_I2C1_Write2ByteRegister
 15369 ;;		_I2C1_WriteNBytes
 15370 ;;		_I2C1_ReadNBytes
 15371 ;;		_I2C1_ReadDataBlock
 15372 ;;		_I2C1_RD
 15373 ;; This function uses a non-reentrant model
 15374 ;;
 15375                           
 15376  0B21                     _I2C1_Close:	
 15377                           ;psect for function _I2C1_Close
 15378                           
 15379  0B21                     l3694:	
 15380                           ;incstack = 0
 15381                           ; Regs used in _I2C1_Close: [wreg+status,2+status,0+pclath+cstack]
 15382                           
 15383                           
 15384                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 15385  0B21  01F1               	clrf	I2C1_Close@returnValue
 15386  0B22  0AF1               	incf	I2C1_Close@returnValue,f
 15387                           
 15388                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 15389  0B23  0021               	movlb	1	; select bank1
 15390  0B24  18BC               	btfsc	(_I2C1_Status^(0+128)+28),1
 15391  0B25  2B27               	goto	u1431
 15392  0B26  2B28               	goto	u1430
 15393  0B27                     u1431:
 15394  0B27  2B3B               	goto	l3708
 15395  0B28                     u1430:
 15396  0B28                     l3696:
 15397                           
 15398                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 15399  0B28  113C               	bcf	(_I2C1_Status^(0+128)+28),2
 15400  0B29                     l3698:
 15401                           
 15402                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 15403  0B29  30FF               	movlw	255
 15404  0B2A  00F0               	movwf	??_I2C1_Close
 15405  0B2B  0870               	movf	??_I2C1_Close,w
 15406  0B2C  00B6               	movwf	(_I2C1_Status^(0+128)+22)
 15407  0B2D                     l3700:
 15408                           
 15409                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 15410  0B2D  3197  272A  318B   	fcall	_I2C1_MasterClearIrq
 15411  0B30                     l3702:
 15412                           
 15413                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 15414  0B30  3197  2730  318B   	fcall	_I2C1_MasterDisableIrq
 15415  0B33                     l3704:
 15416                           
 15417                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 15418  0B33  3197  272D  318B   	fcall	_I2C1_MasterClose
 15419  0B36                     l3706:
 15420                           
 15421                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 15422  0B36  0021               	movlb	1	; select bank1
 15423  0B37  083B               	movf	(_I2C1_Status^(0+128)+27),w
 15424  0B38  00F0               	movwf	??_I2C1_Close
 15425  0B39  0870               	movf	??_I2C1_Close,w
 15426  0B3A  00F1               	movwf	I2C1_Close@returnValue
 15427  0B3B                     l3708:
 15428                           
 15429                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 15430  0B3B  0871               	movf	I2C1_Close@returnValue,w
 15431  0B3C                     l414:
 15432  0B3C  0008               	return
 15433  0B3D                     __end_of_I2C1_Close:
 15434                           
 15435                           	psect	text75
 15436  1730                     __ptext75:	
 15437 ;; *************** function _I2C1_MasterDisableIrq *****************
 15438 ;; Defined at:
 15439 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 15440 ;; Parameters:    Size  Location     Type
 15441 ;;		None
 15442 ;; Auto vars:     Size  Location     Type
 15443 ;;		None
 15444 ;; Return value:  Size  Location     Type
 15445 ;;                  1    wreg      void 
 15446 ;; Registers used:
 15447 ;;		None
 15448 ;; Tracked objects:
 15449 ;;		On entry : 0/0
 15450 ;;		On exit  : 0/0
 15451 ;;		Unchanged: 0/0
 15452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15457 ;;Total ram usage:        0 bytes
 15458 ;; Hardware stack levels used: 1
 15459 ;; This function calls:
 15460 ;;		Nothing
 15461 ;; This function is called by:
 15462 ;;		_I2C1_Close
 15463 ;;		_I2C1_SetTimeOut
 15464 ;; This function uses a non-reentrant model
 15465 ;;
 15466                           
 15467  1730                     _I2C1_MasterDisableIrq:	
 15468                           ;psect for function _I2C1_MasterDisableIrq
 15469                           
 15470  1730                     l3628:	
 15471                           ;incstack = 0
 15472                           ; Regs used in _I2C1_MasterDisableIrq: []
 15473                           
 15474                           
 15475                           ;mcc_generated_files/i2c1_master.c: 637:     PIE3bits.SSP1IE = 0;
 15476  1730  002E               	movlb	14	; select bank14
 15477  1731  1019               	bcf	25,0	;volatile
 15478  1732                     l623:
 15479  1732  0008               	return
 15480  1733                     __end_of_I2C1_MasterDisableIrq:
 15481                           
 15482                           	psect	text76
 15483  172D                     __ptext76:	
 15484 ;; *************** function _I2C1_MasterClose *****************
 15485 ;; Defined at:
 15486 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 15487 ;; Parameters:    Size  Location     Type
 15488 ;;		None
 15489 ;; Auto vars:     Size  Location     Type
 15490 ;;		None
 15491 ;; Return value:  Size  Location     Type
 15492 ;;                  1    wreg      void 
 15493 ;; Registers used:
 15494 ;;		None
 15495 ;; Tracked objects:
 15496 ;;		On entry : 0/0
 15497 ;;		On exit  : 0/0
 15498 ;;		Unchanged: 0/0
 15499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15504 ;;Total ram usage:        0 bytes
 15505 ;; Hardware stack levels used: 1
 15506 ;; This function calls:
 15507 ;;		Nothing
 15508 ;; This function is called by:
 15509 ;;		_I2C1_Close
 15510 ;; This function uses a non-reentrant model
 15511 ;;
 15512                           
 15513  172D                     _I2C1_MasterClose:	
 15514                           ;psect for function _I2C1_MasterClose
 15515                           
 15516  172D                     l3630:	
 15517                           ;incstack = 0
 15518                           ; Regs used in _I2C1_MasterClose: []
 15519                           
 15520                           
 15521                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 15522  172D  0023               	movlb	3	; select bank3
 15523  172E  1290               	bcf	16,5	;volatile
 15524  172F                     l578:
 15525  172F  0008               	return
 15526  1730                     __end_of_I2C1_MasterClose:
 15527                           
 15528                           	psect	text77
 15529  172A                     __ptext77:	
 15530 ;; *************** function _I2C1_MasterClearIrq *****************
 15531 ;; Defined at:
 15532 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 15533 ;; Parameters:    Size  Location     Type
 15534 ;;		None
 15535 ;; Auto vars:     Size  Location     Type
 15536 ;;		None
 15537 ;; Return value:  Size  Location     Type
 15538 ;;                  1    wreg      void 
 15539 ;; Registers used:
 15540 ;;		None
 15541 ;; Tracked objects:
 15542 ;;		On entry : 0/0
 15543 ;;		On exit  : 0/0
 15544 ;;		Unchanged: 0/0
 15545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15550 ;;Total ram usage:        0 bytes
 15551 ;; Hardware stack levels used: 1
 15552 ;; This function calls:
 15553 ;;		Nothing
 15554 ;; This function is called by:
 15555 ;;		_I2C1_Open
 15556 ;;		_I2C1_Close
 15557 ;;		_I2C1_MasterFsm
 15558 ;; This function uses a non-reentrant model
 15559 ;;
 15560                           
 15561  172A                     _I2C1_MasterClearIrq:	
 15562                           ;psect for function _I2C1_MasterClearIrq
 15563                           
 15564  172A                     l3432:	
 15565                           ;incstack = 0
 15566                           ; Regs used in _I2C1_MasterClearIrq: []
 15567                           
 15568                           
 15569                           ;mcc_generated_files/i2c1_master.c: 642:     PIR3bits.SSP1IF = 0;
 15570  172A  002E               	movlb	14	; select bank14
 15571  172B  100F               	bcf	15,0	;volatile
 15572  172C                     l626:
 15573  172C  0008               	return
 15574  172D                     __end_of_I2C1_MasterClearIrq:
 15575                           
 15576                           	psect	text78
 15577  0A8F                     __ptext78:	
 15578 ;; *************** function _SYSTEM_Initialize *****************
 15579 ;; Defined at:
 15580 ;;		line 50 in file "mcc_generated_files/mcc.c"
 15581 ;; Parameters:    Size  Location     Type
 15582 ;;		None
 15583 ;; Auto vars:     Size  Location     Type
 15584 ;;		None
 15585 ;; Return value:  Size  Location     Type
 15586 ;;                  1    wreg      void 
 15587 ;; Registers used:
 15588 ;;		wreg, status,2, status,0, pclath, cstack
 15589 ;; Tracked objects:
 15590 ;;		On entry : 0/0
 15591 ;;		On exit  : 0/0
 15592 ;;		Unchanged: 0/0
 15593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15598 ;;Total ram usage:        0 bytes
 15599 ;; Hardware stack levels used: 1
 15600 ;; Hardware stack levels required when called: 2
 15601 ;; This function calls:
 15602 ;;		_ADCC_Initialize
 15603 ;;		_EUSART_Initialize
 15604 ;;		_I2C1_Initialize
 15605 ;;		_OSCILLATOR_Initialize
 15606 ;;		_PIN_MANAGER_Initialize
 15607 ;;		_PMD_Initialize
 15608 ;; This function is called by:
 15609 ;;		_main
 15610 ;; This function uses a non-reentrant model
 15611 ;;
 15612                           
 15613  0A8F                     _SYSTEM_Initialize:	
 15614                           ;psect for function _SYSTEM_Initialize
 15615                           
 15616  0A8F                     l4280:	
 15617                           ;incstack = 0
 15618                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15619                           
 15620                           
 15621                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 15622  0A8F  3197  27B2  318A   	fcall	_PMD_Initialize
 15623  0A92                     l4282:
 15624                           
 15625                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
 15626  0A92  3197  27C2  318A   	fcall	_I2C1_Initialize
 15627  0A95                     l4284:
 15628                           
 15629                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 15630  0A95  318D  2566  318A   	fcall	_PIN_MANAGER_Initialize
 15631  0A98                     l4286:
 15632                           
 15633                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 15634  0A98  3197  27CB  318A   	fcall	_OSCILLATOR_Initialize
 15635  0A9B                     l4288:
 15636                           
 15637                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 15638  0A9B  318A  22A2  318A   	fcall	_ADCC_Initialize
 15639  0A9E                     l4290:
 15640                           
 15641                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
 15642  0A9E  318B  233D  318A   	fcall	_EUSART_Initialize
 15643  0AA1                     l139:
 15644  0AA1  0008               	return
 15645  0AA2                     __end_of_SYSTEM_Initialize:
 15646                           
 15647                           	psect	text79
 15648  17B2                     __ptext79:	
 15649 ;; *************** function _PMD_Initialize *****************
 15650 ;; Defined at:
 15651 ;;		line 74 in file "mcc_generated_files/mcc.c"
 15652 ;; Parameters:    Size  Location     Type
 15653 ;;		None
 15654 ;; Auto vars:     Size  Location     Type
 15655 ;;		None
 15656 ;; Return value:  Size  Location     Type
 15657 ;;                  1    wreg      void 
 15658 ;; Registers used:
 15659 ;;		status,2
 15660 ;; Tracked objects:
 15661 ;;		On entry : 0/0
 15662 ;;		On exit  : 0/0
 15663 ;;		Unchanged: 0/0
 15664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15669 ;;Total ram usage:        0 bytes
 15670 ;; Hardware stack levels used: 1
 15671 ;; This function calls:
 15672 ;;		Nothing
 15673 ;; This function is called by:
 15674 ;;		_SYSTEM_Initialize
 15675 ;; This function uses a non-reentrant model
 15676 ;;
 15677                           
 15678  17B2                     _PMD_Initialize:	
 15679                           ;psect for function _PMD_Initialize
 15680                           
 15681  17B2                     l4128:	
 15682                           ;incstack = 0
 15683                           ; Regs used in _PMD_Initialize: [status,2]
 15684                           
 15685                           
 15686                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
 15687  17B2  002F               	movlb	15	; select bank15
 15688  17B3  0196               	clrf	22	;volatile
 15689                           
 15690                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
 15691  17B4  0197               	clrf	23	;volatile
 15692                           
 15693                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
 15694  17B5  0198               	clrf	24	;volatile
 15695                           
 15696                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
 15697  17B6  0199               	clrf	25	;volatile
 15698                           
 15699                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
 15700  17B7  019A               	clrf	26	;volatile
 15701                           
 15702                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
 15703  17B8  019B               	clrf	27	;volatile
 15704  17B9                     l145:
 15705  17B9  0008               	return
 15706  17BA                     __end_of_PMD_Initialize:
 15707                           
 15708                           	psect	text80
 15709  0D66                     __ptext80:	
 15710 ;; *************** function _PIN_MANAGER_Initialize *****************
 15711 ;; Defined at:
 15712 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 15713 ;; Parameters:    Size  Location     Type
 15714 ;;		None
 15715 ;; Auto vars:     Size  Location     Type
 15716 ;;		None
 15717 ;; Return value:  Size  Location     Type
 15718 ;;                  1    wreg      void 
 15719 ;; Registers used:
 15720 ;;		wreg, status,2
 15721 ;; Tracked objects:
 15722 ;;		On entry : 0/0
 15723 ;;		On exit  : 0/0
 15724 ;;		Unchanged: 0/0
 15725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15730 ;;Total ram usage:        0 bytes
 15731 ;; Hardware stack levels used: 1
 15732 ;; This function calls:
 15733 ;;		Nothing
 15734 ;; This function is called by:
 15735 ;;		_SYSTEM_Initialize
 15736 ;; This function uses a non-reentrant model
 15737 ;;
 15738                           
 15739  0D66                     _PIN_MANAGER_Initialize:	
 15740                           ;psect for function _PIN_MANAGER_Initialize
 15741                           
 15742  0D66                     l4138:	
 15743                           ;incstack = 0
 15744                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 15745                           
 15746                           
 15747                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 15748  0D66  0020               	movlb	0	; select bank0
 15749  0D67  0196               	clrf	22	;volatile
 15750                           
 15751                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 15752  0D68  0197               	clrf	23	;volatile
 15753                           
 15754                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 15755  0D69  0198               	clrf	24	;volatile
 15756  0D6A                     l4140:
 15757                           
 15758                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xF0;
 15759  0D6A  30F0               	movlw	240
 15760  0D6B  0091               	movwf	17	;volatile
 15761  0D6C                     l4142:
 15762                           
 15763                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
 15764  0D6C  30FF               	movlw	255
 15765  0D6D  0092               	movwf	18	;volatile
 15766  0D6E                     l4144:
 15767                           
 15768                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFE;
 15769  0D6E  30FE               	movlw	254
 15770  0D6F  0093               	movwf	19	;volatile
 15771  0D70                     l4146:
 15772                           
 15773                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xE4;
 15774  0D70  30E4               	movlw	228
 15775  0D71  003E               	movlb	30	; select bank30
 15776  0D72  00CE               	movwf	78	;volatile
 15777  0D73                     l4148:
 15778                           
 15779                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xFF;
 15780  0D73  30FF               	movlw	255
 15781  0D74  00C3               	movwf	67	;volatile
 15782  0D75                     l4150:
 15783                           
 15784                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0xD0;
 15785  0D75  30D0               	movlw	208
 15786  0D76  00B8               	movwf	56	;volatile
 15787                           
 15788                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
 15789  0D77  01E5               	clrf	101	;volatile
 15790                           
 15791                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
 15792  0D78  01C4               	clrf	68	;volatile
 15793                           
 15794                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
 15795  0D79  01B9               	clrf	57	;volatile
 15796                           
 15797                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x00;
 15798  0D7A  01CF               	clrf	79	;volatile
 15799                           
 15800                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
 15801  0D7B  01BA               	clrf	58	;volatile
 15802                           
 15803                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
 15804  0D7C  01C5               	clrf	69	;volatile
 15805                           
 15806                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
 15807  0D7D  01D0               	clrf	80	;volatile
 15808  0D7E                     l4152:
 15809                           
 15810                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0xFF;
 15811  0D7E  30FF               	movlw	255
 15812  0D7F  00BB               	movwf	59	;volatile
 15813  0D80                     l4154:
 15814                           
 15815                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xFF;
 15816  0D80  30FF               	movlw	255
 15817  0D81  00C6               	movwf	70	;volatile
 15818  0D82                     l4156:
 15819                           
 15820                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
 15821  0D82  30FF               	movlw	255
 15822  0D83  00D1               	movwf	81	;volatile
 15823  0D84                     l4158:
 15824                           
 15825                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0xFF;
 15826  0D84  30FF               	movlw	255
 15827  0D85  00BC               	movwf	60	;volatile
 15828  0D86                     l4160:
 15829                           
 15830                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xFF;
 15831  0D86  30FF               	movlw	255
 15832  0D87  00C7               	movwf	71	;volatile
 15833  0D88                     l4162:
 15834                           
 15835                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
 15836  0D88  30FF               	movlw	255
 15837  0D89  00D2               	movwf	82	;volatile
 15838  0D8A                     l4164:
 15839                           
 15840                           ;mcc_generated_files/pin_manager.c: 106:     INLVLE = 0x08;
 15841  0D8A  3008               	movlw	8
 15842  0D8B  00E8               	movwf	104	;volatile
 15843  0D8C                     l4166:
 15844                           
 15845                           ;mcc_generated_files/pin_manager.c: 115:     RC0PPS = 0x10;
 15846  0D8C  3010               	movlw	16
 15847  0D8D  00A0               	movwf	32	;volatile
 15848  0D8E                     l4168:
 15849                           
 15850                           ;mcc_generated_files/pin_manager.c: 116:     RXPPS = 0x11;
 15851  0D8E  3011               	movlw	17
 15852  0D8F  003D               	movlb	29	; select bank29
 15853  0D90  00CB               	movwf	75	;volatile
 15854  0D91                     l4170:
 15855                           
 15856                           ;mcc_generated_files/pin_manager.c: 117:     SSP1CLKPPS = 0x14;
 15857  0D91  3014               	movlw	20
 15858  0D92  00C5               	movwf	69	;volatile
 15859  0D93                     l4172:
 15860                           
 15861                           ;mcc_generated_files/pin_manager.c: 118:     RC3PPS = 0x15;
 15862  0D93  3015               	movlw	21
 15863  0D94  003E               	movlb	30	; select bank30
 15864  0D95  00A3               	movwf	35	;volatile
 15865  0D96                     l4174:
 15866                           
 15867                           ;mcc_generated_files/pin_manager.c: 119:     RC4PPS = 0x14;
 15868  0D96  3014               	movlw	20
 15869  0D97  00A4               	movwf	36	;volatile
 15870  0D98                     l4176:
 15871                           
 15872                           ;mcc_generated_files/pin_manager.c: 120:     SSP1DATPPS = 0x13;
 15873  0D98  3013               	movlw	19
 15874  0D99  003D               	movlb	29	; select bank29
 15875  0D9A  00C6               	movwf	70	;volatile
 15876  0D9B                     l791:
 15877  0D9B  0008               	return
 15878  0D9C                     __end_of_PIN_MANAGER_Initialize:
 15879                           
 15880                           	psect	text81
 15881  17CB                     __ptext81:	
 15882 ;; *************** function _OSCILLATOR_Initialize *****************
 15883 ;; Defined at:
 15884 ;;		line 60 in file "mcc_generated_files/mcc.c"
 15885 ;; Parameters:    Size  Location     Type
 15886 ;;		None
 15887 ;; Auto vars:     Size  Location     Type
 15888 ;;		None
 15889 ;; Return value:  Size  Location     Type
 15890 ;;                  1    wreg      void 
 15891 ;; Registers used:
 15892 ;;		wreg, status,2
 15893 ;; Tracked objects:
 15894 ;;		On entry : 0/0
 15895 ;;		On exit  : 0/0
 15896 ;;		Unchanged: 0/0
 15897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15902 ;;Total ram usage:        0 bytes
 15903 ;; Hardware stack levels used: 1
 15904 ;; This function calls:
 15905 ;;		Nothing
 15906 ;; This function is called by:
 15907 ;;		_SYSTEM_Initialize
 15908 ;; This function uses a non-reentrant model
 15909 ;;
 15910                           
 15911  17CB                     _OSCILLATOR_Initialize:	
 15912                           ;psect for function _OSCILLATOR_Initialize
 15913                           
 15914  17CB                     l4178:	
 15915                           ;incstack = 0
 15916                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 15917                           
 15918                           
 15919                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x62;
 15920  17CB  3062               	movlw	98
 15921  17CC  0031               	movlb	17	; select bank17
 15922  17CD  008D               	movwf	13	;volatile
 15923  17CE                     l4180:
 15924                           
 15925                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
 15926  17CE  018F               	clrf	15	;volatile
 15927  17CF                     l4182:
 15928                           
 15929                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
 15930  17CF  0191               	clrf	17	;volatile
 15931                           
 15932                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x06;
 15933  17D0  3006               	movlw	6
 15934  17D1  0093               	movwf	19	;volatile
 15935  17D2                     l4184:
 15936                           
 15937                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
 15938  17D2  0192               	clrf	18	;volatile
 15939  17D3                     l142:
 15940  17D3  0008               	return
 15941  17D4                     __end_of_OSCILLATOR_Initialize:
 15942                           
 15943                           	psect	text82
 15944  17C2                     __ptext82:	
 15945 ;; *************** function _I2C1_Initialize *****************
 15946 ;; Defined at:
 15947 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 15948 ;; Parameters:    Size  Location     Type
 15949 ;;		None
 15950 ;; Auto vars:     Size  Location     Type
 15951 ;;		None
 15952 ;; Return value:  Size  Location     Type
 15953 ;;                  1    wreg      void 
 15954 ;; Registers used:
 15955 ;;		wreg, status,2
 15956 ;; Tracked objects:
 15957 ;;		On entry : 0/0
 15958 ;;		On exit  : 0/0
 15959 ;;		Unchanged: 0/0
 15960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15965 ;;Total ram usage:        0 bytes
 15966 ;; Hardware stack levels used: 1
 15967 ;; This function calls:
 15968 ;;		Nothing
 15969 ;; This function is called by:
 15970 ;;		_SYSTEM_Initialize
 15971 ;; This function uses a non-reentrant model
 15972 ;;
 15973                           
 15974  17C2                     _I2C1_Initialize:	
 15975                           ;psect for function _I2C1_Initialize
 15976                           
 15977  17C2                     l4130:	
 15978                           ;incstack = 0
 15979                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 15980                           
 15981                           
 15982                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x00;
 15983  17C2  0023               	movlb	3	; select bank3
 15984  17C3  018F               	clrf	15	;volatile
 15985  17C4                     l4132:
 15986                           
 15987                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 15988  17C4  3008               	movlw	8
 15989  17C5  0090               	movwf	16	;volatile
 15990  17C6                     l4134:
 15991                           
 15992                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 15993  17C6  0191               	clrf	17	;volatile
 15994                           
 15995                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x13;
 15996  17C7  3013               	movlw	19
 15997  17C8  008D               	movwf	13	;volatile
 15998  17C9                     l4136:
 15999                           
 16000                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 16001  17C9  1290               	bcf	16,5	;volatile
 16002  17CA                     l406:
 16003  17CA  0008               	return
 16004  17CB                     __end_of_I2C1_Initialize:
 16005                           
 16006                           	psect	text83
 16007  0B3D                     __ptext83:	
 16008 ;; *************** function _EUSART_Initialize *****************
 16009 ;; Defined at:
 16010 ;;		line 66 in file "mcc_generated_files/eusart.c"
 16011 ;; Parameters:    Size  Location     Type
 16012 ;;		None
 16013 ;; Auto vars:     Size  Location     Type
 16014 ;;		None
 16015 ;; Return value:  Size  Location     Type
 16016 ;;                  1    wreg      void 
 16017 ;; Registers used:
 16018 ;;		wreg, status,2, status,0, pclath, cstack
 16019 ;; Tracked objects:
 16020 ;;		On entry : 0/0
 16021 ;;		On exit  : 0/0
 16022 ;;		Unchanged: 0/0
 16023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16028 ;;Total ram usage:        0 bytes
 16029 ;; Hardware stack levels used: 1
 16030 ;; Hardware stack levels required when called: 1
 16031 ;; This function calls:
 16032 ;;		_EUSART_SetErrorHandler
 16033 ;;		_EUSART_SetFramingErrorHandler
 16034 ;;		_EUSART_SetOverrunErrorHandler
 16035 ;; This function is called by:
 16036 ;;		_SYSTEM_Initialize
 16037 ;; This function uses a non-reentrant model
 16038 ;;
 16039                           
 16040  0B3D                     _EUSART_Initialize:	
 16041                           ;psect for function _EUSART_Initialize
 16042                           
 16043  0B3D                     l4192:	
 16044                           ;incstack = 0
 16045                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16046                           
 16047                           
 16048                           ;mcc_generated_files/eusart.c: 71:     BAUD1CON = 0x08;
 16049  0B3D  3008               	movlw	8
 16050  0B3E  0022               	movlb	2	; select bank2
 16051  0B3F  009F               	movwf	31	;volatile
 16052                           
 16053                           ;mcc_generated_files/eusart.c: 74:     RC1STA = 0x90;
 16054  0B40  3090               	movlw	144
 16055  0B41  009D               	movwf	29	;volatile
 16056                           
 16057                           ;mcc_generated_files/eusart.c: 77:     TX1STA = 0x24;
 16058  0B42  3024               	movlw	36
 16059  0B43  009E               	movwf	30	;volatile
 16060                           
 16061                           ;mcc_generated_files/eusart.c: 80:     SP1BRGL = 0x10;
 16062  0B44  3010               	movlw	16
 16063  0B45  009B               	movwf	27	;volatile
 16064  0B46                     l4194:
 16065                           
 16066                           ;mcc_generated_files/eusart.c: 83:     SP1BRGH = 0x00;
 16067  0B46  019C               	clrf	28	;volatile
 16068  0B47                     l4196:
 16069                           
 16070                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
 16071  0B47  3000               	movlw	0
 16072  0B48  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
 16073  0B49  3000               	movlw	0
 16074  0B4A  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
 16075  0B4B  3197  2787  318B   	fcall	_EUSART_SetFramingErrorHandler
 16076  0B4E                     l4198:
 16077                           
 16078                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
 16079  0B4E  3000               	movlw	0
 16080  0B4F  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
 16081  0B50  3000               	movlw	0
 16082  0B51  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
 16083  0B52  3197  278D  318B   	fcall	_EUSART_SetOverrunErrorHandler
 16084  0B55                     l4200:
 16085                           
 16086                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
 16087  0B55  3000               	movlw	0
 16088  0B56  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
 16089  0B57  3000               	movlw	0
 16090  0B58  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
 16091  0B59  3197  2781  318B   	fcall	_EUSART_SetErrorHandler
 16092  0B5C                     l4202:
 16093                           
 16094                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
 16095  0B5C  0021               	movlb	1	; select bank1
 16096  0B5D  01CF               	clrf	_eusartRxLastError^(0+128)	;volatile
 16097  0B5E                     l679:
 16098  0B5E  0008               	return
 16099  0B5F                     __end_of_EUSART_Initialize:
 16100                           
 16101                           	psect	text84
 16102  178D                     __ptext84:	
 16103 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
 16104 ;; Defined at:
 16105 ;;		line 170 in file "mcc_generated_files/eusart.c"
 16106 ;; Parameters:    Size  Location     Type
 16107 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 16108 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
 16109 ;; Auto vars:     Size  Location     Type
 16110 ;;		None
 16111 ;; Return value:  Size  Location     Type
 16112 ;;                  1    wreg      void 
 16113 ;; Registers used:
 16114 ;;		wreg
 16115 ;; Tracked objects:
 16116 ;;		On entry : 0/0
 16117 ;;		On exit  : 0/0
 16118 ;;		Unchanged: 0/0
 16119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16120 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16123 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16124 ;;Total ram usage:        2 bytes
 16125 ;; Hardware stack levels used: 1
 16126 ;; This function calls:
 16127 ;;		Nothing
 16128 ;; This function is called by:
 16129 ;;		_EUSART_Initialize
 16130 ;; This function uses a non-reentrant model
 16131 ;;
 16132                           
 16133  178D                     _EUSART_SetOverrunErrorHandler:	
 16134                           ;psect for function _EUSART_SetOverrunErrorHandler
 16135                           
 16136  178D                     l3982:	
 16137                           ;incstack = 0
 16138                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
 16139                           
 16140                           
 16141                           ;mcc_generated_files/eusart.c: 171:     EUSART_OverrunErrorHandler = interruptHandler;
 16142  178D  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
 16143  178E  0021               	movlb	1	; select bank1
 16144  178F  00E7               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
 16145  1790  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
 16146  1791  00E6               	movwf	_EUSART_OverrunErrorHandler^(0+128)
 16147  1792                     l727:
 16148  1792  0008               	return
 16149  1793                     __end_of_EUSART_SetOverrunErrorHandler:
 16150                           
 16151                           	psect	text85
 16152  1787                     __ptext85:	
 16153 ;; *************** function _EUSART_SetFramingErrorHandler *****************
 16154 ;; Defined at:
 16155 ;;		line 166 in file "mcc_generated_files/eusart.c"
 16156 ;; Parameters:    Size  Location     Type
 16157 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 16158 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
 16159 ;; Auto vars:     Size  Location     Type
 16160 ;;		None
 16161 ;; Return value:  Size  Location     Type
 16162 ;;                  1    wreg      void 
 16163 ;; Registers used:
 16164 ;;		wreg
 16165 ;; Tracked objects:
 16166 ;;		On entry : 0/0
 16167 ;;		On exit  : 0/0
 16168 ;;		Unchanged: 0/0
 16169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16170 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16173 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16174 ;;Total ram usage:        2 bytes
 16175 ;; Hardware stack levels used: 1
 16176 ;; This function calls:
 16177 ;;		Nothing
 16178 ;; This function is called by:
 16179 ;;		_EUSART_Initialize
 16180 ;; This function uses a non-reentrant model
 16181 ;;
 16182                           
 16183  1787                     _EUSART_SetFramingErrorHandler:	
 16184                           ;psect for function _EUSART_SetFramingErrorHandler
 16185                           
 16186  1787                     l3980:	
 16187                           ;incstack = 0
 16188                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
 16189                           
 16190                           
 16191                           ;mcc_generated_files/eusart.c: 167:     EUSART_FramingErrorHandler = interruptHandler;
 16192  1787  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
 16193  1788  0021               	movlb	1	; select bank1
 16194  1789  00E9               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
 16195  178A  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
 16196  178B  00E8               	movwf	_EUSART_FramingErrorHandler^(0+128)
 16197  178C                     l724:
 16198  178C  0008               	return
 16199  178D                     __end_of_EUSART_SetFramingErrorHandler:
 16200                           
 16201                           	psect	text86
 16202  1781                     __ptext86:	
 16203 ;; *************** function _EUSART_SetErrorHandler *****************
 16204 ;; Defined at:
 16205 ;;		line 174 in file "mcc_generated_files/eusart.c"
 16206 ;; Parameters:    Size  Location     Type
 16207 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 16208 ;;		 -> EUSART_DefaultErrorHandler(1), 
 16209 ;; Auto vars:     Size  Location     Type
 16210 ;;		None
 16211 ;; Return value:  Size  Location     Type
 16212 ;;                  1    wreg      void 
 16213 ;; Registers used:
 16214 ;;		wreg
 16215 ;; Tracked objects:
 16216 ;;		On entry : 0/0
 16217 ;;		On exit  : 0/0
 16218 ;;		Unchanged: 0/0
 16219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16220 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16223 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16224 ;;Total ram usage:        2 bytes
 16225 ;; Hardware stack levels used: 1
 16226 ;; This function calls:
 16227 ;;		Nothing
 16228 ;; This function is called by:
 16229 ;;		_EUSART_Initialize
 16230 ;; This function uses a non-reentrant model
 16231 ;;
 16232                           
 16233  1781                     _EUSART_SetErrorHandler:	
 16234                           ;psect for function _EUSART_SetErrorHandler
 16235                           
 16236  1781                     l3984:	
 16237                           ;incstack = 0
 16238                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
 16239                           
 16240                           
 16241                           ;mcc_generated_files/eusart.c: 175:     EUSART_ErrorHandler = interruptHandler;
 16242  1781  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
 16243  1782  0021               	movlb	1	; select bank1
 16244  1783  00E5               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
 16245  1784  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
 16246  1785  00E4               	movwf	_EUSART_ErrorHandler^(0+128)
 16247  1786                     l730:
 16248  1786  0008               	return
 16249  1787                     __end_of_EUSART_SetErrorHandler:
 16250                           
 16251                           	psect	text87
 16252  0AA2                     __ptext87:	
 16253 ;; *************** function _ADCC_Initialize *****************
 16254 ;; Defined at:
 16255 ;;		line 63 in file "mcc_generated_files/adcc.c"
 16256 ;; Parameters:    Size  Location     Type
 16257 ;;		None
 16258 ;; Auto vars:     Size  Location     Type
 16259 ;;		None
 16260 ;; Return value:  Size  Location     Type
 16261 ;;                  1    wreg      void 
 16262 ;; Registers used:
 16263 ;;		wreg, status,2
 16264 ;; Tracked objects:
 16265 ;;		On entry : 0/0
 16266 ;;		On exit  : 0/0
 16267 ;;		Unchanged: 0/0
 16268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16273 ;;Total ram usage:        0 bytes
 16274 ;; Hardware stack levels used: 1
 16275 ;; This function calls:
 16276 ;;		Nothing
 16277 ;; This function is called by:
 16278 ;;		_SYSTEM_Initialize
 16279 ;; This function uses a non-reentrant model
 16280 ;;
 16281                           
 16282  0AA2                     _ADCC_Initialize:	
 16283                           ;psect for function _ADCC_Initialize
 16284                           
 16285  0AA2                     l4186:	
 16286                           ;incstack = 0
 16287                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 16288                           
 16289                           
 16290                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
 16291  0AA2  0022               	movlb	2	; select bank2
 16292  0AA3  018E               	clrf	14	;volatile
 16293                           
 16294                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
 16295  0AA4  018F               	clrf	15	;volatile
 16296                           
 16297                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 16298  0AA5  0190               	clrf	16	;volatile
 16299                           
 16300                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
 16301  0AA6  0191               	clrf	17	;volatile
 16302                           
 16303                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 16304  0AA7  0192               	clrf	18	;volatile
 16305                           
 16306                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 16307  0AA8  0193               	clrf	19	;volatile
 16308                           
 16309                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
 16310  0AA9  018D               	clrf	13	;volatile
 16311                           
 16312                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
 16313  0AAA  0021               	movlb	1	; select bank1
 16314  0AAB  019E               	clrf	30	;volatile
 16315                           
 16316                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
 16317  0AAC  019B               	clrf	27	;volatile
 16318                           
 16319                           ;mcc_generated_files/adcc.c: 85:     ADPRE = 0x00;
 16320  0AAD  019C               	clrf	28	;volatile
 16321                           
 16322                           ;mcc_generated_files/adcc.c: 87:     ADCON1 = 0x00;
 16323  0AAE  0194               	clrf	20	;volatile
 16324                           
 16325                           ;mcc_generated_files/adcc.c: 89:     ADCON2 = 0x00;
 16326  0AAF  0195               	clrf	21	;volatile
 16327                           
 16328                           ;mcc_generated_files/adcc.c: 91:     ADCON3 = 0x00;
 16329  0AB0  0196               	clrf	22	;volatile
 16330                           
 16331                           ;mcc_generated_files/adcc.c: 93:     ADSTAT = 0x00;
 16332  0AB1  0197               	clrf	23	;volatile
 16333                           
 16334                           ;mcc_generated_files/adcc.c: 95:     ADREF = 0x00;
 16335  0AB2  019A               	clrf	26	;volatile
 16336                           
 16337                           ;mcc_generated_files/adcc.c: 97:     ADACT = 0x00;
 16338  0AB3  0199               	clrf	25	;volatile
 16339  0AB4                     l4188:
 16340                           
 16341                           ;mcc_generated_files/adcc.c: 99:     ADCLK = 0x0F;
 16342  0AB4  300F               	movlw	15
 16343  0AB5  0098               	movwf	24	;volatile
 16344  0AB6                     l4190:
 16345                           
 16346                           ;mcc_generated_files/adcc.c: 101:     ADCON0 = 0x84;
 16347  0AB6  3084               	movlw	132
 16348  0AB7  0093               	movwf	19	;volatile
 16349                           
 16350                           ;mcc_generated_files/adcc.c: 103:     ADACQ = 0x00;
 16351  0AB8  019D               	clrf	29	;volatile
 16352  0AB9                     l220:
 16353  0AB9  0008               	return
 16354  0ABA                     __end_of_ADCC_Initialize:
 16355  007E                     btemp	set	126	;btemp
 16356  007E                     wtemp0	set	126
 16357                           
 16358                           	psect	idloc
 16359                           
 16360                           ;Config register IDLOC0 @ 0x8000
 16361                           ;	unspecified, using default values
 16362  8000                     	org	32768
 16363  8000  3FFF               	dw	16383
 16364                           
 16365                           ;Config register IDLOC1 @ 0x8001
 16366                           ;	unspecified, using default values
 16367  8001                     	org	32769
 16368  8001  3FFF               	dw	16383
 16369                           
 16370                           ;Config register IDLOC2 @ 0x8002
 16371                           ;	unspecified, using default values
 16372  8002                     	org	32770
 16373  8002  3FFF               	dw	16383
 16374                           
 16375                           ;Config register IDLOC3 @ 0x8003
 16376                           ;	unspecified, using default values
 16377  8003                     	org	32771
 16378  8003  3FFF               	dw	16383
 16379                           
 16380                           	psect	config
 16381                           
 16382                           ;Config register CONFIG1 @ 0x8007
 16383                           ;	External Oscillator mode selection bits
 16384                           ;	FEXTOSC = OFF, Oscillator not enabled
 16385                           ;	Power-up default value for COSC bits
 16386                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 16387                           ;	Clock Out Enable bit
 16388                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 16389                           ;	Clock Switch Enable bit
 16390                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 16391                           ;	Fail-Safe Clock Monitor Enable bit
 16392                           ;	FCMEN = ON, FSCM timer enabled
 16393  8007                     	org	32775
 16394  8007  3FEC               	dw	16364
 16395                           
 16396                           ;Config register CONFIG2 @ 0x8008
 16397                           ;	Master Clear Enable bit
 16398                           ;	MCLRE = ON, MCLR pin is Master Clear function
 16399                           ;	Power-up Timer Enable bit
 16400                           ;	PWRTE = OFF, PWRT disabled
 16401                           ;	Low-Power BOR enable bit
 16402                           ;	LPBOREN = OFF, ULPBOR disabled
 16403                           ;	Brown-out reset enable bits
 16404                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 16405                           ;	Brown-out Reset Voltage Selection
 16406                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 16407                           ;	Zero-cross detect disable
 16408                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 16409                           ;	Peripheral Pin Select one-way control
 16410                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 16411                           ;	Stack Overflow/Underflow Reset Enable bit
 16412                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 16413                           ;	Background Debugger
 16414                           ;	DEBUG = OFF, Background Debugger disabled
 16415  8008                     	org	32776
 16416  8008  3FFF               	dw	16383
 16417                           
 16418                           ;Config register CONFIG3 @ 0x8009
 16419                           ;	WDT Period Select bits
 16420                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 16421                           ;	WDT operating mode
 16422                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 16423                           ;	WDT Window Select bits
 16424                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 16425                           ;	WDT input clock selector
 16426                           ;	WDTCCS = SC, Software Control
 16427  8009                     	org	32777
 16428  8009  3F9F               	dw	16287
 16429                           
 16430                           ;Config register CONFIG4 @ 0x800A
 16431                           ;	UserNVM self-write protection bits
 16432                           ;	WRT = OFF, Write protection off
 16433                           ;	Scanner Enable bit
 16434                           ;	SCANE = available, Scanner module is available for use
 16435                           ;	Low Voltage Programming Enable bit
 16436                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 16437  800A                     	org	32778
 16438  800A  3FFF               	dw	16383
 16439                           
 16440                           ;Config register CONFIG5 @ 0x800B
 16441                           ;	UserNVM Program memory code protection bit
 16442                           ;	CP = OFF, Program Memory code protection disabled
 16443                           ;	DataNVM code protection bit
 16444                           ;	CPD = OFF, Data EEPROM code protection disabled
 16445  800B                     	org	32779
 16446  800B  3FFF               	dw	16383

Data Sizes:
    Strings     30
    Constant    608
    Data        2
    BSS         106
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     12      76
    BANK2            80      0      50
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_DO_TX$2515$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_DO_TX$2520	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_DO_TX$2515	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_MasterFsm$2514	const PTR FTN()enum E12085 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S538$0$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    fputc@fp...source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_4(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_4(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    ctoa@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_4(CODE[6]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 18
		 -> buffer(BANK2[18]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2024$source	PTR const unsigned char  size(1) Largest target is 0

    f...source	PTR const unsigned char  size(1) Largest target is 0

    S2024$buffer	PTR unsigned char  size(1) Largest target is 0

    f...buffer	PTR unsigned char  size(1) Largest target is 0

    lcd_BigFont_writeBigString@str	PTR unsigned char  size(2) Largest target is 18
		 -> buffer(BANK2[18]), STR_2(CODE[6]), 

    lcd_setCustomChar@dato	PTR unsigned char  size(1) Largest target is 8
		 -> bb(BANK1[8]), 

    lcd_puts@dato	PTR unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[4]), STR_1(CODE[14]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    I2C1_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_SetBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue.data(COMMON[2]), I2C1_Read2ByteRegister@returnValue.data(COMMON[2]), I2C1_Write1ByteRegister@data.data(COMMON[2]), I2C1_Write2ByteRegister@data.data(COMMON[2]), 
		 -> I2C1_RD@returnValue(COMMON[1]), I2C1_WR@data(BANK0[1]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), 
		 -> bufferBlock.data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@reg(BANK0[1]), 
		 -> I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), 
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S538$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_RD@returnValue(COMMON[1]), I2C1_WR@data(BANK0[1]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), 
		 -> I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@reg(BANK0[1]), I2C1_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), I2C1_Read1ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue.data(COMMON[2]), I2C1_Read2ByteRegister@returnValue.data(COMMON[2]), I2C1_Write1ByteRegister@data.data(COMMON[2]), I2C1_Write2ByteRegister@data.data(COMMON[2]), 
		 -> I2C1_RD@returnValue(COMMON[1]), I2C1_WR@data(BANK0[1]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), 
		 -> bufferBlock.data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@reg(BANK0[1]), 
		 -> I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), 
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S538$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S538$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    i2c1_fsmStateTable	const PTR FTN()enum E12085[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S94$data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod
    _lcd_puts->_lcd_gotoxy
    _lcd_putc->_lcd_gotoxy
    _lcd_init->_lcd_send_byte
    _lcd_clear->_lcd_send_byte
    _lcd_BigFont_writeBigString->_lcd_BigFont_writeBigChar
    _lcd_BigFont_writeBigChar->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_BigFont_init->_lcd_setCustomChar
    _lcd_setCustomChar->_lcd_send_byte
    _lcd_send_byte->_Send_D7_D4
    _Send_D7_D4->_Write_PCF
    _Write_PCF->_I2C1_WR
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 1073606
                                             78 BANK0      2     2      0
                  _SYSTEM_Initialize
                   _lcd_BigFont_init
         _lcd_BigFont_writeBigString
                          _lcd_clear
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_putc
                           _lcd_puts
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    15      6    9374
                                             71 BANK0      7     1      6
                                              0 BANK1     12    12      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    9064
                                             63 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    8750
                                             46 BANK0     17    15      2
                               _ctoa
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    5143
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3537
                                              4 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1649
                                             10 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                10     8      2    1646
                                             10 COMMON     2     0      2
                                              0 BANK0      8     8      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3    1334
                                              2 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      44
                                              1 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             4     2      2  177483
                                             22 BANK0      4     2      2
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_putc                                             3     3      0  177308
                                             22 BANK0      3     3      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0  264612
                                             17 BANK0      2     2      0
            _I2C1_Write1ByteRegister
                         _Send_D7_D4
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _I2C1_Write1ByteRegister                              4     2      2   89026
                                              5 BANK0      4     2      2
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            1     1      0   88384
                                             17 BANK0      1     1      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_BigFont_writeBigString                           8     4      4  178720
                                             32 BANK0      8     4      4
           _lcd_BigFont_writeBigChar
 ---------------------------------------------------------------------------------
 (2) _lcd_BigFont_writeBigChar                            10     8      2  178174
                                             22 BANK0     10     8      2
                            ___awdiv
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoxy                                           5     4      1   88880
                                             17 BANK0      5     4      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _lcd_BigFont_init                                     7     7      0   88551
                                             22 BANK0      7     7      0
                  _lcd_setCustomChar
 ---------------------------------------------------------------------------------
 (2) _lcd_setCustomChar                                    5     4      1   88551
                                             17 BANK0      5     4      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_send_byte                                        4     3      1   88384
                                             13 BANK0      4     3      1
                         _Send_D7_D4
 ---------------------------------------------------------------------------------
 (3) _Send_D7_D4                                           4     3      1   87156
                                              9 BANK0      4     3      1
                          _Write_PCF
 ---------------------------------------------------------------------------------
 (4) _Write_PCF                                            2     2      0   86467
                                              7 BANK0      2     2      0
                            _I2C1_WR
 ---------------------------------------------------------------------------------
 (5) _I2C1_WR                                              2     1      1   86445
                                              5 BANK0      2     1      1
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetAddressNackCallback                          4     1      3    2022
                                              5 COMMON     4     1      3
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_Open                                            3     3      0      46
                                              0 COMMON     3     3      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterWrite                                     0     0      0   82660
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOperation                                 3     3      0   82660
                                             13 COMMON     1     1      0
                                              3 BANK0      2     2      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (8) _I2C1_Poller                                          0     0      0   82614
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterFsm                                       3     3      0   82614
                                              0 BANK0      3     3      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX_EMPTY                                    3     3      0   20637
                                             10 COMMON     3     3      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX                                          3     3      0   20659
                                             10 COMMON     3     3      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterIsNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_WRITE                              0     0      0      22
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_READ                               0     0      0      22
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendTxData                               1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_ACK                                      0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX                                          3     3      0   20637
                                             10 COMMON     3     3      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_STOP                                0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_RESTART                             0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RESET                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RCEN                                        0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_IDLE                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_ADDRESS_NACK                                3     3      0   20637
                                             10 COMMON     3     3      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler                               1     0      1    4070
                                              9 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler                               1     0      1    4070
                                              9 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler                             1     0      1    4092
                                              9 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler                               1     0      1    4070
                                              9 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler                               1     0      1    4070
                                              9 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (12) _I2C1_SetDataCompleteCallback                        4     1      3    2478
                                              5 COMMON     4     1      3
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (7) _I2C1_SetCallback                                     5     2      3     914
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetBuffer                                       4     2      2    1570
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnStop                             1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnReset                            1     0      1     265
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_Close                                           2     2      0      24
                                              0 COMMON     2     2      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                    _ADCC_Initialize
                  _EUSART_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _lcd_BigFont_init
     _lcd_setCustomChar
       _lcd_send_byte
         _Send_D7_D4
           _Write_PCF
             _I2C1_WR
               _I2C1_Close
                 _I2C1_MasterClearIrq
                 _I2C1_MasterClose
                 _I2C1_MasterDisableIrq
               _I2C1_MasterWrite
                 _I2C1_MasterOperation
                   _I2C1_MasterStart
                   _I2C1_Poller
                     _I2C1_MasterFsm
                       _I2C1_DO_ADDRESS_NACK *
                         Absolute function(Fake) *
                         _I2C1_CallbackReturnReset *
                         _I2C1_CallbackReturnStop *
                         _I2C1_DO_SEND_RESTART *
                           _I2C1_MasterEnableRestart
                         _I2C1_DO_SEND_STOP *
                           _I2C1_MasterStop
                         _rd1RegCompleteHandler *
                           _I2C1_SetBuffer
                           _I2C1_SetDataCompleteCallback
                             _I2C1_SetCallback
                         _rd2RegCompleteHandler *
                           _I2C1_SetBuffer
                           _I2C1_SetDataCompleteCallback
                         _rdBlkRegCompleteHandler *
                           _I2C1_SetBuffer
                           _I2C1_SetDataCompleteCallback
                         _wr1RegCompleteHandler *
                           _I2C1_SetBuffer
                           _I2C1_SetDataCompleteCallback
                         _wr2RegCompleteHandler *
                           _I2C1_SetBuffer
                           _I2C1_SetDataCompleteCallback
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                         _I2C1_MasterStartRx
                       _I2C1_DO_RESET *
                       _I2C1_DO_RX *
                         Absolute function(Fake) *
                         _I2C1_CallbackReturnReset *
                         _I2C1_CallbackReturnStop *
                         _I2C1_DO_RX_NACK_RESTART *
                           _I2C1_MasterSendNack
                         _I2C1_DO_RX_NACK_STOP *
                           _I2C1_MasterSendNack
                         _I2C1_MasterGetRxData *
                         _I2C1_MasterSendAck *
                         _rd1RegCompleteHandler *
                         _rd2RegCompleteHandler *
                         _rdBlkRegCompleteHandler *
                         _wr1RegCompleteHandler *
                         _wr2RegCompleteHandler *
                       _I2C1_DO_RX_ACK *
                         _I2C1_MasterSendAck
                       _I2C1_DO_RX_NACK_RESTART *
                       _I2C1_DO_RX_NACK_STOP *
                       _I2C1_DO_SEND_ADR_READ *
                         _I2C1_MasterSendTxData
                       _I2C1_DO_SEND_ADR_WRITE *
                         _I2C1_MasterSendTxData
                       _I2C1_DO_SEND_RESTART *
                       _I2C1_DO_SEND_RESTART_READ *
                         _I2C1_MasterEnableRestart
                       _I2C1_DO_SEND_RESTART_WRITE *
                         _I2C1_MasterEnableRestart
                       _I2C1_DO_SEND_STOP *
                       _I2C1_DO_TX *
                         Absolute function(Fake) *
                         _I2C1_CallbackReturnReset *
                         _I2C1_CallbackReturnStop *
                         _I2C1_DO_SEND_RESTART_READ *
                         _I2C1_DO_SEND_RESTART_WRITE *
                         _I2C1_DO_SEND_STOP *
                         _I2C1_MasterIsNack *
                         _I2C1_MasterSendTxData *
                         _rd1RegCompleteHandler *
                         _rd2RegCompleteHandler *
                         _rdBlkRegCompleteHandler *
                         _wr1RegCompleteHandler *
                         _wr2RegCompleteHandler *
                       _I2C1_DO_TX_EMPTY *
                         Absolute function(Fake) *
                         _I2C1_CallbackReturnReset *
                         _I2C1_CallbackReturnStop *
                         _I2C1_DO_SEND_RESTART *
                         _I2C1_DO_SEND_STOP *
                         _I2C1_MasterSetIrq *
                         _rd1RegCompleteHandler *
                         _rd2RegCompleteHandler *
                         _rdBlkRegCompleteHandler *
                         _wr1RegCompleteHandler *
                         _wr2RegCompleteHandler *
                       _I2C1_MasterClearIrq *
                       _I2C1_MasterIsNack *
                     _I2C1_MasterWaitForEvent
               _I2C1_Open
                 _I2C1_MasterClearIrq
                 _I2C1_MasterOpen
               _I2C1_SetAddressNackCallback
                 _I2C1_SetCallback
               _I2C1_SetBuffer
   _lcd_BigFont_writeBigString
     _lcd_BigFont_writeBigChar
       ___awdiv
       _lcd_gotoxy
         _lcd_send_byte
       _lcd_send_byte
   _lcd_clear
     _lcd_send_byte
   _lcd_gotoxy
   _lcd_init
     _I2C1_Write1ByteRegister
       _I2C1_Close
       _I2C1_MasterWrite
       _I2C1_Open
       _I2C1_SetAddressNackCallback
       _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
     _Send_D7_D4
     _lcd_send_byte
   _lcd_putc
     _lcd_gotoxy
     _lcd_send_byte
   _lcd_puts
     _lcd_gotoxy
     _lcd_send_byte
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _fputc
             _putch
               _EUSART_Write
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
             _fputs
               _fputc
             _strlen
         _fputc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      C      4C       7       95.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      32       9       62.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      DC      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      DC      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun May 28 22:27:03 2023

                            Send_D7_D4@address 002B                               Send_D7_D4@nibble 0029  
                                           l51 0D65                                             l90 0A5B  
                                           l93 0A6C                                             l96 0A7D  
                                           l99 0A4A                                 ?_lcd_send_byte 002D  
                                 ___awdiv@sign 0076                                             _bb 00D0  
                                           _bc 00CB                                             _nb 00CC  
                              __end_of_I2C1_WR 0BCF                                            l102 0AD1  
                                          l220 0AB9                                            l142 17D3  
                                          l145 17B9                                            l410 0DD5  
                                          l139 0AA1                                            l420 0B81  
                                          l406 17CA                                            l414 0B3C  
                                          l503 17B1                                            l433 0A39  
                                          l409 0DD4                                            l602 1798  
                                          l530 175D                                            l426 1780  
                                          l442 0A29                                            l436 17FF  
                                          l453 0BA7                                            l605 1749  
                                          l509 0CD2                                            l533 1762  
                                          l542 1771                                            l623 1732  
                                          l527 1758                                            l463 0CA3  
                                          l703 17DE                                            l608 1745  
                                          l472 17C1                                            l536 1767  
                                          l632 1799                                            l712 17A4  
                                          l545 1776                                            l730 1786  
                                          l626 172C                                            l562 1725  
                                          l466 1753                                            l554 0C75  
                                          l706 17E6                                            l475 0F30  
                                          l491 0E7C                                            l539 176C  
                                          l459 0A0F                                            l724 178C  
                                          l492 0EA4                                            l548 177B  
                                          l636 179E                                            l565 1727  
                                          l581 1741                                            l629 0A02  
                                          l469 17DC                                            l478 0F4C  
                                          l727 1792                                            l575 0A1C  
                                          l911 0A8E                                            l584 174E  
                                          l593 173E                                            l578 172F  
                                          l587 1738                                            l596 1735  
                                          l916 0D01                                            l908 0FFF  
                                          l679 0B5E                                            l791 0D9B  
                                          l599 173B                                            l871 00AE  
                                          l952 037A                                            l858 17F2  
                                          l874 0B20                                            l946 0053  
                                          l955 02F0                                            l967 0BF6  
                                          l879 020A                                            l889 0E19  
                                          l897 0E5E                                            l988 0BCE  
                        ?_I2C1_MasterOperation 0070                                            _abs 0AD2  
                                          _col 00CE                                            _pad 0F4D  
                                          _pos 00C5                                            _row 00CD  
               ?_EUSART_SetFramingErrorHandler 0070                                            wreg 0009  
                       ?_I2C1_MasterSendTxData 0070                           _I2C1_DO_RX_NACK_STOP 176D  
                    ?_I2C1_MasterEnableRestart 0070                                    lcd_gotoxy@x 0034  
                                  lcd_gotoxy@y 0031                           I2C1_SetBuffer@buffer 0073  
                                         ?_abs 0073                        ??_rd2RegCompleteHandler 007A  
                                         l1302 010D                                           l1250 0565  
                                         l1262 0453                                           l1263 0464  
                                         l4000 0DEA                                           l1249 0554  
                                         l4002 0E00                                           l4020 00B4  
                                         l4004 0E04                                           l4100 0645  
                                         l1612 0C49                                           l1701 0D32  
                                         l4030 00C8                                           l4022 00B9  
                                         l4006 0E0D                                           l4102 064D  
                                         l4200 0B55                                           l3320 17F3  
                                         l3400 1746                                           l4040 00DC  
                                         l4032 00CA                                           l4024 00BB  
                                         l4016 00AF                                           l4008 0E13  
                                         l4120 0D4B                                           l1720 0EF7  
                                         l1705 0AEB                                           l4202 0B5C  
                                         l4130 17C2                                           l3330 1739  
                                         l3322 0A2B                                           l3314 0B83  
                                         l3410 1770                                           l3402 1772  
                                         l4050 00F9                                           l4042 00E0  
                                         l4034 00D0                                           l4026 00BF  
                                         l4018 00B0                                           l4122 0D53  
                                         l4114 0D35                                           l1642 0F8B  
                                         l4106 0650                                           l4132 17C4  
                                         l4140 0D6A                                           l3324 0A30  
                                         l3316 0B89                                           l3332 1742  
                                         l3500 0E7A                                           l3404 1775  
                                         l4212 0CE7                                           l4204 0CD5  
                                         l4044 00EF                                           l4036 00D3  
                                         l4052 00FF                                           l4028 00C4  
                                         l4220 02A1                                           l4124 0D5A  
                                         l4116 0D35                                           l1660 0181  
                                         l1708 0AEB                                           l1644 0FA5  
                                         l4108 0669                                           l4060 0568  
                                         l4134 17C6                                           l4150 0D75  
                                         l4142 0D6C                                           l3326 0A38  
                                         l3318 0B9A                                           l3334 0A4B  
                                         l3342 0A5C                                           l3350 0A6D  
                                         l3414 173C                                           l3422 0A00  
                                         l3510 0E82                                           l4214 0CF2  
                                         l4206 0CE5                                           l4054 0104  
                                         l4046 00F3                                           l4038 00D8  
                                         l4230 02B2                                           l4222 02A7  
                                         l4126 0D5D                                           l4118 0D3F  
                                         l1734 0B05                                           l4070 059C  
                                         l4062 0579                                           l1655 0144  
                                         l1639 0F69                                           l1663 06BD  
                                         l4136 17C9                                           l4160 0D86  
                                         l4152 0D7E                                           l4144 0D6E  
                                         l4128 17B2                                           l3432 172A  
                                         l3328 1736                                           l3360 0A42  
                                         l3336 0A53                                           l3344 0A64  
                                         l3352 0A75                                           l3424 1724  
                                         l3416 175E                                           l3408 176D  
                                         l3600 0C7E                                           l4216 0CF7  
                                         l4056 0109                                           l4048 00F4  
                                         l4224 02AD                                           l4320 01AA  
                                         l4304 0182                                           l4400 0E1D  
                                         l1728 0C1F                                           l1672 076C  
                                         l1664 06C6                                           l4080 05CF  
                                         l4072 05A4                                           l4064 0581  
                                         l4170 0D91                                           l4162 0D88  
                                         l4154 0D80                                           l4146 0D70  
                                         l4138 0D66                                           l3362 0A49  
                                         l3338 0A5A                                           l3346 0A6B  
                                         l3354 0A7C                                           l3434 174F  
                                         l3442 17D4                                           l3450 17BA  
                                         l3506 0E7E                                           l3418 1761  
                                         l3602 0C86                                           l3610 0A04  
                                         l4218 0CFB                                           l4250 031F  
                                         l4242 02F7                                           l4234 02B9  
                                         l4330 01E3                                           l4322 01B0  
                                         l4314 0194                                           l4306 0189  
                                         l4410 0E39                                           l4402 0E23  
                                         l1658 0166                                           l4090 061B  
                                         l4082 05E0                                           l4074 05B0  
                                         l4066 0586                                           l1691 0673  
                                         l4180 17CE                                           l4172 0D93  
                                         l4164 0D8A                                           l4156 0D82  
                                         l4148 0D73                                           l3700 0B2D  
                                         l3428 1726                                           l3372 1793  
                                         l3540 0CAE                                           l3532 0CA4  
                                         l3436 1751                                           l3444 17D6  
                                         l3452 17BC                                           l3516 0E86  
                                         l3524 17AB                                           l3380 1757  
                                         l3604 0C8C                                           l3612 0A07  
                                         l3620 0A16                                           l4340 0004  
                                         l4260 0368                                           l4252 0325  
                                         l4244 02F8                                           l4236 02E0  
                                         l4228 02AF                                           l4332 01F5  
                                         l4324 01C1                                           l4316 019C  
                                         l4308 0192                                           l4412 0E45  
                                         l4404 0E2C                                           l1668 06E3  
                                         l4092 062C                                           l4084 05E8  
                                         l4068 058A                                           l1669 06FB  
                                         l4190 0AB6                                           l4182 17CF  
                                         l4174 0D96                                           l4166 0D8C  
                                         l4158 0D84                                           l3630 172D  
                                         l3702 0B30                                           l3606 1733  
                                         l3358 0A3A                                           l3366 0ABA  
                                         l3534 0CA7                                           l3550 0CB4  
                                         l3438 1752                                           l3446 17DB  
                                         l3454 17C0                                           l3470 0F09  
                                         l3462 0F01                                           l3526 17AD  
                                         l3390 1763                                           l3614 0A0A  
                                         l3622 0A18                                           l4342 0006  
                                         l4254 032B                                           l4246 02FF  
                                         l4238 02EA                                           l4334 01FE  
                                         l4326 01CA                                           l4318 01A5  
                                         l4406 0E2E                                           l1686 07E3  
                                         l4094 0634                                           l4086 0601  
                                         l4078 05BE                                           l4270 0D20  
                                         l4430 0C2E                                           l4192 0B3D  
                                         l4184 17D2                                           l4176 0D98  
                                         l4168 0D8E                                           l4280 0A8F  
                                         l3704 0B33                                           l3368 0AD0  
                                         l3376 174B                                           l3544 0CB0  
                                         l3480 0F3E                                           l3528 17B0  
                                         l3384 1759                                           l3392 1766  
                                         l3560 176B                                           l3608 0A03  
                                         l3640 0B70                                           l3632 0B61  
                                         l3624 0A1B                                           l3616 0A10  
                                         l3720 0BBC                                           l4360 004C  
                                         l4352 0015                                           l4256 034E  
                                         l4248 0306                                           l4424 0A7E  
                                         l4336 0207                                           l4328 01DC  
                                         l4408 0E2F                                           l4416 0E4E  
                                         l3712 17A0                                           l3800 0466  
                                         l4096 063F                                           l4272 0D2A  
                                         l4264 0D04                                           l4432 0C30  
                                         l4600 0285                                           l4186 0AA2  
                                         l4194 0B46                                           l4178 17CB  
                                         l4290 0A9E                                           l4282 0A92  
                                         l3706 0B36                                           l3538 0CAB  
                                         l3482 0F49                                           l3466 0F05  
                                         l3458 0EF8                                           l3378 1754  
                                         l3386 175C                                           l3642 0B74  
                                         l3634 0B68                                           l3618 0A15  
                                         l3722 0BC3                                           l3714 0BAA  
                                         l4354 003C                                           l4346 000D  
                                         l4258 0354                                           l4426 0A85  
                                         l4338 0209                                           l4370 0FB6  
                                         l3730 0EAF                                           l3810 04BE  
                                         l3802 0470                                           l4266 0D08  
                                         l4434 0C32                                           l4602 028F  
                                         l4188 0AB4                                           l4196 0B47  
                                         l4284 0A95                                           l3628 1730  
                                         l3708 0B3B                                           l3396 173F  
                                         l3484 0F4B                                           l3476 0F0D  
                                         l3492 0E5F                                           l3564 1777  
                                         l3580 0C55                                           l3572 0C4A  
                                         l3644 0B79                                           l3636 0B69  
                                         l3660 0DA8                                           l3724 0BC6  
                                         l3716 0BAA                                           l4348 000E  
                                         l4372 0FB8                                           l4364 0FA6  
                                         l3652 17DE                                           l3732 0EB4  
                                         l3900 0128                                           l3820 04E4  
                                         l3812 04C8                                           l3804 0491  
                                         l4268 0D0C                                           l4436 0C3F  
                                         l4428 0C22                                           l4198 0B4E  
                                         l4286 0A98                                           l3478 0F32  
                                         l3494 0E69                                           l3558 1768  
                                         l3566 1779                                           l3574 0C4C  
                                         l3646 0B7C                                           l3638 0B6B  
                                         l3670 0DB9                                           l3662 0DA9  
                                         l3718 0BB4                                           l3742 17E9  
                                         l4358 0042                                           l4382 0FDC  
                                         l4374 0FB9                                           l4366 0FA7  
                                         l3654 17E3                                           l3734 0EBE  
                                         l3726 0EA5                                           l3910 0147  
                                         l3902 012D                                           l3830 0523  
                                         l3822 04E8                                           l3814 04D5  
                                         l3806 049B                                           l3750 0C0F  
                                         ?_pad 0024                                           l4288 0A9B  
                                         l3496 0E6D                                           l3568 177A  
                                         l3576 0C51                                           l3648 0B7F  
                                         l3680 0DCD                                           l3672 0DBE  
                                         l3664 0DAA                                           l3656 0D9D  
                                         l4392 0BCF                                           l4376 0FC3  
                                         l4384 0FF0                                           l4368 0FAD  
                                         l3736 0EDC                                           l3728 0EAA  
                                         l3912 0153                                           l3904 013C  
                                         l3824 04F0                                           l3816 04D8  
                                         l3832 0531                                           l3808 04BA  
                                         l3840 0386                                           l3744 0BF9  
                                         l3752 0AED                                           l3498 0E77  
                                         l3586 0C59                                           l3690 177C  
                                         l3682 0DD0                                           l3674 0DC2  
                                         l3666 0DB3                                           l3658 0DA4  
                                         l3770 0066                                           l3762 0056  
                                         l4810 0DF2                                           l4394 0BD0  
                                         l4378 0FCF                                           l4386 0FF5  
                                         l3738 0EEE                                           l3914 0158  
                                         l3834 0536                                           l3826 0512  
                                         l3818 04E0                                           l3850 03E0  
                                         l3842 03A7                                           l3746 0BFC  
                                         l3754 0AF2                                           l3930 06C2  
                                         l3922 0676                                           l4570 020B  
                                         l4812 0C6D                                           l3596 0C76  
                                         l3684 0DD3                                           l3676 0DC7  
                                         l3668 0DB8                                           l3780 007F  
                                         l3772 006A                                           l3764 0057  
                                         l4396 0BE1                                           l3916 016B  
                                         l3908 0142                                           l3828 0522  
                                         l3860 0422                                           l3852 03E8  
                                         l3844 03B1                                           l3836 037B  
                                         l3748 0C0A                                           l3756 0AF6  
                                         l3940 06F6                                           l3932 06D5  
                                         l3924 0686                                           l4580 022A  
                                         l4572 020E                                           l3694 0B21  
                                         l4814 0E96                                           l3598 0C79  
                                         l3678 0DC8                                           l3790 0098  
                                         l3782 0084                                           l3774 0070  
                                         l3766 005B                                           l4398 0E1C  
                                         l4806 0FE8                                           l3918 017A  
                                         l3854 03EC                                           l3862 0430  
                                         l3846 03D0                                           l3838 037C  
                                         l3758 0AFF                                           l3870 0F5D  
                                         l3950 073B                                           l3942 0700  
                                         l3934 06DB                                           l3926 0699  
                                         l4590 024F                                           l4582 0233  
                                         l4574 0211                                           l3696 0B28  
                                         l4816 0F22                                           l3688 0A1D  
                                         l3792 009E                                           l3784 0088  
                                         l3776 0075                                           l3768 0061  
                                         l4808 0E56                                           l3864 0435  
                                         l3856 03F0                                           l3848 03DD  
                                         l3880 0F7D                                           l3872 0F62  
                                         l3960 07A2                                           l3952 073F  
                                         l3944 0703                                           l3936 06EB  
                                         l3928 069F                                           l4592 0268  
                                         l4584 023B                                           l4576 0214  
                                         l3698 0B29                                           l4818 0CC4  
                                         l3794 00A3                                           l3786 008E  
                                         l3778 0079                                           l3858 0412  
                                         l3890 0ADF                                           l3882 0F90  
                                         l3874 0F67                                           l3866 0F4F  
                                         l3970 07BE                                           l3954 077A  
                                         l3962 07A7                                           l3946 0708  
                                         l3938 06F1                                           l4594 026D  
                                         l4586 0248                                           l4578 021C  
                                         l3980 1787                                           l3796 00A8  
                                         l3788 0093                                           l3892 0B08  
                                         l3884 0F99                                           l3876 0F6C  
                                         l3868 0F54                                           l3972 07C3  
                                         l3964 07AE                                           l3956 0787  
                                         l3948 0737                                           l4596 0271  
                                         l4588 024C                                           l3982 178D  
                                         l3990 0DDB                                           l3894 0110  
                                         l3798 0465                                           l3878 0F78  
                                         l3974 07C7                                           l3966 07B3  
                                         l3958 0794                                           l4598 0280  
                                         l3984 1781                                           l3992 0DE0  
                                         l3896 0117                                           l3888 0AD2  
                                         l3968 07B8                                           l3976 07D0  
                                         l3994 0DE5                                           l3986 0DD8  
                                         l3898 011F                                           l3988 0DD9  
                                         STR_1 1060                                           STR_2 1800  
                                         STR_3 180C                                           STR_4 1806  
                                         u2000 07A2                                           u2001 07A1  
                                         u2010 07A7                                           u2011 07A6  
                                         u1300 0A30                                           u2020 07AE  
                                         u1301 0A2F                                           u2021 07AD  
                                         u2005 079E                                           u1310 0F00  
                                         u2110 00EF                                           u2030 07B3  
                                         u1311 0EFF                                           u2111 00EE  
                                         u2031 07B2                                           u1320 0F49  
                                         u1400 0B70                                           u2200 0D3F  
                                         u2040 07BE                                           u1321 0F48  
                                         u1401 0B6F                                           u2105 00E1  
                                         u2201 0D3E                                           u2041 07BD  
                                         u1330 0E77                                           u2130 00FF  
                                         u2050 00B4                                           u2210 0D65  
                                         u1410 17E3                                           u1331 0E76  
                                         u2131 00FE                                           u2115 00EB  
                                         u2051 00B3                                           u2211 0D64  
                                         u1411 17E2                                           u1340 179E  
                                         u1420 0DA4                                           u2140 0104  
                                         u2060 00BF                                           u1500 0C1F  
                                         u2300 0D2A                                           u1341 179D  
                                         u1421 0DA3                                           u2141 0103  
                                         u2125 00F5                                           u2061 00BE  
                                         u1501 0C1E                                           u2301 0D29  
                                         _LATA 0016                                           u1430 0B28  
                                         u1350 0C7E                                           u2230 0D01  
                                         u2070 00D0                                           u1510 0AFF  
                                         u2150 0579                                           _LATB 0017  
                                         u1431 0B27                                           u1351 0C7D  
                                         u2231 0D00                                           u2071 00CF  
                                         u1511 0AFE                                           u2151 0578  
                                         _LATC 0018                                           u1360 0C86  
                                         u1440 0BB4                                           u1520 005B  
                                         u2240 02A7                                           u2160 059C  
                                         u1361 0C85                                           u1441 0BB3  
                                         u1521 005A                                           u2225 0CD8  
                                         u2241 02A6                                           u2161 059B  
                                         u1290 0B89                                           u1370 0A0F  
                                         u1450 0BCE                                           u1530 006A  
                                         u2090 00E0                                           u2250 02AD  
                                         u2330 01B0                                           u1610 04C5  
                                         u2170 05CF                                           u1291 0B88  
                                         u1371 0A0E                                           u1451 0BCD  
                                         u1531 0069                                           u2091 00DF  
                                         u2251 02AC                                           u2331 01AF  
                                         u2171 05CE                                           u1380 0A15  
                                         u1540 0079                                           u2340 000C  
                                         u2260 02B8                                           u1460 0EAA  
                                         u1620 04D5                                           u1700 03B1  
                                         u2180 05E0                                           u1381 0A14  
                                         u1541 0078                                           u2341 000B  
                                         u2085 00D4                                           u2261 02B7  
                                         u1461 0EA9                                           u1621 04D4  
                                         u1701 03B0                                           u2181 05DF  
                                         u1390 0B68                                           u1550 0088  
                                         u2350 0014                                           u2270 02EA  
                                         u1470 0EAF                                           u1630 04E8  
                                         u2190 062C                                           u2510 0280  
                                         u1391 0B67                                           u1551 0087  
                                         u2351 0013                                           u2271 02E9  
                                         u1471 0EAE                                           u1631 04E7  
                                         u2191 062B                                           u2511 027F  
                                         u1560 0098                                           u2280 034E  
                                         u2360 0FFF                                           u1480 0EBE  
                                         u1640 0512                                           u1720 03DD  
                                         u1800 0F8B                                           u1561 0097  
                                         u2281 034D                                           u2361 0FFE  
                                         u1481 0EBD                                           u1641 0511  
                                         u1721 03DC                                           u1801 0F8A  
                                         u2290 0368                                           u2370 0BF6  
                                         u1490 0EDC                                           u1650 0531  
                                         u1570 0470                                           u1730 03F0  
                                         u1810 0F90                                           u2291 0367  
                                         u2371 0BF5                                           u1491 0EDB  
                                         u1651 0530                                           u1571 046F  
                                         u1731 03EF                                           u1811 0F8F  
                                         u2515 027C                                           u1660 0536  
                                         u1740 0412                                           u1820 0ADF  
                                         u1900 0692                                           u2285 034A  
                                         u1661 0535                                           u1645 050E  
                                         u1741 0411                                           u1821 0ADE  
                                         u1805 0F87                                           u1590 049B  
                                         u1750 0430                                           u1910 069F  
                                         u2295 0364                                           u2607 018D  
                                         u1495 0ED8                                           u1591 049A  
                                         u1751 042F                                           u1911 069E  
                                         u1840 0117                                           u1760 0435  
                                         u1680 0386                                           u2617 01A0  
                                         u1841 0116                                           u1761 0434  
                                         u1745 040E                                           u1681 0385  
                                         u1825 0ADB                                           u1850 012D  
                                         u1930 06C2                                           u1835 0B0B  
                                         u2627 01C5                                           u1851 012C  
                                         u1931 06C1                                           u2547 0241  
                                         u1860 0141                                           u1780 0F54  
                                         u1940 06D5                                           u2637 01D7  
                                         u1861 0140                                           u1781 0F53  
                                         u1941 06D4                                           u2557 0295  
                                         u1870 0166                                           u1790 0F62  
                                         u1950 06F1                                           u2647 01E7  
                                         u2567 0FB1                                           u1871 0165  
                                         u1791 0F61                                           u1951 06F0  
                                         u1880 016B                                           u1960 06F6  
                                         u2657 01F9                                           u2577 0FBD  
                                         u1881 016A                                           u1961 06F5  
                                         u1945 06D1                                           u1970 077A  
                                         u1890 0691                                           u2667 0A89  
                                         u2587 0E27                                           u1875 0162  
                                         u1971 0779                                           u1891 068F  
                                         u1980 0787                                           _PMD0 0796  
                                         u2597 0E33                                           u1981 0786  
                                         _PMD1 0797                                           u1990 0794  
                                         _PMD2 0798                                           u1991 0793  
                                         u1975 0776                                           _PMD3 0799  
                                         _PMD4 079A                                           _PMD5 079B  
                                         u1995 0790                                           _WPUA 0F39  
                                         _WPUB 0F44                                           _WPUC 0F4F  
                                         _WPUE 0F65                        ??_wr2RegCompleteHandler 007A  
                             ??_I2C1_MasterFsm 0020                      ??_I2C1_CallbackReturnStop 007A  
                                         abs@a 0073                                           _dbuf 0120  
                                         _ctoa 010E                                           _main 020B  
                                         _dtoa 0674                                           _prec 00C1  
                                         _nout 00BD                                           pad@i 0028  
                                         pad@p 0025                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           pad@w 002A  
                                         btemp 007E                                           start 0002  
                             ??_I2C1_SetBuffer 0072                  I2C1_CallbackReturnStop@funPtr 0079  
                                        ??_abs 0075                                          ??_pad 0027  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 17D4  
                              __end_of___aodiv 0566                                          _ADACQ 009D  
                            __end_of_I2C1_Open 0DD6                                          _ADCAP 009B  
                                        _ADACT 0099                                          ?_ctoa 007A  
                                        ?_main 0070                                          ?_dtoa 0030  
                                        _ADCLK 0098                                __end_of___aomod 0465  
                                        _ADCNT 010C                                          _ADPCH 009E  
                                        _ADREF 009A                                __end_of___awdiv 010E  
                                        _ADPRE 009C                                          _ADRPT 010D  
                              ___awdiv@divisor 0070                       __end_of_lcd_BigFont_init 0054  
                              ___awdiv@counter 0075                     __end_of_i2c1_fsmStateTable 1060  
                                        _OSCEN 0891                                   vfpfcnvrt@fmt 004E  
                                        _TRISA 0011                                          _TRISB 0012  
                                        _TRISC 0013                         ??_I2C1_MasterGetRxData 0070  
                                        _RXPPS 0ECB                          ?_I2C1_DO_RX_NACK_STOP 0070  
                   ??_I2C1_CallbackReturnReset 007A                              ??_I2C1_MasterOpen 0070  
                            ??_I2C1_MasterStop 0070                              ??_I2C1_Initialize 0070  
                                        _flags 00C3                                          _letra 00EA  
                                        _fputc 0EA5                                          _fputs 0BF7  
                                        pad@fp 002C                                          _width 00BF  
                                        ctoa@c 007A                                          _putch 179F  
                                        ctoa@l 0023                                          ctoa@w 0025  
                                        dtoa@d 0030                                          dtoa@i 004C  
                                 lcd_puts@dato 0036                                          dtoa@n 0044  
                                        dtoa@p 003E                                          dtoa@s 0042  
                                        dtoa@w 0040                                          pclath 000A  
                                        status 0003                                          wtemp0 007E  
                              __end_of_sprintf 0C4A                                   ??_I2C1_DO_RX 007A  
                                 ??_I2C1_DO_TX 007A                         ??_I2C1_DO_ADDRESS_NACK 007A  
                            _lcd_setCustomChar 0CD3                                   ??_I2C1_Close 0070  
                              __initialization 07E4                             ?_lcd_setCustomChar 0031  
                                 __end_of_ctoa 0182                                   __end_of_main 029F  
                                 __end_of_dtoa 07E4                                ??_lcd_send_byte 002E  
                                    ??_I2C1_WR 007E                                 ??_EUSART_Write 0070  
                           lcd_setCustomChar@i 0035                            ??_lcd_setCustomChar 0032  
                                       ??_ctoa 0020                         ??_I2C1_MasterOperation 007D  
                                       ??_main 006E                                         ??_dtoa 0038  
                           __end_of_I2C1_DO_RX 0EA5                                     _Send_D7_D4 0054  
                           __end_of_I2C1_DO_TX 0F4D                             __end_of_I2C1_Close 0B3D  
                                       _ADACCH 0091                                         _ADACCL 0090  
            _EUSART_DefaultFramingErrorHandler 0000                                         _ADCON0 0093  
                                       _ADCON1 0094                                         _ADCON2 0095  
                                       _ADCON3 0096                     _EUSART_OverrunErrorHandler 00E6  
                                       _ADERRH 0117                                         _ADERRL 0116  
                                       ?_fputc 0072                                         _ADLTHH 010F  
                                       _ADLTHL 010E                                         ?_fputs 007A  
                                       _ADRESH 008D                                         _ADRESL 008C  
                                       _ADSTAT 0097                                         _ADUTHH 0111  
                             ___awdiv@dividend 0072                                         _ADUTHL 0110  
                        lcd_setCustomChar@dato 0031                                         _ANSELA 0F38  
                                       ?_putch 0070                                         _ANSELB 0F43  
                                       _ANSELC 0F4E                                         _RC1REG 0119  
                                       _RC0PPS 0F20                                         _RC1STA 011D  
                                       _RC3PPS 0F23                                         _RC4PPS 0F24  
                                       _ODCONA 0F3A                                         _ODCONB 0F45  
                                       _ODCONC 0F50                               __end_of_bigChars 0A00  
                                       _INLVLA 0F3C                                         _INLVLB 0F47  
                                       _INLVLC 0F52                                         _INLVLE 0F68  
                                       _OSCFRQ 0893                                         u160lld 04BA  
                                       u171lld 03D0                      __end_of_lcd_setCustomChar 0D02  
                                       u158lld 048F                                         _TX1REG 011A  
                                       u167lld 0554                                         u192lld 06BD  
                                       u177lld 0453                                         u169lld 03A5  
                                       _TX1STA 011E                              ?_I2C1_MasterClose 0070  
                      ??_I2C1_MasterDisableIrq 0070                              ?_I2C1_MasterStart 0070  
                            ?_I2C1_MasterWrite 0070                       ?_I2C1_MasterWaitForEvent 0070  
                           ??_I2C1_MasterClose 0070                               _I2C1_DO_TX_EMPTY 0CA4  
                           ??_I2C1_MasterStart 0070                             ??_I2C1_MasterWrite 007E  
                                 vfprintf@cfmt 0065                               __end_of_lcd_init 020B  
                     ?_I2C1_Write1ByteRegister 0025                                         _g_LcdX 00CA  
                                       _g_LcdY 00C9                               __end_of_lcd_putc 0E5F  
                             __end_of_lcd_puts 1000                                      ??___aodiv 0070  
                                    ??___aomod 0070                                      ??___awdiv 0074  
                                       _buffer 0140                                         _custom 1000  
                             ___awdiv@quotient 0077                                         pad@buf 0024  
                                       ctoa@fp 0027                                         dtoa@fp 003D  
                     ??_I2C1_DO_SEND_ADR_WRITE 0071                                         _strlen 0AEC  
                            ?_I2C1_SetCallback 0070                         ??_I2C1_DO_RX_NACK_STOP 0070  
                              _ADCC_Initialize 0AA2                          _I2C1_DO_SEND_ADR_READ 17D4  
                                       fputc@c 0072                                 _PMD_Initialize 17B2  
                                       fputs@c 0020                                         fputs@i 0021  
                                       fputs@s 0023                  ?_I2C1_SetDataCompleteCallback 0075  
                           ??_I2C1_SetCallback 0073                               __end_of_vfprintf 0D33  
                                    ??_sprintf 006D                        _I2C1_DO_RX_NACK_RESTART 1772  
                            _SYSTEM_Initialize 0A8F                 I2C1_SetDataCompleteCallback@cb 0075  
                      __end_of__initialization 07FD                I2C1_MasterOperation@returnValue 0024  
                           ?_SYSTEM_Initialize 0070                                  ??_I2C1_Poller 007D  
                      _rdBlkRegCompleteHandler 0ABA                                 __pcstackCOMMON 0070  
                                 __pidataBANK1 1728                            ??_SYSTEM_Initialize 0072  
             __end_of_I2C1_MasterEnableRestart 1739                                  __end_of_fputc 0EF8  
                                __end_of_fputs 0C20                                  __end_of_putch 17A5  
                       __end_of_PMD_Initialize 17BA                   ??_I2C1_DO_SEND_RESTART_WRITE 0070  
                      ??_I2C1_MasterSendTxData 0070                                    ?_Send_D7_D4 0029  
                        __end_of_I2C1_DO_RESET 177C                ??_EUSART_SetOverrunErrorHandler 0072  
                            lcd_gotoxy@address 0035                                        ??_fputc 0075  
                    __end_of_SYSTEM_Initialize 0AA2                                        ??_fputs 007B  
                                      ??_putch 0071                                     __pbssBANK1 00A0  
                                   __pbssBANK2 0120                __end_of_I2C1_MasterWaitForEvent 179F  
                         __end_of_EUSART_Write 17E7                  __end_of_rd2RegCompleteHandler 0A6D  
                         I2C1_Open@returnValue 0072                  __end_of_wr2RegCompleteHandler 0A4B  
              __end_of_I2C1_Write1ByteRegister 0D66             __end_of_lcd_BigFont_writeBigString 0BF7  
                   _lcd_BigFont_writeBigString 0BCF                          _rd1RegCompleteHandler 0A4B  
                            _I2C1_DO_SEND_STOP 1763                          _wr1RegCompleteHandler 0A6D  
                                   __pmaintext 020B                       rd1RegCompleteHandler@ptr 0079  
                               lcd_send_byte@n 002D                             ?_I2C1_DO_SEND_STOP 0070  
                                      _I2C1_WR 0BA8                        __end_of_ADCC_Initialize 0ABA  
                              _I2C1_MasterOpen 0A10                                _I2C1_MasterStop 1739  
                              _I2C1_Initialize 17C2                            __end_of_I2C1_Poller 0A10  
                                      _ADFLTRH 0115                                        _ADFLTRL 0114  
                                      _ADPREVH 008F                                        _ADPREVL 008E  
                                      _ADSTPTH 0113                                        _ADSTPTL 0112  
                   lcd_BigFont_writeBigChar@ch 003F                                ?_PMD_Initialize 0070  
                       ?_I2C1_DO_SEND_ADR_READ 0070                            ??_I2C1_DO_SEND_STOP 0070  
                                      ?_strlen 0070                              __end_of_Write_PCF 17F3  
                            ?_lcd_BigFont_init 0070                              _I2C1_MasterIsNack 1793  
                                      _SP1BRGH 011C                                        _SP1BRGL 011B  
                                      _OSCCON1 088D                                        _OSCCON3 088F  
                                    _I2C1_Open 0D9C                      ??_I2C1_DO_RX_NACK_RESTART 0070  
                           ??_lcd_BigFont_init 0036                                     _lcd_gotoxy 0DD6  
                                      _OSCTUNE 0892                              _I2C1_MasterSetIrq 0A00  
                                      _SSP1ADD 018D                                        _SLRCONA 0F3B  
                                      _SLRCONB 0F46                                        _SLRCONC 0F51  
                                      _SSP1BUF 018C                             ?_I2C1_MasterIsNack 0070  
                   ?_I2C1_DO_SEND_RESTART_READ 0070                       ??_EUSART_SetErrorHandler 0072  
                                    ?_lcd_init 0070                 ??_I2C1_SetDataCompleteCallback 0078  
                                    ?_lcd_putc 0070                                      ?_lcd_puts 0036  
                           ?_I2C1_MasterSetIrq 0070                      lcd_BigFont_writeBigChar@x 0036  
                    lcd_BigFont_writeBigChar@y 0037                             _i2c1_fsmStateTable 1040  
                     _lcd_BigFont_writeBigChar 029F                            ??_I2C1_MasterIsNack 0070  
                    __end_of_I2C1_DO_SEND_STOP 1768                      ??_rdBlkRegCompleteHandler 007A  
                           I2C1_SetCallback@cb 0070                            ??_I2C1_MasterSetIrq 0070  
                            __end_of_lcd_clear 0A8F                                        ___aodiv 0465  
                                      ___aomod 037B                                        ___awdiv 00AF  
                                    ?_vfprintf 005F                                  ?_I2C1_DO_IDLE 0070  
                                ?_I2C1_DO_RCEN 0070                                        __ptext1 0C20  
                                      __ptext2 0D02                                        __ptext3 0566  
                                      __ptext4 0674                                        __ptext5 0F4D  
                                      __ptext6 0AEC                                        __ptext7 0BF7  
                                      __ptext8 0AD2                                        __ptext9 037B  
                     _I2C1_MasterEnableRestart 1736                      __end_of_I2C1_MasterIsNack 1799  
                 ?_I2C1_SetAddressNackCallback 0075                          _OSCILLATOR_Initialize 17CB  
                    __end_of_I2C1_MasterSetIrq 0A03                       __end_of_I2C1_DO_TX_EMPTY 0CD3  
                     ??_PIN_MANAGER_Initialize 0070                       wr1RegCompleteHandler@ptr 0079  
                                   ?_I2C1_Open 0070                       ?_I2C1_CallbackReturnStop 0079  
                                      _sprintf 0C20                                        clrloop0 17A6  
                                   ??_lcd_init 0031                                     ??_lcd_putc 0036  
                                   ??_lcd_puts 0038              __end_of_I2C1_DO_SEND_RESTART_READ 1759  
                         end_of_initialization 07FD                     __end_of_I2C1_MasterSendAck 174A  
                          _I2C1_MasterClearIrq 172A          __end_of_EUSART_SetOverrunErrorHandler 1793  
                _EUSART_SetOverrunErrorHandler 178D                           lcd_send_byte@address 0030  
                                      fputc@fp 0074                     __end_of_I2C1_MasterStartRx 173F  
                                      fputs@fp 007A                         ?_rd1RegCompleteHandler 0079  
                       _I2C1_DO_SEND_ADR_WRITE 17BA                   __end_of_I2C1_DO_SEND_RESTART 1763  
                            _EUSART_Initialize 0B3D                        __end_of_I2C1_MasterOpen 0A1D  
                       ?_wr1RegCompleteHandler 0079                        __end_of_I2C1_MasterStop 173C  
                      __end_of_I2C1_Initialize 17CB                                    _I2C1_Poller 0A03  
                    ?_I2C1_CallbackReturnReset 0079                  __end_of_I2C1_MasterDisableIrq 1733  
                                  _I2C1_Status 00A0                             ?_EUSART_Initialize 0070  
                            __end_of_vfpfcnvrt 0674                                    I2C1_WR@data 0025  
                          _I2C1_MasterSendNack 1742            __end_of_I2C1_SetAddressNackCallback 0A2A  
                  _I2C1_SetAddressNackCallback 0A1D                               ?_ADCC_Initialize 0070  
                                   ??_vfprintf 0062                           ?_I2C1_MasterClearIrq 0070  
                        __end_of_lcd_send_byte 0B21                                 ??_I2C1_DO_IDLE 0070  
                               ??_I2C1_DO_RCEN 0070             __end_of_I2C1_DO_SEND_RESTART_WRITE 175E  
                   _I2C1_DO_SEND_RESTART_WRITE 1759                                        strlen@a 0073  
                                      strlen@s 0074                            ??_EUSART_Initialize 0072  
              __end_of_rdBlkRegCompleteHandler 0AD2                  ??_I2C1_SetAddressNackCallback 0078  
              I2C1_SetDataCompleteCallback@ptr 0077                                    ?_lcd_gotoxy 0031  
                  I2C1_Write1ByteRegister@data 0026                                Send_D7_D4@datos 002C  
               I2C1_CallbackReturnReset@funPtr 0079                           ?_I2C1_MasterSendNack 0070  
                    __end_of_EUSART_Initialize 0B5F                     rdBlkRegCompleteHandler@ptr 0079  
                 ??_lcd_BigFont_writeBigString 0044                          ??_I2C1_MasterClearIrq 0070  
                   _EUSART_DefaultErrorHandler 0000                                    vfpfcnvrt@ap 004F  
                                  vfpfcnvrt@fp 005E                                    vfpfcnvrt@ll 0055  
                               _I2C1_DO_RX_ACK 1768                                   _EUSART_Write 17DD  
                       ?_OSCILLATOR_Initialize 0070                                 __end_of_custom 1040  
              __end_of_I2C1_CallbackReturnStop 1726                  __end_of_I2C1_MasterSendTxData 174F  
                               __end_of_strlen 0B06                                   ??_Send_D7_D4 002A  
                          start_initialization 07E4                                    ??_I2C1_Open 0070  
                                  __end_of_abs 0AEC                                    __end_of_pad 0FA6  
                        ??_I2C1_MasterSendNack 0070                                    putch@txData 0071  
                         lcd_setCustomChar@dir 0034                       I2C1_SetBuffer@bufferSize 0070  
                  ?_lcd_BigFont_writeBigString 0040                               ?_I2C1_MasterOpen 0070  
                             ?_I2C1_MasterStop 0070                 I2C1_Write1ByteRegister@address 0028  
                             ?_I2C1_Initialize 0070                 ?_EUSART_SetOverrunErrorHandler 0070  
                                Write_PCF@dato 0028                                    vfprintf@fmt 005F  
                   _EUSART_FramingErrorHandler 00E8                               ??_PMD_Initialize 0070  
                           __end_of_Send_D7_D4 00AF                         __end_of_I2C1_DO_RX_ACK 176D  
                       _EUSART_SetErrorHandler 1781                                       ?_I2C1_WR 0025  
                      ??_I2C1_DO_SEND_ADR_READ 0070                                    __pdataBANK1 00EA  
                                     ??_strlen 0072                               I2C1_Open@address 0071  
                         _I2C1_DO_SEND_RESTART 175E                                      ___latbits 0002  
                   ??_lcd_BigFont_writeBigChar 0038                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00D8                               ___aodiv@dividend 0028  
                                    _Write_PCF 17E7                  lcd_BigFont_writeBigString@str 0040  
                  ??_I2C1_DO_SEND_RESTART_READ 0070                           __end_of_I2C1_DO_IDLE 1754  
                         __end_of_I2C1_DO_RCEN 17B2                  I2C1_SetAddressNackCallback@cb 0075  
                                    __pnvBANK1 00E4                          _rd2RegCompleteHandler 0A5C  
                       _PIN_MANAGER_Initialize 0D66                                      _dtoa$2111 003B  
                        _wr2RegCompleteHandler 0A3A                     ??_I2C1_MasterEnableRestart 0070  
                     rd2RegCompleteHandler@ptr 0079                                 _I2C1_MasterFsm 0C76  
                                     ?___aodiv 0020                                       ?___aomod 0020  
                              ?_I2C1_DO_RX_ACK 0070                                       ?___awdiv 0070  
                             ___aodiv@quotient 0073                                      _lcd_clear 0A7E  
                      _I2C1_MasterWaitForEvent 1799                               _I2C1_MasterClose 172D  
                               _I2C1_SetBuffer 0A2A                               _I2C1_MasterStart 1733  
                             _I2C1_MasterWrite 177C                                       _BAUD1CON 011F  
                      _I2C1_Write1ByteRegister 0D33                          ?_I2C1_DO_SEND_RESTART 0070  
                            ?_I2C1_DO_TX_EMPTY 0070                                     ?_Write_PCF 0070  
             __end_of_I2C1_CallbackReturnReset 1728                             ??_I2C1_DO_TX_EMPTY 007A  
                                     ?_sprintf 0067                        ??_rd1RegCompleteHandler 007A  
                      ?_I2C1_DO_SEND_ADR_WRITE 0070                      I2C1_MasterSendTxData@data 0070  
                      ??_wr1RegCompleteHandler 007A                               _I2C1_SetCallback 0B82  
       EUSART_SetErrorHandler@interruptHandler 0070                                     _I2C1_DO_RX 0E5F  
                                   _I2C1_DO_TX 0EF8                                      clear_ram0 17A5  
                                     _PIE3bits 0719                              _eusartRxLastError 00CF  
                                   _I2C1_Close 0B21                                   ?_I2C1_Poller 0070  
                       __end_of_I2C1_MasterFsm 0CA4                   __end_of_I2C1_MasterGetRxData 1742  
              ??_EUSART_SetFramingErrorHandler 0072                                       _PIR3bits 070F  
                           _I2C1_MasterSendAck 1746                      _I2C1_DO_SEND_RESTART_READ 1754  
                                     _SSP1CON1 0190                                       _SSP1CON2 0191  
            _EUSART_DefaultOverrunErrorHandler 0000                         __end_of_I2C1_SetBuffer 0A3A  
                                     _SSP1STAT 018F           __end_of_I2C1_SetDataCompleteCallback 1800  
                 _I2C1_SetDataCompleteCallback 17F3                             _I2C1_MasterStartRx 173C  
                                   ?_lcd_clear 0070                                      _vfpfcnvrt 0566  
                  ?_I2C1_DO_SEND_RESTART_WRITE 0070                     I2C1_Write1ByteRegister@reg 0025  
                          ?_I2C1_MasterSendAck 0070                                     _ADCON0bits 0093  
                                   _ADCON1bits 0094                                     _ADCON2bits 0095  
                                   _ADCON3bits 0096                       ?_I2C1_DO_RX_NACK_RESTART 0070  
                                    lcd_init@i 0032                    lcd_BigFont_writeBigString@c 0047  
                  lcd_BigFont_writeBigString@x 0042                    lcd_BigFont_writeBigString@y 0043  
                          ?_I2C1_MasterStartRx 0070                   __end_of_I2C1_DO_ADDRESS_NACK 0C76  
                                    lcd_putc@c 0038                                   ??_lcd_gotoxy 0032  
                     wr2RegCompleteHandler@ptr 0079                 __end_of_I2C1_DO_SEND_ADR_WRITE 17C2  
                                _I2C1_DO_RESET 1777                                     vfpfcnvrt@c 005D  
                               I2C1_WR@address 0026                          I2C1_Close@returnValue 0071  
                     ?_rdBlkRegCompleteHandler 0079                            I2C1_SetCallback@idx 0074  
                          I2C1_SetCallback@ptr 0072                           ??_I2C1_MasterSendAck 0070  
                       ?_rd2RegCompleteHandler 0079                   __end_of_I2C1_MasterOperation 0B82  
                       ?_wr2RegCompleteHandler 0079                           ??_I2C1_MasterStartRx 0070  
                                   _ADSTATbits 0097                                ?_I2C1_MasterFsm 0070  
                                   vfprintf@ap 0061                                     vfprintf@fp 0064  
                    ??_I2C1_MasterWaitForEvent 0070                          _I2C1_MasterDisableIrq 1730  
                           __end_of_lcd_gotoxy 0E1A                        ??_OSCILLATOR_Initialize 0070  
                          _EUSART_ErrorHandler 00E4                                ?_I2C1_SetBuffer 0070  
                                   ?_vfpfcnvrt 004E                      ??_I2C1_Write1ByteRegister 0027  
                              ___aodiv@divisor 0020                                       _bigChars 0800  
                              ___aodiv@counter 0071                         ??_I2C1_DO_SEND_RESTART 0070  
                                   sprintf@fmt 0067               __end_of_lcd_BigFont_writeBigChar 037B  
                               ?_I2C1_DO_RESET 0070                                    ??_Write_PCF 0027  
                                     __ptext10 0465                                       __ptext11 010E  
                                     __ptext20 0BCF                                       __ptext12 0EA5  
                                     __ptext21 029F                                       __ptext13 179F  
                                     __ptext30 0A1D                                       __ptext22 0DD6  
                                     __ptext14 17DD                                       __ptext31 0D9C  
                                     __ptext23 00AF                                       __ptext15 0FA6  
                                     __ptext40 1772                                       __ptext32 0A10  
                                     __ptext24 0004                                       __ptext16 0E1A  
                                     __ptext41 176D                                       __ptext33 177C  
                                     __ptext25 0CD3                                       __ptext17 0182  
                                     __ptext50 17BA                                       __ptext42 1768  
                                     __ptext34 0B5F                                       __ptext26 0B06  
                                     __ptext18 0D33                                       __ptext51 17D4  
                                     __ptext43 1763                                       __ptext35 0A03  
                                     __ptext27 0054                                       __ptext19 0A7E  
                                     __ptext60 173C                                       __ptext52 174F  
                                     __ptext44 175E                                       __ptext36 1799  
                                     __ptext28 17E7                                       __ptext61 1726  
                                     __ptext53 0CA4                                       __ptext45 1759  
                                     __ptext37 0C76                                       __ptext29 0BA8  
                                     __ptext70 0A2A                                       __ptext62 1724  
                                     __ptext54 0A00                                       __ptext46 1754  
                                     __ptext38 0C4A                                       __ptext71 1739  
                                     __ptext63 0ABA                                       __ptext55 1793  
                                     __ptext47 17AB                                       __ptext39 1777  
                                     __ptext80 0D66                                       __ptext72 1736  
                                     __ptext64 0A6D                                       __ptext56 174A  
                                     __ptext48 0E5F                                       __ptext81 17CB  
                                     __ptext73 1733                                       __ptext65 0A5C  
                                     __ptext57 1746                                       __ptext49 0EF8  
                                     __ptext82 17C2                                       __ptext74 0B21  
                                     __ptext66 0A4B                                       __ptext58 173F  
                                     __ptext83 0B3D                                       __ptext75 1730  
                                     __ptext67 0A3A                                       __ptext59 1742  
                                     __ptext84 178D                                       __ptext76 172D  
                                     __ptext68 17F3                                       __ptext85 1787  
                                     __ptext77 172A                                       __ptext69 0B82  
                                     __ptext86 1781                                       __ptext78 0A8F  
                                     __ptext87 0AA2                                       __ptext79 17B2  
                                 _SSP1CON1bits 0190                                   _SSP1CON2bits 0191  
                                     _lcd_init 0182                                       _lcd_putc 0E1A  
                                     _lcd_puts 0FA6                                       _contador 00C7  
                     _I2C1_CallbackReturnReset 1726                                    ?_I2C1_DO_RX 0070  
                                  ?_I2C1_DO_TX 0070                               _lcd_BigFont_init 0004  
                  __end_of_I2C1_MasterClearIrq 172D                   __end_of_I2C1_DO_RX_NACK_STOP 1772  
                                  ?_I2C1_Close 0070                        ?_EUSART_SetErrorHandler 0070  
                                   _RC1STAbits 011D  EUSART_SetOverrunErrorHandler@interruptHandler 0070  
              __end_of_I2C1_DO_RX_NACK_RESTART 1777                       I2C1_MasterOperation@read 0023  
                                     _vfprintf 0D02                                    ??_lcd_clear 0031  
        __end_of_EUSART_SetFramingErrorHandler 178D                  _EUSART_SetFramingErrorHandler 1787  
                                 _SSP1STATbits 018F                  __end_of_I2C1_DO_SEND_ADR_READ 17DD  
                                 _I2C1_DO_IDLE 174F                                   _I2C1_DO_RCEN 17AB  
                             ___aomod@dividend 0028                    __end_of_I2C1_MasterSendNack 1746  
               I2C1_SetAddressNackCallback@ptr 0077                           _I2C1_MasterGetRxData 173F  
                        _I2C1_MasterSendTxData 174A                                      sprintf@ap 00D8  
                     __end_of_I2C1_MasterClose 1730                        ?_PIN_MANAGER_Initialize 0070  
                     __end_of_I2C1_MasterStart 1736                       __end_of_I2C1_MasterWrite 1781  
               __end_of_EUSART_SetErrorHandler 1787                               ??_I2C1_DO_RX_ACK 0070  
                      _I2C1_CallbackReturnStop 1724                           _I2C1_DO_ADDRESS_NACK 0C4A  
                       ?_I2C1_MasterDisableIrq 0070  EUSART_SetFramingErrorHandler@interruptHandler 0070  
                              ___aomod@divisor 0020                                    ??_vfpfcnvrt 0050  
                              ___aomod@counter 0071                                  _lcd_send_byte 0B06  
                                __pstringtext1 0800                                  __pstringtext2 1000  
                                __pstringtext3 1040                                  __pstringtext4 1060  
                                __pstringtext5 1800                                  __pstringtext6 1806  
                                __pstringtext7 180C                                  __pstringtext8 0000  
                     __end_of_I2C1_SetCallback 0BA8                                       sprintf@f 00DA  
                                     sprintf@s 00D9                                     _SSP1DATPPS 0EC6  
                                   _SSP1CLKPPS 0EC5                                ??_I2C1_DO_RESET 0070  
                         _I2C1_MasterOperation 0B5F                          ?_I2C1_MasterGetRxData 0070  
                                   _TX1STAbits 011E                             EUSART_Write@txData 0070  
                                 ___aodiv@sign 0072                 __end_of_PIN_MANAGER_Initialize 0D9C  
                            ??_ADCC_Initialize 0070                  __end_of_rd1RegCompleteHandler 0A5C  
                __end_of_wr1RegCompleteHandler 0A7E                                   ___aomod@sign 0072  
                        ?_I2C1_DO_ADDRESS_NACK 0070                      ?_lcd_BigFont_writeBigChar 0036  
