CCS PCM C Compiler, Version 5.093, 4770               09-ago.-21 20:24

               Filename:   G:\OneDrive - Soluciones Marva\proyectos de pics\Canal\Dsiplay7Seg\WIZARD\main.lst

               ROM used:   106 words (1%)
                           Largest free fragment is 2048
               RAM used:   5 (0%) at main() level
                           16 (2%) worst case
               Stack used: 0 locations
               Stack size: 16

0000:  MOVLP  00
0001:  GOTO   003
0002:  NOP
.................... #include <main.h>
.................... #include <16F18855.h>
.................... //////////// Standard Header file for the PIC16F18855 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F18855
.................... 
.................... #list
.................... 
.................... #device ADC=10
.................... 
.................... #FUSES NOEXTOSC              	//External Oscillator not enabled
.................... #FUSES RSTOSC_HFINTRC_32MHZ  	//On Power-up clock running from HFINTRC at 32 MHz
.................... #FUSES NOBROWNOUT            	//No brownout reset
.................... 
.................... #use delay(internal=32MHz)
.................... #use FIXED_IO( A_outputs=PIN_A3,PIN_A2,PIN_A1,PIN_A0 )
.................... #use FIXED_IO( B_outputs=PIN_B7,PIN_B6,PIN_B5,PIN_B4,PIN_B3,PIN_B2,PIN_B1,PIN_B0 )
.................... #define d1	PIN_B0
.................... #define d2	PIN_B1
.................... #define d3	PIN_B2
.................... #define d4	PIN_B3
.................... 
.................... 
.................... #pin_select U1TX = PIN_C0
.................... #pin_select U1RX = PIN_C1
.................... 
.................... #use rs232(baud=9600,parity=N,xmit=PIN_C0,rcv=PIN_C1,bits=8,stream=PORT1)
.................... #pin_select SDA1=PIN_C3
.................... #pin_select SCL1=PIN_C4
.................... #use i2c(Master,Fast,sda=PIN_C3,scl=PIN_C4,force_hw)
.................... 
.................... 
.................... 
.................... void main()
0003:  MOVLW  55
0004:  MOVLB  1D
0005:  MOVWF  0F
0006:  MOVLW  AA
0007:  MOVWF  0F
0008:  BCF    0F.0
0009:  MOVLW  14
000A:  MOVWF  45
000B:  MOVLW  13
000C:  MOVWF  46
000D:  MOVLW  11
000E:  MOVWF  4B
000F:  MOVLW  10
0010:  MOVLB  1E
0011:  MOVWF  20
0012:  MOVLW  15
0013:  MOVWF  23
0014:  MOVLW  14
0015:  MOVWF  24
0016:  MOVLW  55
0017:  MOVLB  1D
0018:  MOVWF  0F
0019:  MOVLW  AA
001A:  MOVWF  0F
001B:  BSF    0F.0
001C:  MOVLB  11
001D:  CLRF   12
001E:  CLRF   0F
001F:  CLRF   11
0020:  MOVLW  05
0021:  MOVWF  13
0022:  MOVLW  10
0023:  MOVWF  0D
0024:  MOVLB  02
0025:  BSF    1F.3
0026:  MOVLW  40
0027:  MOVWF  1B
0028:  MOVLW  03
0029:  MOVWF  1C
002A:  MOVLW  A6
002B:  MOVWF  1E
002C:  MOVLW  90
002D:  MOVWF  1D
002E:  MOVLB  00
002F:  BSF    13.4
0030:  BSF    13.3
0031:  MOVLB  03
0032:  BCF    12.0
0033:  BCF    12.1
0034:  BCF    12.3
0035:  MOVLW  13
0036:  MOVWF  0D
0037:  MOVLW  28
0038:  MOVWF  10
0039:  BCF    0F.7
003A:  BCF    0F.6
003B:  MOVLB  1E
003C:  CLRF   38
003D:  CLRF   43
003E:  CLRF   4E
003F:  MOVLB  13
0040:  CLRF   11
0041:  CLRF   12
0042:  CLRF   13
0043:  CLRF   10
0044:  CLRF   15
0045:  CLRF   16
0046:  CLRF   17
0047:  CLRF   14
.................... {
....................    port_a_pullups(15);
0048:  MOVLW  0F
0049:  MOVLB  1E
004A:  MOVWF  39
....................    port_b_pullups(0x02);
004B:  MOVLW  02
004C:  MOVWF  44
....................    setup_adc_ports(sAN4, VSS_VDD);
004D:  MOVLW  00
004E:  MOVLB  01
004F:  MOVWF  1A
0050:  MOVLW  10
0051:  MOVLB  1E
0052:  MOVWF  38
0053:  MOVLW  00
0054:  MOVWF  43
0055:  MOVWF  4E
....................    setup_adc(ADC_CLOCK_DIV_32 | ADC_TAD_MUL_0 | ADC_LEGACY_MODE | ADC_THRESHOLD_INT_DISABLED);
0056:  MOVLW  08
0057:  MOVLB  01
0058:  MOVWF  15
0059:  CLRF   16
005A:  MOVLW  0F
005B:  MOVWF  18
005C:  CLRF   1D
005D:  MOVLB  02
005E:  CLRF   0D
005F:  MOVLW  84
0060:  MOVLB  01
0061:  MOVWF  13
....................    set_tris_a(0b11110000);
0062:  MOVLW  F0
0063:  MOVLB  00
0064:  MOVWF  11
....................    output_a(9);
0065:  MOVWF  11
0066:  MOVLW  09
0067:  MOVWF  16
....................    while(TRUE)
....................    {
0068:  GOTO   068
.................... 
.................... 
....................       //TODO: User Code
....................    }
.................... 
.................... }
0069:  SLEEP

Configuration Fuses:
   Word  1: 3F9C   NOEXTOSC RSTOSC_HFINTRC_PLL NOCLKOUT CKS FCMEN
   Word  2: 3F3D   MCLR PUT NOLPBOR NOBROWNOUT BORV24 ZCDDIS PPS1WAY STVREN NODEBUG
   Word  3: 3F9F   WDTSW NOWDT WDTWIN_SW WDTCLK_SW
   Word  4: 1FFF   NOWRT SCANE NOLVP
   Word  5: 3FFF   NOPROTECT NOCPD
